From: <Saved by Blink>
Snapshot-Content-Location: https://chat.deepseek.com/a/chat/s/d3ca1b37-dc3d-4574-93cc-4856968e7448
Subject: DeepSeek - Into the Unknown
Date: Fri, 14 Feb 2025 15:17:42 +0700
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--fdOnjK2T5C2RpZV2JgMgfa0Io4YenUpag4Gm1ntYXL----"


------MultipartBoundary--fdOnjK2T5C2RpZV2JgMgfa0Io4YenUpag4Gm1ntYXL----
Content-Type: text/html
Content-ID: <frame-6E8B2769D01863576E12BA849CE34609@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://chat.deepseek.com/a/chat/s/d3ca1b37-dc3d-4574-93cc-4856968e7448

<!DOCTYPE html><html lang=3D"en" class=3D"notranslate" translate=3D"no"><he=
ad><meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3DUTF-8"=
><link rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-8d23a3d4-f2ad-4=
9fe-8506-d58d78cc8b16@mhtml.blink" /><link rel=3D"stylesheet" type=3D"text/=
css" href=3D"cid:css-1f6e68be-a0d2-4d85-9872-d586443ff9ba@mhtml.blink" /><l=
ink rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-5ec2dd9a-84c4-413a=
-bf47-8c13343db13a@mhtml.blink" /><link rel=3D"stylesheet" type=3D"text/css=
" href=3D"cid:css-9d89947b-7d00-46f1-8270-6120bc8aef44@mhtml.blink" /><titl=
e>DeepSeek - Into the Unknown</title><meta name=3D"viewport" content=3D"ini=
tial-scale=3D1.0,maximum-scale=3D1,width=3Ddevice-width,viewport-fit=3Dcove=
r"><meta name=3D"commit-id" content=3D"085ae035"><meta name=3D"description"=
 content=3D"Chat with DeepSeek AI =E2=80=93 your intelligent assistant for =
coding, content creation, file reading, and more. Upload documents, engage =
in long-context conversations, and get expert help in AI, natural language =
processing, and beyond. | =E6=B7=B1=E5=BA=A6=E6=B1=82=E7=B4=A2=EF=BC=88Deep=
Seek=EF=BC=89=E5=8A=A9=E5=8A=9B=E7=BC=96=E7=A8=8B=E4=BB=A3=E7=A0=81=E5=BC=
=80=E5=8F=91=E3=80=81=E5=88=9B=E6=84=8F=E5=86=99=E4=BD=9C=E3=80=81=E6=96=87=
=E4=BB=B6=E5=A4=84=E7=90=86=E7=AD=89=E4=BB=BB=E5=8A=A1=EF=BC=8C=E6=94=AF=E6=
=8C=81=E6=96=87=E4=BB=B6=E4=B8=8A=E4=BC=A0=E5=8F=8A=E9=95=BF=E6=96=87=E6=9C=
=AC=E5=AF=B9=E8=AF=9D=EF=BC=8C=E9=9A=8F=E6=97=B6=E4=B8=BA=E6=82=A8=E6=8F=90=
=E4=BE=9B=E9=AB=98=E6=95=88=E7=9A=84AI=E6=94=AF=E6=8C=81=E3=80=82"><meta na=
me=3D"keywords" content=3D"DeepSeek,DeepSeek AI,DeepSeek Chat,AI assistant,=
coding assistant,long-context LLM,Open Source LLM,natural language processi=
ng,AI chatbot,AI long text,AI content creation,large language model,=E6=B7=
=B1=E5=BA=A6=E6=B1=82=E7=B4=A2,=E5=A4=A7=E8=AF=AD=E8=A8=80=E6=A8=A1=E5=9E=
=8B,=E8=87=AA=E7=84=B6=E8=AF=AD=E8=A8=80=E5=A4=84=E7=90=86,AI=E8=81=8A=E5=
=A4=A9=E6=9C=BA=E5=99=A8=E4=BA=BA,=E4=BB=A3=E7=A0=81=E5=BC=80=E5=8F=91,=E5=
=88=9B=E6=84=8F=E5=86=99=E4=BD=9C,AI=E5=8A=A9=E6=89=8B,=E9=95=BF=E6=96=87=
=E6=9C=AC=E5=AF=B9=E8=AF=9D,=E6=96=87=E4=BB=B6=E5=A4=84=E7=90=86AI,=E5=A4=
=A7=E6=A8=A1=E5=9E=8B=E5=85=AC=E5=8F=B8,=E4=BA=BA=E5=B7=A5=E6=99=BA=E8=83=
=BD,AI=E5=BC=80=E5=8F=91=E5=8A=A9=E6=89=8B"><meta property=3D"og:url" conte=
nt=3D"https://chat.deepseek.com"><meta property=3D"og:type" content=3D"webs=
ite"><meta property=3D"og:title" content=3D"DeepSeek"><meta property=3D"og:=
description" content=3D"Chat with DeepSeek AI."><meta property=3D"og:image"=
 content=3D"https://chat.deepseek.com/deepseek-chat.jpeg"><meta name=3D"twi=
tter:card" content=3D"summary_large_image"><meta property=3D"twitter:domain=
" content=3D"deepseek.com"><meta property=3D"twitter:url" content=3D"https:=
//chat.deepseek.com"><meta name=3D"twitter:title" content=3D"DeepSeek"><met=
a name=3D"twitter:description" content=3D"Chat with DeepSeek AI."><meta nam=
e=3D"twitter:image" content=3D"https://chat.deepseek.com/deepseek-chat.jpeg=
"><meta name=3D"google" content=3D"notranslate"><meta name=3D"ip" content=
=3D"49.237.45.57"><meta name=3D"region" content=3D"TH"><link rel=3D"preconn=
ect" href=3D"https://fonts.googleapis.com/"><link rel=3D"preconnect" href=
=3D"https://fonts.gstatic.com/" crossorigin=3D""><link rel=3D"apple-touch-i=
con" href=3D"https://cdn.deepseek.com/chat/icon.png"><link href=3D"https://=
fonts.googleapis.com/css2?family=3DRoboto+Mono:wght@400;500&amp;display=3Ds=
wap" rel=3D"stylesheet" media=3D"all"><link rel=3D"icon" type=3D"image/x-ic=
on" href=3D"https://chat.deepseek.com/favicon.svg"><link href=3D"https://ch=
at.deepseek.com/static/main.b1b0d916f8.css" rel=3D"stylesheet"><link data-w=
ebpack=3D"@deepseek/chat:chunk-945" rel=3D"stylesheet" href=3D"https://chat=
.deepseek.com/static/katex.b0999f1208.css"></head><body class=3D"en_US ligh=
t" style=3D"--app-height: 944px;"><div id=3D"root"><div class=3D"cb86951c">=
<div class=3D"cddfb2ed"></div><div class=3D"c3ecdb44"><div class=3D"dc04ec1=
d a02af2e6"><div class=3D"a7f3a288 f0d4f23d"><div class=3D"ds-icon" style=
=3D"font-size: 44px; width: 44px; height: 44px; cursor: pointer;"><svg view=
Box=3D"0 0 30 30" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" xmlns:=
xlink=3D"http://www.w3.org/1999/xlink"><path id=3D"path" d=3D"M27.501 8.468=
75C27.249 8.3457 27.1406 8.58008 26.9932 8.69922C26.9434 8.73828 26.9004 8.=
78906 26.8584 8.83398C26.4902 9.22852 26.0605 9.48633 25.5 9.45508C24.6787 =
9.41016 23.9785 9.66797 23.3594 10.2969C23.2275 9.52148 22.79 9.05859 22.12=
5 8.76172C21.7764 8.60742 21.4238 8.45312 21.1807 8.11719C21.0098 7.87891 2=
0.9639 7.61328 20.8779 7.35156C20.8242 7.19336 20.7695 7.03125 20.5879 7.00=
391C20.3906 6.97266 20.3135 7.13867 20.2363 7.27734C19.9258 7.84375 19.8066=
 8.46875 19.8174 9.10156C19.8447 10.5234 20.4453 11.6562 21.6367 12.4629C21=
.7725 12.5547 21.8076 12.6484 21.7646 12.7832C21.6836 13.0605 21.5869 13.33=
01 21.501 13.6074C21.4473 13.7852 21.3662 13.8242 21.1768 13.7461C20.5225 1=
3.4727 19.957 13.0684 19.458 12.5781C18.6104 11.7578 17.8438 10.8516 16.887=
7 10.1426C16.6631 9.97656 16.4395 9.82227 16.207 9.67578C15.2314 8.72656 16=
.335 7.94727 16.5898 7.85547C16.8574 7.75977 16.6826 7.42773 15.8193 7.4316=
4C14.957 7.43555 14.167 7.72461 13.1611 8.10938C13.0137 8.16797 12.8594 8.2=
1094 12.7002 8.24414C11.7871 8.07227 10.8389 8.0332 9.84766 8.14453C7.98242=
 8.35352 6.49219 9.23633 5.39648 10.7441C4.08105 12.5547 3.77148 14.6133 4.=
15039 16.7617C4.54883 19.0234 5.70215 20.8984 7.47559 22.3633C9.31348 23.88=
09 11.4307 24.625 13.8457 24.4824C15.3125 24.3984 16.9463 24.2012 18.7881 2=
2.6406C19.2529 22.8711 19.7402 22.9629 20.5498 23.0332C21.1729 23.0918 21.7=
725 23.002 22.2373 22.9062C22.9648 22.752 22.9141 22.0781 22.6514 21.9531C2=
0.5186 20.959 20.9863 21.3633 20.5605 21.0371C21.6445 19.752 23.2783 18.418=
 23.917 14.0977C23.9668 13.7539 23.9238 13.5391 23.917 13.2598C23.9131 13.0=
918 23.9512 13.0254 24.1445 13.0059C24.6787 12.9453 25.1973 12.7988 25.6738=
 12.5352C27.0557 11.7793 27.6123 10.5391 27.7441 9.05078C27.7637 8.82422 27=
.7402 8.58789 27.501 8.46875ZM15.46 21.8613C13.3926 20.2344 12.3906 19.6992=
 11.9766 19.7227C11.5898 19.7441 11.6592 20.1875 11.7441 20.4766C11.833 20.=
7617 11.9492 20.959 12.1123 21.209C12.2246 21.375 12.3018 21.623 12 21.8066=
C11.334 22.2207 10.1768 21.668 10.1221 21.6406C8.77539 20.8477 7.64941 19.7=
988 6.85547 18.3652C6.08984 16.9844 5.64453 15.5039 5.57129 13.9238C5.55176=
 13.541 5.66406 13.4062 6.04297 13.3379C6.54199 13.2461 7.05762 13.2266 7.5=
5664 13.2988C9.66602 13.6074 11.4619 14.5527 12.9668 16.0469C13.8262 16.900=
4 14.4766 17.918 15.1465 18.9121C15.8584 19.9688 16.625 20.9746 17.6006 21.=
7988C17.9443 22.0879 18.2197 22.3086 18.4824 22.4707C17.6895 22.5586 16.365=
2 22.5781 15.46 21.8613ZM16.4502 15.4805C16.4502 15.3105 16.5859 15.1758 16=
.7568 15.1758C16.7949 15.1758 16.8301 15.1836 16.8613 15.1953C16.9033 15.21=
09 16.9424 15.2344 16.9727 15.2695C17.0273 15.3223 17.0586 15.4004 17.0586 =
15.4805C17.0586 15.6504 16.9229 15.7852 16.7529 15.7852C16.582 15.7852 16.4=
502 15.6504 16.4502 15.4805ZM19.5273 17.0625C19.3301 17.1426 19.1328 17.212=
9 18.9434 17.2207C18.6494 17.2344 18.3281 17.1152 18.1533 16.9688C17.8828 1=
6.7422 17.6895 16.6152 17.6074 16.2168C17.5732 16.0469 17.5928 15.7852 17.6=
23 15.6348C17.6934 15.3105 17.6152 15.1035 17.3877 14.9141C17.2012 14.7598 =
16.9658 14.7188 16.7061 14.7188C16.6094 14.7188 16.5205 14.6758 16.4541 14.=
6406C16.3457 14.5859 16.2568 14.4512 16.3418 14.2852C16.3691 14.2324 16.501=
 14.1016 16.5322 14.0781C16.8838 13.877 17.29 13.9434 17.666 14.0938C18.014=
6 14.2363 18.2773 14.498 18.6562 14.8672C19.0439 15.3145 19.1133 15.4395 19=
.334 15.7734C19.5078 16.0371 19.667 16.3066 19.7754 16.6152C19.8408 16.8066=
 19.7559 16.9648 19.5273 17.0625Z" fill-rule=3D"nonzero" fill=3D"#4D6BFE"><=
/path></svg></div><div style=3D"margin-top: 38px; display: flex;"><div clas=
s=3D"ds-icon-button" tabindex=3D"0" style=3D"--ds-icon-button-size: 28px;">=
<svg viewBox=3D"0 0 30 30" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" xmlns:xlink=3D"http://www.w3.org/1999/xlink"><defs><clipPath id=3D"clip1=
381_20236"><rect id=3D"=E6=89=93=E5=BC=80=E8=BE=B9=E6=A0=8F0730" width=3D"3=
0.000000" height=3D"30.000000" fill=3D"white" fill-opacity=3D"0"></rect></c=
lipPath></defs><rect id=3D"=E6=89=93=E5=BC=80=E8=BE=B9=E6=A0=8F0730" width=
=3D"30.000000" height=3D"30.000000" fill=3D"#FFFFFF" fill-opacity=3D"0"></r=
ect><g clip-path=3D"url(#clip1381_20236)"><rect id=3D"rect" x=3D"11.572754"=
 y=3D"17.683594" rx=3D"1.000947" width=3D"5.995172" height=3D"2.001895" tra=
nsform=3D"rotate(-42.841 11.572754 17.683594)" fill=3D"currentColor" fill-o=
pacity=3D"1.000000"></rect><rect id=3D"rect" x=3D"16.033691" y=3D"16.271484=
" rx=3D"0.995190" width=3D"6.002943" height=3D"1.990380" transform=3D"rotat=
e(-139.147 16.033691 16.271484)" fill=3D"currentColor" fill-opacity=3D"1.00=
0000"></rect><path id=3D"path" d=3D"M20.09 25.48L9.89 25.5C9.47 25.5 9.05 2=
5.45 8.64 25.37C8.23 25.29 7.83 25.17 7.44 25C7.05 24.84 6.68 24.64 6.33 24=
.41C5.98 24.18 5.66 23.91 5.36 23.61C5.07 23.31 4.8 22.99 4.57 22.64C4.34 2=
2.29 4.14 21.92 3.98 21.53C3.82 21.14 3.69 20.74 3.61 20.32C3.53 19.91 3.49=
 19.49 3.49 19.07L3.49 10.92C3.49 10.5 3.53 10.08 3.61 9.67C3.69 9.25 3.82 =
8.85 3.98 8.46C4.14 8.07 4.34 7.7 4.57 7.35C4.8 7 5.07 6.68 5.36 6.38C5.66 =
6.08 5.98 5.81 6.33 5.58C6.68 5.35 7.05 5.15 7.44 4.99C7.83 4.82 8.23 4.7 8=
.64 4.62C9.05 4.54 9.47 4.5 9.89 4.5L20.09 4.48C20.51 4.48 20.93 4.52 21.34=
 4.6C21.75 4.69 22.15 4.81 22.54 4.97C22.93 5.13 23.3 5.33 23.65 5.57C24 5.=
8 24.32 6.06 24.62 6.36C24.92 6.66 25.18 6.98 25.41 7.33C25.65 7.69 25.84 8=
.06 26.01 8.45C26.17 8.84 26.29 9.24 26.37 9.65C26.45 10.06 26.49 10.48 26.=
5 10.91L26.5 19.06C26.49 19.48 26.45 19.89 26.37 20.31C26.29 20.72 26.17 21=
.12 26.01 21.51C25.84 21.9 25.65 22.27 25.41 22.62C25.18 22.97 24.92 23.3 2=
4.62 23.6C24.32 23.89 24 24.16 23.65 24.39C23.3 24.63 22.93 24.83 22.54 24.=
99C22.15 25.15 21.75 25.27 21.34 25.35C20.93 25.44 20.51 25.48 20.09 25.48Z=
M9.89 6.59C9.61 6.59 9.32 6.62 9.05 6.67C8.77 6.73 8.5 6.81 8.24 6.92C7.98 =
7.03 7.73 7.16 7.49 7.32C7.26 7.48 7.04 7.66 6.84 7.86C6.64 8.06 6.46 8.28 =
6.3 8.51C6.14 8.75 6.01 9 5.9 9.26C5.79 9.52 5.71 9.8 5.66 10.07C5.6 10.35 =
5.57 10.63 5.57 10.92L5.57 19.07C5.57 19.36 5.6 19.64 5.66 19.92C5.71 20.19=
 5.79 20.47 5.9 20.73C6.01 20.99 6.14 21.24 6.3 21.48C6.46 21.71 6.64 21.93=
 6.84 22.13C7.04 22.33 7.26 22.51 7.49 22.67C7.73 22.83 7.98 22.96 8.24 23.=
07C8.5 23.18 8.77 23.26 9.05 23.32C9.32 23.37 9.61 23.4 9.89 23.4L20.09 23.=
39C20.38 23.39 20.66 23.36 20.94 23.3C21.21 23.25 21.48 23.17 21.75 23.06C2=
2.01 22.95 22.26 22.81 22.49 22.66C22.73 22.5 22.95 22.32 23.15 22.12C23.35=
 21.91 23.52 21.7 23.68 21.46C23.84 21.22 23.97 20.98 24.08 20.71C24.19 20.=
45 24.27 20.18 24.33 19.9C24.38 19.62 24.41 19.34 24.41 19.06L24.41 10.91C2=
4.41 10.62 24.38 10.34 24.33 10.06C24.27 9.78 24.19 9.51 24.08 9.25C23.97 8=
.98 23.84 8.74 23.68 8.5C23.52 8.26 23.35 8.04 23.15 7.84C22.95 7.64 22.73 =
7.46 22.49 7.3C22.26 7.15 22.01 7.01 21.75 6.9C21.48 6.79 21.21 6.71 20.94 =
6.66C20.66 6.6 20.38 6.57 20.09 6.57L9.89 6.59Z" fill=3D"currentColor" fill=
-opacity=3D"1.000000" fill-rule=3D"nonzero"></path><path id=3D"rect" d=3D"M=
8.49 5.5L10.53 5.5L10.59 24.41L8.54 24.41L8.49 5.5Z" fill=3D"currentColor" =
fill-opacity=3D"1.000000" fill-rule=3D"evenodd"></path></g></svg></div></di=
v><div style=3D"margin-top: 48px; display: flex;"><div class=3D"ds-icon-but=
ton" tabindex=3D"0" style=3D"--ds-icon-button-size: 28px;"><svg viewBox=3D"=
0 0 30 30" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" xmlns:xlink=
=3D"http://www.w3.org/1999/xlink"><defs><clipPath id=3D"clip1325_20400"><re=
ct id=3D"=E6=96=B0=E5=BB=BA=E4=BC=9A=E8=AF=9D0730" width=3D"30.000000" heig=
ht=3D"30.000000" fill=3D"white" fill-opacity=3D"0"></rect></clipPath></defs=
><g clip-path=3D"url(#clip1325_20400)"><path id=3D"path" d=3D"M10.51 26.52C=
10.35 26.52 10.19 26.49 10.04 26.43C9.89 26.37 9.76 26.28 9.64 26.17C9.53 2=
6.06 9.44 25.93 9.37 25.78C9.31 25.63 9.28 25.48 9.28 25.32L9.25 22.87C8.89=
 22.82 8.53 22.74 8.19 22.62C7.84 22.5 7.51 22.36 7.19 22.19C6.86 22.01 6.5=
6 21.81 6.28 21.58C5.99 21.36 5.73 21.11 5.49 20.83C5.25 20.56 5.04 20.27 4=
.85 19.96C4.67 19.65 4.51 19.33 4.38 18.99C4.25 18.65 4.16 18.3 4.09 17.95C=
4.03 17.6 4 17.24 4 16.88L4 10.38C4 9.99 4.03 9.6 4.11 9.21C4.19 8.82 4.31 =
8.45 4.46 8.08C4.61 7.72 4.8 7.37 5.03 7.04C5.25 6.72 5.5 6.41 5.78 6.13C6.=
07 5.86 6.38 5.61 6.71 5.39C7.04 5.17 7.4 4.98 7.77 4.83C8.14 4.68 8.52 4.5=
7 8.91 4.49C9.31 4.41 9.7 4.38 10.11 4.38L14.35 4.38C14.5 4.38 14.63 4.4 14=
.77 4.46C14.9 4.51 15.02 4.59 15.12 4.69C15.22 4.79 15.3 4.9 15.35 5.03C15.=
41 5.16 15.43 5.3 15.43 5.44C15.43 5.58 15.41 5.71 15.35 5.84C15.3 5.97 15.=
22 6.09 15.12 6.19C15.02 6.29 14.9 6.37 14.77 6.42C14.63 6.47 14.5 6.5 14.3=
5 6.5L10.11 6.5C9.85 6.5 9.59 6.53 9.34 6.58C9.08 6.62 8.83 6.7 8.6 6.8C8.3=
6 6.89 8.13 7.01 7.91 7.15C7.7 7.3 7.5 7.46 7.31 7.64C7.13 7.82 6.97 8.01 6=
.82 8.22C6.68 8.44 6.56 8.66 6.46 8.9C6.36 9.13 6.28 9.37 6.23 9.62C6.18 9.=
87 6.16 10.12 6.16 10.38L6.16 16.88C6.16 17.14 6.18 17.39 6.23 17.65C6.29 1=
7.9 6.36 18.15 6.46 18.39C6.56 18.62 6.69 18.85 6.83 19.07C6.98 19.28 7.15 =
19.48 7.33 19.66C7.52 19.85 7.72 20.01 7.94 20.15C8.16 20.3 8.39 20.42 8.63=
 20.52C8.87 20.62 9.13 20.69 9.38 20.74C9.64 20.79 9.9 20.82 10.17 20.82C10=
.33 20.82 10.49 20.85 10.64 20.91C10.79 20.97 10.92 21.06 11.04 21.17C11.15=
 21.28 11.24 21.41 11.31 21.56C11.37 21.71 11.4 21.86 11.41 22.02L11.42 23.=
53L14.15 21.56C14.85 21.07 15.62 20.82 16.48 20.82L19.87 20.82C20.13 20.82 =
20.38 20.79 20.64 20.74C20.89 20.69 21.14 20.62 21.38 20.52C21.62 20.42 21.=
85 20.3 22.06 20.16C22.28 20.02 22.48 19.86 22.66 19.68C22.84 19.5 23.01 19=
.3 23.15 19.09C23.29 18.88 23.42 18.66 23.52 18.42C23.61 18.19 23.69 17.94 =
23.74 17.69C23.79 17.44 23.82 17.19 23.82 16.94L23.82 13.58C23.82 13.44 23.=
84 13.3 23.9 13.17C23.95 13.04 24.03 12.93 24.13 12.83C24.23 12.73 24.35 12=
.65 24.48 12.6C24.62 12.54 24.75 12.52 24.9 12.52C25.04 12.52 25.18 12.54 2=
5.31 12.6C25.44 12.65 25.56 12.73 25.66 12.83C25.76 12.93 25.84 13.04 25.9 =
13.17C25.95 13.3 25.98 13.44 25.98 13.58L25.98 16.94C25.98 17.33 25.94 17.7=
2 25.86 18.11C25.78 18.5 25.67 18.87 25.51 19.24C25.36 19.6 25.17 19.95 24.=
95 20.27C24.73 20.6 24.47 20.9 24.19 21.18C23.9 21.46 23.6 21.71 23.26 21.9=
3C22.93 22.15 22.58 22.33 22.21 22.48C21.83 22.63 21.45 22.75 21.06 22.83C2=
0.67 22.9 20.27 22.94 19.87 22.94L17.19 22.94C16.33 22.94 15.56 23.19 14.86=
 23.69L11.24 26.29C11.02 26.44 10.78 26.52 10.51 26.52Z" fill=3D"currentCol=
or" fill-opacity=3D"1.000000" fill-rule=3D"nonzero"></path><rect id=3D"rect=
" x=3D"17.770508" y=3D"6.396484" rx=3D"1.062250" width=3D"8.060087" height=
=3D"2.124500" fill=3D"currentColor" fill-opacity=3D"1.000000"></rect><rect =
id=3D"rect" x=3D"20.718750" y=3D"3.500000" rx=3D"1.081197" width=3D"2.16239=
3" height=3D"7.918844" fill=3D"currentColor" fill-opacity=3D"1.000000"></re=
ct></g></svg></div></div><div style=3D"flex: 1 1 0%;"></div><div class=3D"b=
91228e4"><div class=3D"ds-icon" style=3D"font-size: 28px; width: 28px; heig=
ht: 28px;"><svg viewBox=3D"0 0 1024 1024" xmlns=3D"http://www.w3.org/2000/s=
vg" width=3D"300" height=3D"300"><path d=3D"M725.333 1024H298.667a128 128 0=
 0 1-128-128V128a128 128 0 0 1 128-128h426.666a128 128 0 0 1 128 128v768a12=
8 128 0 0 1-128 128zM298.667 85.333A42.667 42.667 0 0 0 256 128v768a42.667 =
42.667 0 0 0 42.667 42.667h426.666A42.667 42.667 0 0 0 768 896V128a42.667 4=
2.667 0 0 0-42.667-42.667z" fill=3D"currentColor"></path><path d=3D"M469.33=
299999999997 853.333a42.667 42.667 0 1 0 85.334 0 42.667 42.667 0 1 0-85.33=
4 0zM554.667 213.333h-85.334a42.667 42.667 0 0 1 0-85.333h85.334a42.667 42.=
667 0 0 1 0 85.333z" fill=3D"currentColor"></path></svg></div></div><div cl=
ass=3D"ede5bc47"><img class=3D"fdf01f38" src=3D"https://lh3.googleuserconte=
nt.com/a/ACg8ocJNVyVeFB5I8-pIjRqQmiRmHjWl5_shh7sWttP-wjA3I833VfXhHw=3Ds96-c=
" alt=3D"" aria-hidden=3D"true"></div></div><div class=3D"cbcd962e a02af2e6=
"></div></div><div class=3D"f2eea526"><div class=3D"a5cd95be"><div class=3D=
"be88ba8a"><div class=3D"f8d1e4c0"><div style=3D"flex: 1 1 0%; min-width: 0=
px; display: flex; place-content: center; z-index: 12; margin-top: 10px;"><=
div class=3D"d8ed659a" tabindex=3D"0" style=3D"outline: none;">Unet Pytorch=
: Pls write the imag</div></div><div class=3D"b480065b"></div></div><div cl=
ass=3D"efe408db"><div class=3D"ds-icon d7829b2f e7d8739b" style=3D"font-siz=
e: 24px; width: 24px; height: 24px; color: rgb(139, 139, 139);"><svg width=
=3D"28" height=3D"28" viewBox=3D"0 0 28 28" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg"><path d=3D"M23.7222 4H4.27776C3.57207 4 3 4.57207 3 5.2=
7776C3 5.98345 3.57207 6.55553 4.27776 6.55553H23.7222C24.4279 6.55553 25 5=
.98345 25 5.27776C25 4.57207 24.4279 4 23.7222 4Z" fill=3D"currentColor"></=
path><path d=3D"M14.7593 12.8887H4.27776C3.57207 12.8887 3 13.4607 3 14.166=
4C3 14.8721 3.57207 15.4442 4.27776 15.4442H14.7593C15.465 15.4442 16.037 1=
4.8721 16.037 14.1664C16.037 13.4607 15.465 12.8887 14.7593 12.8887Z" fill=
=3D"currentColor"></path><path d=3D"M23.7222 21.7334H4.27776C3.57207 21.733=
4 3 22.3055 3 23.0112C3 23.7169 3.57207 24.2889 4.27776 24.2889H23.7222C24.=
4279 24.2889 25 23.7169 25 23.0112C25 22.3055 24.4279 21.7334 23.7222 21.73=
34Z" fill=3D"currentColor"></path></svg></div><div class=3D"ds-icon d7829b2=
f ecf90b28" style=3D"font-size: 24px; width: 24px; height: 24px; color: rgb=
(139, 139, 139);"><svg width=3D"28" height=3D"28" viewBox=3D"0 0 28 28" fil=
l=3D"none" xmlns=3D"http://www.w3.org/2000/svg"><path d=3D"M9.10999 27C8.92=
999 27 8.76001 26.96 8.60001 26.9C8.43001 26.83 8.29 26.74 8.16 26.61C8.03 =
26.49 7.94 26.3499 7.87 26.1899C7.79999 26.0299 7.76001 25.8599 7.76001 25.=
6899L7.73001 23.04C7.34001 22.98 6.95001 22.8799 6.57001 22.7599C6.19001 22=
.6299 5.83001 22.48 5.48001 22.29C5.13001 22.1 4.79999 21.88 4.48999 21.63C=
4.17999 21.39 3.89 21.1199 3.63 20.82C3.37 20.52 3.13999 20.21 2.92999 19.8=
7C2.72999 19.53 2.56001 19.18 2.42001 18.82C2.28001 18.45 2.17001 18.07 2.1=
0001 17.69C2.03001 17.3 2 16.92 2 16.53V9.46995C2 9.03995 2.04 8.61995 2.12=
 8.19995C2.21 7.77995 2.34 7.36995 2.5 6.96995C2.67 6.57995 2.88 6.19995 3.=
12 5.84995C3.36 5.48995 3.64001 5.15995 3.95001 4.85995C4.26001 4.55995 4.5=
9999 4.28995 4.95999 4.04995C5.32999 3.80995 5.70999 3.60995 6.10999 3.4499=
5C6.51999 3.27995 6.94 3.15995 7.37 3.07995C7.79999 2.98995 8.23001 2.94995=
 8.67001 2.94995H13.3C13.46 2.94995 13.61 2.97995 13.76 3.03995C13.9 3.0999=
5 14.03 3.17995 14.14 3.28995C14.25 3.39995 14.33 3.51995 14.39 3.65995C14.=
45 3.79995 14.48 3.94995 14.48 4.09995C14.48 4.25995 14.45 4.39995 14.39 4.=
54995C14.33 4.68995 14.25 4.80995 14.14 4.91995C14.03 5.02995 13.9 5.10995 =
13.76 5.16995C13.61 5.22995 13.46 5.25995 13.3 5.25995H8.67001C8.38001 5.25=
995 8.09999 5.27995 7.82999 5.33995C7.54999 5.38995 7.27999 5.46995 7.01999=
 5.57995C6.75999 5.67995 6.50999 5.80995 6.26999 5.96995C6.03999 6.11995 5.=
82 6.29995 5.62 6.48995C5.42 6.68995 5.23999 6.89995 5.07999 7.12995C4.9299=
9 7.35995 4.78999 7.59995 4.67999 7.85995C4.57999 8.10995 4.49 8.37995 4.44=
 8.64995C4.38 8.91995 4.35999 9.18995 4.35999 9.46995V16.53C4.35999 16.81 4=
.38 17.08 4.44 17.36C4.5 17.63 4.58 17.9 4.69 18.16C4.8 18.42 4.93 18.67 5.=
09 18.9C5.25 19.13 5.43001 19.3499 5.64001 19.5499C5.84001 19.75 6.05999 19=
.92 6.29999 20.08C6.53999 20.24 6.79 20.37 7.06 20.47C7.32 20.58 7.6 20.66 =
7.88 20.72C8.16001 20.77 8.44001 20.7999 8.73001 20.7999C8.91001 20.7999 9.=
08 20.83 9.25 20.9C9.41 20.97 9.55999 21.0599 9.67999 21.18C9.80999 21.3099=
 9.91001 21.45 9.98001 21.61C10.05 21.77 10.08 21.94 10.09 22.11L10.1 23.74=
L13.08 21.61C13.84 21.07 14.69 20.7999 15.63 20.7999H19.32C19.61 20.7999 19=
.89 20.77 20.16 20.72C20.44 20.67 20.71 20.59 20.97 20.4799C21.23 20.3699 2=
1.48 20.24 21.72 20.09C21.95 19.94 22.17 19.76 22.37 19.57C22.57 19.3699 22=
.75 19.16 22.91 18.93C23.07 18.7 23.2 18.46 23.31 18.2C23.41 17.95 23.5 17.=
68 23.55 17.41C23.61 17.14 23.63 16.87 23.63 16.59V12.94C23.63 12.79 23.66 =
12.64 23.72 12.5C23.78 12.36 23.87 12.23 23.98 12.13C24.09 12.02 24.22 11.9=
3 24.36 11.88C24.51 11.82 24.66 11.79 24.82 11.79C24.97 11.79 25.12 11.82 2=
5.27 11.88C25.41 11.93 25.54 12.02 25.65 12.13C25.76 12.23 25.85 12.36 25.9=
1 12.5C25.97 12.64 26 12.79 26 12.94V16.59C26 17.02 25.95 17.44 25.87 17.86=
C25.78 18.28 25.66 18.69 25.49 19.08C25.32 19.48 25.11 19.8499 24.87 20.209=
9C24.63 20.57 24.35 20.9 24.04 21.2C23.73 21.5 23.39 21.7699 23.03 22.0099C=
22.67 22.2499 22.28 22.45 21.88 22.61C21.47 22.77 21.06 22.9 20.63 22.9799C=
20.2 23.07 19.76 23.11 19.32 23.11H16.4C15.47 23.11 14.62 23.3799 13.86 23.=
9199L9.91 26.74C9.67 26.91 9.39999 27 9.10999 27Z" fill=3D"currentColor"></=
path><path d=3D"M24.6805 5.14453H18.1874C17.5505 5.14453 17.0342 5.66086 17=
.0342 6.29778C17.0342 6.9347 17.5505 7.45102 18.1874 7.45102H24.6805C25.317=
5 7.45102 25.8338 6.9347 25.8338 6.29778C25.8338 5.66086 25.3175 5.14453 24=
.6805 5.14453Z" fill=3D"currentColor"></path><path d=3D"M22.6137 3.1804C22.=
6137 2.52848 22.0852 2 21.4333 2C20.7814 2 20.2529 2.52848 20.2529 3.1804V9=
.4168C20.2529 10.0687 20.7814 10.5972 21.4333 10.5972C22.0852 10.5972 22.61=
37 10.0687 22.6137 9.4168V3.1804Z" fill=3D"currentColor"></path></svg></div=
></div></div><div class=3D"b83ee326"><div class=3D"f6004764"><div class=3D"=
f72b0bab"><div class=3D"dad65929"><div class=3D"fa81"><div class=3D"fbb737a=
4">Unet Pytorch: Pls write the image segmenation complete python code for t=
raining with my custom dataset as below structure.
image_dir =3D "my_dataset/images"
mask_dir =3D "my_dataset/masks"<div class=3D"ds-flex e0558cb1" style=3D"pos=
ition: absolute; right: calc(100% + 18px); top: 12px; gap: 12px;"><div clas=
s=3D"ds-icon-button" tabindex=3D"0" style=3D"--ds-icon-button-text-color: #=
909090; --ds-icon-button-size: 20px;"><div class=3D"ds-icon" style=3D"font-=
size: 20px; width: 20px; height: 20px;"><svg viewBox=3D"0 0 20 20" fill=3D"=
none" xmlns=3D"http://www.w3.org/2000/svg" xmlns:xlink=3D"http://www.w3.org=
/1999/xlink"><defs><clipPath id=3D"clip1248_20193"><rect id=3D"=E9=8D=A5=E6=
=83=A7=E7=9C=B0_1" width=3D"17.052675" height=3D"17.052441" transform=3D"tr=
anslate(1.000000 1.000000)" fill=3D"white" fill-opacity=3D"0"></rect></clip=
Path><clipPath id=3D"clip1257_20794"><rect id=3D"=E5=A4=8D=E5=88=B6" width=
=3D"20.000000" height=3D"20.000000" fill=3D"white" fill-opacity=3D"0"></rec=
t></clipPath></defs><g clip-path=3D"url(#clip1257_20794)"><g clip-path=3D"u=
rl(#clip1248_20193)"><path id=3D"path" d=3D"M5.03 14.64C4.77 14.64 4.5 14.6=
2 4.24 14.56C3.98 14.51 3.73 14.43 3.49 14.33C3.24 14.23 3.01 14.1 2.79 13.=
96C2.57 13.81 2.37 13.64 2.18 13.45C1.99 13.26 1.82 13.05 1.68 12.83C1.53 1=
2.61 1.4 12.37 1.3 12.13C1.2 11.88 1.13 11.63 1.07 11.36C1.02 11.1 1 10.84 =
1 10.57L1 5.07C1 4.8 1.02 4.54 1.07 4.27C1.13 4.01 1.2 3.76 1.3 3.51C1.4 3.=
26 1.53 3.03 1.68 2.81C1.82 2.58 1.99 2.38 2.18 2.19C2.37 2 2.57 1.83 2.79 =
1.68C3.01 1.53 3.24 1.41 3.49 1.31C3.73 1.2 3.98 1.13 4.24 1.07C4.5 1.02 4.=
77 1 5.03 1L10.49 1C10.75 1 11.01 1.02 11.27 1.07C11.53 1.13 11.78 1.2 12.0=
3 1.31C12.27 1.41 12.51 1.53 12.73 1.68C12.95 1.83 13.15 2 13.34 2.19C13.53=
 2.38 13.69 2.58 13.84 2.81C13.99 3.03 14.11 3.26 14.21 3.51C14.31 3.76 14.=
39 4.01 14.44 4.27C14.5 4.54 14.52 4.8 14.52 5.07L12.94 5.07C12.94 4.91 12.=
92 4.75 12.89 4.58C12.86 4.43 12.81 4.27 12.75 4.12C12.69 3.97 12.61 3.83 1=
2.52 3.69C12.43 3.56 12.33 3.43 12.22 3.32C12.1 3.2 11.98 3.1 11.85 3.01C11=
.71 2.92 11.57 2.84 11.42 2.78C11.27 2.72 11.12 2.67 10.96 2.64C10.81 2.61 =
10.65 2.59 10.49 2.59L5.03 2.59C4.87 2.59 4.71 2.61 4.55 2.64C4.4 2.67 4.24=
 2.72 4.09 2.78C3.95 2.84 3.8 2.92 3.67 3.01C3.54 3.1 3.41 3.2 3.3 3.32C3.1=
8 3.43 3.08 3.56 2.99 3.69C2.9 3.83 2.83 3.97 2.77 4.12C2.71 4.27 2.66 4.43=
 2.63 4.58C2.6 4.75 2.58 4.91 2.58 5.07L2.58 10.57C2.58 10.73 2.6 10.89 2.6=
3 11.05C2.66 11.21 2.71 11.37 2.77 11.52C2.83 11.67 2.9 11.81 2.99 11.94C3.=
08 12.08 3.18 12.2 3.3 12.32C3.41 12.43 3.54 12.54 3.67 12.63C3.8 12.72 3.9=
5 12.79 4.09 12.86C4.24 12.92 4.4 12.96 4.55 13C4.71 13.03 4.87 13.04 5.03 =
13.04L5.03 14.64Z" fill=3D"currentColor" fill-opacity=3D"1.000000" fill-rul=
e=3D"evenodd"></path></g><path id=3D"path" d=3D"M14.75 18.91L9.3 18.91C9.03=
 18.91 8.77 18.88 8.51 18.83C8.25 18.78 8 18.7 7.75 18.6C7.51 18.49 7.27 18=
.37 7.05 18.22C6.83 18.07 6.63 17.9 6.44 17.71C6.25 17.52 6.09 17.32 5.94 1=
7.1C5.79 16.87 5.67 16.64 5.57 16.39C5.47 16.14 5.39 15.89 5.34 15.63C5.28 =
15.37 5.26 15.1 5.26 14.83L5.26 9.33C5.26 9.06 5.28 8.8 5.34 8.54C5.39 8.28=
 5.47 8.02 5.57 7.77C5.67 7.53 5.79 7.29 5.94 7.07C6.09 6.85 6.25 6.64 6.44=
 6.45C6.63 6.26 6.83 6.09 7.05 5.95C7.27 5.8 7.51 5.67 7.75 5.57C8 5.47 8.2=
5 5.39 8.51 5.34C8.77 5.29 9.03 5.26 9.3 5.26L14.75 5.26C15.01 5.26 15.28 5=
.29 15.54 5.34C15.8 5.39 16.05 5.47 16.29 5.57C16.54 5.67 16.77 5.8 16.99 5=
.95C17.21 6.09 17.41 6.26 17.6 6.45C17.79 6.64 17.96 6.85 18.1 7.07C18.25 7=
.29 18.37 7.53 18.48 7.77C18.58 8.02 18.65 8.28 18.71 8.54C18.76 8.8 18.78 =
9.06 18.78 9.33L18.78 14.83C18.78 15.1 18.76 15.37 18.71 15.63C18.65 15.89 =
18.58 16.14 18.48 16.39C18.37 16.64 18.25 16.87 18.1 17.1C17.96 17.32 17.79=
 17.52 17.6 17.71C17.41 17.9 17.21 18.07 16.99 18.22C16.77 18.37 16.54 18.4=
9 16.29 18.6C16.05 18.7 15.8 18.78 15.54 18.83C15.28 18.88 15.01 18.91 14.7=
5 18.91ZM9.3 6.86C9.13 6.86 8.97 6.87 8.82 6.91C8.66 6.94 8.51 6.98 8.36 7.=
05C8.21 7.11 8.07 7.18 7.93 7.28C7.8 7.37 7.68 7.47 7.56 7.58C7.45 7.7 7.35=
 7.82 7.26 7.96C7.17 8.09 7.09 8.24 7.03 8.38C6.97 8.54 6.92 8.69 6.89 8.85=
C6.86 9.01 6.84 9.17 6.84 9.33L6.84 14.83C6.84 15 6.86 15.16 6.89 15.32C6.9=
2 15.48 6.97 15.63 7.03 15.78C7.09 15.93 7.17 16.07 7.26 16.21C7.35 16.34 7=
.45 16.47 7.56 16.58C7.68 16.7 7.8 16.8 7.93 16.89C8.07 16.98 8.21 17.06 8.=
36 17.12C8.51 17.18 8.66 17.23 8.82 17.26C8.97 17.29 9.13 17.31 9.3 17.31L1=
4.75 17.31C14.91 17.31 15.07 17.29 15.23 17.26C15.38 17.23 15.54 17.18 15.6=
9 17.12C15.83 17.06 15.98 16.98 16.11 16.89C16.24 16.8 16.37 16.7 16.48 16.=
58C16.59 16.47 16.7 16.34 16.79 16.21C16.87 16.07 16.95 15.93 17.01 15.78C1=
7.07 15.63 17.12 15.48 17.15 15.32C17.18 15.16 17.2 15 17.2 14.83L17.2 9.33=
C17.2 9.17 17.18 9.01 17.15 8.85C17.12 8.69 17.07 8.54 17.01 8.38C16.95 8.2=
4 16.87 8.09 16.79 7.96C16.7 7.82 16.59 7.7 16.48 7.58C16.37 7.47 16.24 7.3=
7 16.11 7.28C15.98 7.19 15.83 7.11 15.69 7.05C15.54 6.98 15.38 6.94 15.23 6=
.91C15.07 6.87 14.91 6.86 14.75 6.86L9.3 6.86Z" fill=3D"currentColor" fill-=
opacity=3D"1.000000" fill-rule=3D"nonzero"></path></g></svg></div></div><di=
v class=3D"ds-icon-button" tabindex=3D"0" style=3D"--ds-icon-button-text-co=
lor: #909090; --ds-icon-button-size: 20px;"><div class=3D"ds-icon" style=3D=
"font-size: 20px; width: 20px; height: 20px;"><svg width=3D"20" height=3D"2=
0" viewBox=3D"0 0 20 20" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
><path d=3D"M18.2286 17.3545H1.77142C1.34538 17.3545 1 17.6999 1 18.1259C1 =
18.552 1.34538 18.8973 1.77142 18.8973H18.2286C18.6546 18.8973 19 18.552 19=
 18.1259C19 17.6999 18.6546 17.3545 18.2286 17.3545Z" fill=3D"currentColor"=
></path><mask id=3D"mask0_400_418" maskUnits=3D"userSpaceOnUse" x=3D"1" y=
=3D"1" width=3D"15" height=3D"15"><path d=3D"M15.1429 1.10254H1V15.2454H15.=
1429V1.10254Z" fill=3D"white"></path></mask><g mask=3D"url(#mask0_400_418)"=
><path d=3D"M2.48999 15.2425C2.36999 15.2425 2.26002 15.2225 2.15002 15.202=
5C2.04002 15.1725 1.94003 15.1325 1.84003 15.0825C1.73003 15.0325 1.63999 1=
4.9825 1.54999 14.9025C1.45999 14.8325 1.39001 14.7525 1.32001 14.6625C1.25=
001 14.5825 1.19001 14.4825 1.14001 14.3825C1.09001 14.2825 1.05003 14.1725=
 1.03003 14.0625C1.01003 13.9525 1 13.8425 1 13.7225C1 13.6125 1.00998 13.5=
025 1.03998 13.3925L1.75 10.4325C1.9 9.81254 2.20001 9.28253 2.64001 8.8325=
3L9.40002 2.08253C9.55002 1.92253 9.71997 1.78254 9.90997 1.66254C10.09 1.5=
4254 10.28 1.44254 10.49 1.35254C10.69 1.27254 10.9 1.20254 11.12 1.16254C1=
1.33 1.12254 11.55 1.10254 11.77 1.10254C12 1.10254 12.21 1.12254 12.43 1.1=
6254C12.65 1.20254 12.86 1.27254 13.06 1.35254C13.27 1.44254 13.46 1.54254 =
13.64 1.66254C13.83 1.78254 14 1.92253 14.15 2.08253C14.31 2.24253 14.45 2.=
41254 14.57 2.59254C14.69 2.77254 14.79 2.97255 14.88 3.17255C14.96 3.37255=
 15.03 3.59254 15.07 3.80254C15.11 4.02254 15.13 4.24254 15.13 4.46254C15.1=
3 4.68254 15.11 4.90253 15.07 5.11253C15.03 5.33253 14.96 5.54254 14.88 5.7=
4254C14.79 5.95254 14.69 6.14254 14.57 6.32254C14.45 6.51254 14.31 6.68253 =
14.15 6.83253L7.40002 13.5925C6.95002 14.0425 6.42 14.3325 5.81 14.4825L2.8=
4003 15.1925C2.73003 15.2225 2.60999 15.2425 2.48999 15.2425ZM11.67 2.73254=
C11.22 2.76254 10.84 2.94254 10.52 3.26254L3.78998 9.99254C3.55998 10.2225 =
3.41002 10.4925 3.33002 10.8125L2.66998 13.5625L5.42999 12.9025C5.73999 12.=
8225 6.02 12.6725 6.25 12.4425L13 5.68254C13.08 5.60254 13.15 5.52255 13.22=
 5.42255C13.28 5.33255 13.33 5.23254 13.38 5.12254C13.42 5.02254 13.45 4.91=
254 13.47 4.80254C13.5 4.68254 13.51 4.57254 13.51 4.46254C13.51 4.34254 13=
.5 4.23254 13.47 4.12254C13.45 4.01254 13.42 3.90254 13.38 3.79254C13.33 3.=
69254 13.28 3.59254 13.22 3.49254C13.15 3.40254 13.08 3.31254 13 3.23254C12=
.82 3.06254 12.62 2.92254 12.39 2.84254C12.16 2.75254 11.91 2.71254 11.67 2=
.73254Z" fill=3D"currentColor"></path></g></svg></div></div></div></div></d=
iv><div class=3D"f9bf7997 c05b5566"><div class=3D"eb23581b dfa60d66"><svg v=
iewBox=3D"0 0 30 30" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" xml=
ns:xlink=3D"http://www.w3.org/1999/xlink"><path id=3D"path" d=3D"M27.501 8.=
46875C27.249 8.3457 27.1406 8.58008 26.9932 8.69922C26.9434 8.73828 26.9004=
 8.78906 26.8584 8.83398C26.4902 9.22852 26.0605 9.48633 25.5 9.45508C24.67=
87 9.41016 23.9785 9.66797 23.3594 10.2969C23.2275 9.52148 22.79 9.05859 22=
.125 8.76172C21.7764 8.60742 21.4238 8.45312 21.1807 8.11719C21.0098 7.8789=
1 20.9639 7.61328 20.8779 7.35156C20.8242 7.19336 20.7695 7.03125 20.5879 7=
.00391C20.3906 6.97266 20.3135 7.13867 20.2363 7.27734C19.9258 7.84375 19.8=
066 8.46875 19.8174 9.10156C19.8447 10.5234 20.4453 11.6562 21.6367 12.4629=
C21.7725 12.5547 21.8076 12.6484 21.7646 12.7832C21.6836 13.0605 21.5869 13=
.3301 21.501 13.6074C21.4473 13.7852 21.3662 13.8242 21.1768 13.7461C20.522=
5 13.4727 19.957 13.0684 19.458 12.5781C18.6104 11.7578 17.8438 10.8516 16.=
8877 10.1426C16.6631 9.97656 16.4395 9.82227 16.207 9.67578C15.2314 8.72656=
 16.335 7.94727 16.5898 7.85547C16.8574 7.75977 16.6826 7.42773 15.8193 7.4=
3164C14.957 7.43555 14.167 7.72461 13.1611 8.10938C13.0137 8.16797 12.8594 =
8.21094 12.7002 8.24414C11.7871 8.07227 10.8389 8.0332 9.84766 8.14453C7.98=
242 8.35352 6.49219 9.23633 5.39648 10.7441C4.08105 12.5547 3.77148 14.6133=
 4.15039 16.7617C4.54883 19.0234 5.70215 20.8984 7.47559 22.3633C9.31348 23=
.8809 11.4307 24.625 13.8457 24.4824C15.3125 24.3984 16.9463 24.2012 18.788=
1 22.6406C19.2529 22.8711 19.7402 22.9629 20.5498 23.0332C21.1729 23.0918 2=
1.7725 23.002 22.2373 22.9062C22.9648 22.752 22.9141 22.0781 22.6514 21.953=
1C20.5186 20.959 20.9863 21.3633 20.5605 21.0371C21.6445 19.752 23.2783 18.=
418 23.917 14.0977C23.9668 13.7539 23.9238 13.5391 23.917 13.2598C23.9131 1=
3.0918 23.9512 13.0254 24.1445 13.0059C24.6787 12.9453 25.1973 12.7988 25.6=
738 12.5352C27.0557 11.7793 27.6123 10.5391 27.7441 9.05078C27.7637 8.82422=
 27.7402 8.58789 27.501 8.46875ZM15.46 21.8613C13.3926 20.2344 12.3906 19.6=
992 11.9766 19.7227C11.5898 19.7441 11.6592 20.1875 11.7441 20.4766C11.833 =
20.7617 11.9492 20.959 12.1123 21.209C12.2246 21.375 12.3018 21.623 12 21.8=
066C11.334 22.2207 10.1768 21.668 10.1221 21.6406C8.77539 20.8477 7.64941 1=
9.7988 6.85547 18.3652C6.08984 16.9844 5.64453 15.5039 5.57129 13.9238C5.55=
176 13.541 5.66406 13.4062 6.04297 13.3379C6.54199 13.2461 7.05762 13.2266 =
7.55664 13.2988C9.66602 13.6074 11.4619 14.5527 12.9668 16.0469C13.8262 16.=
9004 14.4766 17.918 15.1465 18.9121C15.8584 19.9688 16.625 20.9746 17.6006 =
21.7988C17.9443 22.0879 18.2197 22.3086 18.4824 22.4707C17.6895 22.5586 16.=
3652 22.5781 15.46 21.8613ZM16.4502 15.4805C16.4502 15.3105 16.5859 15.1758=
 16.7568 15.1758C16.7949 15.1758 16.8301 15.1836 16.8613 15.1953C16.9033 15=
.2109 16.9424 15.2344 16.9727 15.2695C17.0273 15.3223 17.0586 15.4004 17.05=
86 15.4805C17.0586 15.6504 16.9229 15.7852 16.7529 15.7852C16.582 15.7852 1=
6.4502 15.6504 16.4502 15.4805ZM19.5273 17.0625C19.3301 17.1426 19.1328 17.=
2129 18.9434 17.2207C18.6494 17.2344 18.3281 17.1152 18.1533 16.9688C17.882=
8 16.7422 17.6895 16.6152 17.6074 16.2168C17.5732 16.0469 17.5928 15.7852 1=
7.623 15.6348C17.6934 15.3105 17.6152 15.1035 17.3877 14.9141C17.2012 14.75=
98 16.9658 14.7188 16.7061 14.7188C16.6094 14.7188 16.5205 14.6758 16.4541 =
14.6406C16.3457 14.5859 16.2568 14.4512 16.3418 14.2852C16.3691 14.2324 16.=
501 14.1016 16.5322 14.0781C16.8838 13.877 17.29 13.9434 17.666 14.0938C18.=
0146 14.2363 18.2773 14.498 18.6562 14.8672C19.0439 15.3145 19.1133 15.4395=
 19.334 15.7734C19.5078 16.0371 19.667 16.3066 19.7754 16.6152C19.8408 16.8=
066 19.7559 16.9648 19.5273 17.0625Z" fill-rule=3D"nonzero" fill=3D"#4D6BFE=
"></path></svg></div><div class=3D"ds-markdown ds-markdown--block" style=3D=
"--ds-md-zoom: 1.143;"><p>Certainly! Below is a complete Python code for tr=
aining a U-Net model using PyTorch on your custom dataset. The dataset stru=
cture is as follows:</p><div class=3D"md-code-block"><div class=3D"md-code-=
block-banner-wrap"><div class=3D"md-code-block-banner"><div class=3D"md-cod=
e-block-infostring"></div><div class=3D"md-code-block-action"><div class=3D=
"ds-markdown-code-copy-button">Copy</div></div></div></div><pre>my_dataset/
=E2=94=9C=E2=94=80=E2=94=80 images/  # Contains the input images
=E2=94=94=E2=94=80=E2=94=80 masks/   # Contains the corresponding segmentat=
ion masks</pre></div><h3>Step 1: Install Required Libraries</h3><p>Make sur=
e you have the necessary libraries installed:</p><div class=3D"md-code-bloc=
k"><div class=3D"md-code-block-banner-wrap"><div class=3D"md-code-block-ban=
ner"><div class=3D"md-code-block-infostring">bash</div><div class=3D"md-cod=
e-block-action"><div class=3D"ds-markdown-code-copy-button">Copy</div></div=
></div></div><pre>pip <span class=3D"token function">install</span> torch t=
orchvision opencv-python matplotlib numpy</pre></div><h3>Step 2: Complete P=
ython Code for U-Net Training</h3><div class=3D"md-code-block"><div class=
=3D"md-code-block-banner-wrap"><div class=3D"md-code-block-banner"><div cla=
ss=3D"md-code-block-infostring">python</div><div class=3D"md-code-block-act=
ion"><div class=3D"ds-markdown-code-copy-button">Copy</div></div></div></di=
v><pre><span class=3D"token keyword">import</span> os
<span class=3D"token keyword">import</span> torch
<span class=3D"token keyword">import</span> torch<span class=3D"token punct=
uation">.</span>nn <span class=3D"token keyword">as</span> nn
<span class=3D"token keyword">import</span> torch<span class=3D"token punct=
uation">.</span>optim <span class=3D"token keyword">as</span> optim
<span class=3D"token keyword">from</span> torch<span class=3D"token punctua=
tion">.</span>utils<span class=3D"token punctuation">.</span>data <span cla=
ss=3D"token keyword">import</span> DataLoader<span class=3D"token punctuati=
on">,</span> Dataset
<span class=3D"token keyword">from</span> torchvision <span class=3D"token =
keyword">import</span> transforms
<span class=3D"token keyword">from</span> PIL <span class=3D"token keyword"=
>import</span> Image
<span class=3D"token keyword">import</span> numpy <span class=3D"token keyw=
ord">as</span> np
<span class=3D"token keyword">import</span> matplotlib<span class=3D"token =
punctuation">.</span>pyplot <span class=3D"token keyword">as</span> plt

<span class=3D"token comment"># Define the U-Net model</span>
<span class=3D"token keyword">class</span> <span class=3D"token class-name"=
>UNet</span><span class=3D"token punctuation">(</span>nn<span class=3D"toke=
n punctuation">.</span>Module<span class=3D"token punctuation">)</span><spa=
n class=3D"token punctuation">:</span>
    <span class=3D"token keyword">def</span> <span class=3D"token function"=
>__init__</span><span class=3D"token punctuation">(</span>self<span class=
=3D"token punctuation">,</span> in_channels<span class=3D"token operator">=
=3D</span><span class=3D"token number">3</span><span class=3D"token punctua=
tion">,</span> out_channels<span class=3D"token operator">=3D</span><span c=
lass=3D"token number">1</span><span class=3D"token punctuation">,</span> in=
it_features<span class=3D"token operator">=3D</span><span class=3D"token nu=
mber">32</span><span class=3D"token punctuation">)</span><span class=3D"tok=
en punctuation">:</span>
        <span class=3D"token builtin">super</span><span class=3D"token punc=
tuation">(</span>UNet<span class=3D"token punctuation">,</span> self<span c=
lass=3D"token punctuation">)</span><span class=3D"token punctuation">.</spa=
n>__init__<span class=3D"token punctuation">(</span><span class=3D"token pu=
nctuation">)</span>
       =20
        features <span class=3D"token operator">=3D</span> init_features
        self<span class=3D"token punctuation">.</span>encoder1 <span class=
=3D"token operator">=3D</span> UNet<span class=3D"token punctuation">.</spa=
n>_block<span class=3D"token punctuation">(</span>in_channels<span class=3D=
"token punctuation">,</span> features<span class=3D"token punctuation">,</s=
pan> name<span class=3D"token operator">=3D</span><span class=3D"token stri=
ng">"enc1"</span><span class=3D"token punctuation">)</span>
        self<span class=3D"token punctuation">.</span>pool1 <span class=3D"=
token operator">=3D</span> nn<span class=3D"token punctuation">.</span>MaxP=
ool2d<span class=3D"token punctuation">(</span>kernel_size<span class=3D"to=
ken operator">=3D</span><span class=3D"token number">2</span><span class=3D=
"token punctuation">,</span> stride<span class=3D"token operator">=3D</span=
><span class=3D"token number">2</span><span class=3D"token punctuation">)</=
span>
        self<span class=3D"token punctuation">.</span>encoder2 <span class=
=3D"token operator">=3D</span> UNet<span class=3D"token punctuation">.</spa=
n>_block<span class=3D"token punctuation">(</span>features<span class=3D"to=
ken punctuation">,</span> features <span class=3D"token operator">*</span> =
<span class=3D"token number">2</span><span class=3D"token punctuation">,</s=
pan> name<span class=3D"token operator">=3D</span><span class=3D"token stri=
ng">"enc2"</span><span class=3D"token punctuation">)</span>
        self<span class=3D"token punctuation">.</span>pool2 <span class=3D"=
token operator">=3D</span> nn<span class=3D"token punctuation">.</span>MaxP=
ool2d<span class=3D"token punctuation">(</span>kernel_size<span class=3D"to=
ken operator">=3D</span><span class=3D"token number">2</span><span class=3D=
"token punctuation">,</span> stride<span class=3D"token operator">=3D</span=
><span class=3D"token number">2</span><span class=3D"token punctuation">)</=
span>
        self<span class=3D"token punctuation">.</span>encoder3 <span class=
=3D"token operator">=3D</span> UNet<span class=3D"token punctuation">.</spa=
n>_block<span class=3D"token punctuation">(</span>features <span class=3D"t=
oken operator">*</span> <span class=3D"token number">2</span><span class=3D=
"token punctuation">,</span> features <span class=3D"token operator">*</spa=
n> <span class=3D"token number">4</span><span class=3D"token punctuation">,=
</span> name<span class=3D"token operator">=3D</span><span class=3D"token s=
tring">"enc3"</span><span class=3D"token punctuation">)</span>
        self<span class=3D"token punctuation">.</span>pool3 <span class=3D"=
token operator">=3D</span> nn<span class=3D"token punctuation">.</span>MaxP=
ool2d<span class=3D"token punctuation">(</span>kernel_size<span class=3D"to=
ken operator">=3D</span><span class=3D"token number">2</span><span class=3D=
"token punctuation">,</span> stride<span class=3D"token operator">=3D</span=
><span class=3D"token number">2</span><span class=3D"token punctuation">)</=
span>
        self<span class=3D"token punctuation">.</span>encoder4 <span class=
=3D"token operator">=3D</span> UNet<span class=3D"token punctuation">.</spa=
n>_block<span class=3D"token punctuation">(</span>features <span class=3D"t=
oken operator">*</span> <span class=3D"token number">4</span><span class=3D=
"token punctuation">,</span> features <span class=3D"token operator">*</spa=
n> <span class=3D"token number">8</span><span class=3D"token punctuation">,=
</span> name<span class=3D"token operator">=3D</span><span class=3D"token s=
tring">"enc4"</span><span class=3D"token punctuation">)</span>
        self<span class=3D"token punctuation">.</span>pool4 <span class=3D"=
token operator">=3D</span> nn<span class=3D"token punctuation">.</span>MaxP=
ool2d<span class=3D"token punctuation">(</span>kernel_size<span class=3D"to=
ken operator">=3D</span><span class=3D"token number">2</span><span class=3D=
"token punctuation">,</span> stride<span class=3D"token operator">=3D</span=
><span class=3D"token number">2</span><span class=3D"token punctuation">)</=
span>
       =20
        self<span class=3D"token punctuation">.</span>bottleneck <span clas=
s=3D"token operator">=3D</span> UNet<span class=3D"token punctuation">.</sp=
an>_block<span class=3D"token punctuation">(</span>features <span class=3D"=
token operator">*</span> <span class=3D"token number">8</span><span class=
=3D"token punctuation">,</span> features <span class=3D"token operator">*</=
span> <span class=3D"token number">16</span><span class=3D"token punctuatio=
n">,</span> name<span class=3D"token operator">=3D</span><span class=3D"tok=
en string">"bottleneck"</span><span class=3D"token punctuation">)</span>
       =20
        self<span class=3D"token punctuation">.</span>upconv4 <span class=
=3D"token operator">=3D</span> nn<span class=3D"token punctuation">.</span>=
ConvTranspose2d<span class=3D"token punctuation">(</span>features <span cla=
ss=3D"token operator">*</span> <span class=3D"token number">16</span><span =
class=3D"token punctuation">,</span> features <span class=3D"token operator=
">*</span> <span class=3D"token number">8</span><span class=3D"token punctu=
ation">,</span> kernel_size<span class=3D"token operator">=3D</span><span c=
lass=3D"token number">2</span><span class=3D"token punctuation">,</span> st=
ride<span class=3D"token operator">=3D</span><span class=3D"token number">2=
</span><span class=3D"token punctuation">)</span>
        self<span class=3D"token punctuation">.</span>decoder4 <span class=
=3D"token operator">=3D</span> UNet<span class=3D"token punctuation">.</spa=
n>_block<span class=3D"token punctuation">(</span><span class=3D"token punc=
tuation">(</span>features <span class=3D"token operator">*</span> <span cla=
ss=3D"token number">8</span><span class=3D"token punctuation">)</span> <spa=
n class=3D"token operator">*</span> <span class=3D"token number">2</span><s=
pan class=3D"token punctuation">,</span> features <span class=3D"token oper=
ator">*</span> <span class=3D"token number">8</span><span class=3D"token pu=
nctuation">,</span> name<span class=3D"token operator">=3D</span><span clas=
s=3D"token string">"dec4"</span><span class=3D"token punctuation">)</span>
        self<span class=3D"token punctuation">.</span>upconv3 <span class=
=3D"token operator">=3D</span> nn<span class=3D"token punctuation">.</span>=
ConvTranspose2d<span class=3D"token punctuation">(</span>features <span cla=
ss=3D"token operator">*</span> <span class=3D"token number">8</span><span c=
lass=3D"token punctuation">,</span> features <span class=3D"token operator"=
>*</span> <span class=3D"token number">4</span><span class=3D"token punctua=
tion">,</span> kernel_size<span class=3D"token operator">=3D</span><span cl=
ass=3D"token number">2</span><span class=3D"token punctuation">,</span> str=
ide<span class=3D"token operator">=3D</span><span class=3D"token number">2<=
/span><span class=3D"token punctuation">)</span>
        self<span class=3D"token punctuation">.</span>decoder3 <span class=
=3D"token operator">=3D</span> UNet<span class=3D"token punctuation">.</spa=
n>_block<span class=3D"token punctuation">(</span><span class=3D"token punc=
tuation">(</span>features <span class=3D"token operator">*</span> <span cla=
ss=3D"token number">4</span><span class=3D"token punctuation">)</span> <spa=
n class=3D"token operator">*</span> <span class=3D"token number">2</span><s=
pan class=3D"token punctuation">,</span> features <span class=3D"token oper=
ator">*</span> <span class=3D"token number">4</span><span class=3D"token pu=
nctuation">,</span> name<span class=3D"token operator">=3D</span><span clas=
s=3D"token string">"dec3"</span><span class=3D"token punctuation">)</span>
        self<span class=3D"token punctuation">.</span>upconv2 <span class=
=3D"token operator">=3D</span> nn<span class=3D"token punctuation">.</span>=
ConvTranspose2d<span class=3D"token punctuation">(</span>features <span cla=
ss=3D"token operator">*</span> <span class=3D"token number">4</span><span c=
lass=3D"token punctuation">,</span> features <span class=3D"token operator"=
>*</span> <span class=3D"token number">2</span><span class=3D"token punctua=
tion">,</span> kernel_size<span class=3D"token operator">=3D</span><span cl=
ass=3D"token number">2</span><span class=3D"token punctuation">,</span> str=
ide<span class=3D"token operator">=3D</span><span class=3D"token number">2<=
/span><span class=3D"token punctuation">)</span>
        self<span class=3D"token punctuation">.</span>decoder2 <span class=
=3D"token operator">=3D</span> UNet<span class=3D"token punctuation">.</spa=
n>_block<span class=3D"token punctuation">(</span><span class=3D"token punc=
tuation">(</span>features <span class=3D"token operator">*</span> <span cla=
ss=3D"token number">2</span><span class=3D"token punctuation">)</span> <spa=
n class=3D"token operator">*</span> <span class=3D"token number">2</span><s=
pan class=3D"token punctuation">,</span> features <span class=3D"token oper=
ator">*</span> <span class=3D"token number">2</span><span class=3D"token pu=
nctuation">,</span> name<span class=3D"token operator">=3D</span><span clas=
s=3D"token string">"dec2"</span><span class=3D"token punctuation">)</span>
        self<span class=3D"token punctuation">.</span>upconv1 <span class=
=3D"token operator">=3D</span> nn<span class=3D"token punctuation">.</span>=
ConvTranspose2d<span class=3D"token punctuation">(</span>features <span cla=
ss=3D"token operator">*</span> <span class=3D"token number">2</span><span c=
lass=3D"token punctuation">,</span> features<span class=3D"token punctuatio=
n">,</span> kernel_size<span class=3D"token operator">=3D</span><span class=
=3D"token number">2</span><span class=3D"token punctuation">,</span> stride=
<span class=3D"token operator">=3D</span><span class=3D"token number">2</sp=
an><span class=3D"token punctuation">)</span>
        self<span class=3D"token punctuation">.</span>decoder1 <span class=
=3D"token operator">=3D</span> UNet<span class=3D"token punctuation">.</spa=
n>_block<span class=3D"token punctuation">(</span>features <span class=3D"t=
oken operator">*</span> <span class=3D"token number">2</span><span class=3D=
"token punctuation">,</span> features<span class=3D"token punctuation">,</s=
pan> name<span class=3D"token operator">=3D</span><span class=3D"token stri=
ng">"dec1"</span><span class=3D"token punctuation">)</span>
       =20
        self<span class=3D"token punctuation">.</span>conv <span class=3D"t=
oken operator">=3D</span> nn<span class=3D"token punctuation">.</span>Conv2=
d<span class=3D"token punctuation">(</span>in_channels<span class=3D"token =
operator">=3D</span>features<span class=3D"token punctuation">,</span> out_=
channels<span class=3D"token operator">=3D</span>out_channels<span class=3D=
"token punctuation">,</span> kernel_size<span class=3D"token operator">=3D<=
/span><span class=3D"token number">1</span><span class=3D"token punctuation=
">)</span>
   =20
    <span class=3D"token keyword">def</span> <span class=3D"token function"=
>forward</span><span class=3D"token punctuation">(</span>self<span class=3D=
"token punctuation">,</span> x<span class=3D"token punctuation">)</span><sp=
an class=3D"token punctuation">:</span>
        enc1 <span class=3D"token operator">=3D</span> self<span class=3D"t=
oken punctuation">.</span>encoder1<span class=3D"token punctuation">(</span=
>x<span class=3D"token punctuation">)</span>
        enc2 <span class=3D"token operator">=3D</span> self<span class=3D"t=
oken punctuation">.</span>encoder2<span class=3D"token punctuation">(</span=
>self<span class=3D"token punctuation">.</span>pool1<span class=3D"token pu=
nctuation">(</span>enc1<span class=3D"token punctuation">)</span><span clas=
s=3D"token punctuation">)</span>
        enc3 <span class=3D"token operator">=3D</span> self<span class=3D"t=
oken punctuation">.</span>encoder3<span class=3D"token punctuation">(</span=
>self<span class=3D"token punctuation">.</span>pool2<span class=3D"token pu=
nctuation">(</span>enc2<span class=3D"token punctuation">)</span><span clas=
s=3D"token punctuation">)</span>
        enc4 <span class=3D"token operator">=3D</span> self<span class=3D"t=
oken punctuation">.</span>encoder4<span class=3D"token punctuation">(</span=
>self<span class=3D"token punctuation">.</span>pool3<span class=3D"token pu=
nctuation">(</span>enc3<span class=3D"token punctuation">)</span><span clas=
s=3D"token punctuation">)</span>
       =20
        bottleneck <span class=3D"token operator">=3D</span> self<span clas=
s=3D"token punctuation">.</span>bottleneck<span class=3D"token punctuation"=
>(</span>self<span class=3D"token punctuation">.</span>pool4<span class=3D"=
token punctuation">(</span>enc4<span class=3D"token punctuation">)</span><s=
pan class=3D"token punctuation">)</span>
       =20
        dec4 <span class=3D"token operator">=3D</span> self<span class=3D"t=
oken punctuation">.</span>upconv4<span class=3D"token punctuation">(</span>=
bottleneck<span class=3D"token punctuation">)</span>
        dec4 <span class=3D"token operator">=3D</span> torch<span class=3D"=
token punctuation">.</span>cat<span class=3D"token punctuation">(</span><sp=
an class=3D"token punctuation">(</span>dec4<span class=3D"token punctuation=
">,</span> enc4<span class=3D"token punctuation">)</span><span class=3D"tok=
en punctuation">,</span> dim<span class=3D"token operator">=3D</span><span =
class=3D"token number">1</span><span class=3D"token punctuation">)</span>
        dec4 <span class=3D"token operator">=3D</span> self<span class=3D"t=
oken punctuation">.</span>decoder4<span class=3D"token punctuation">(</span=
>dec4<span class=3D"token punctuation">)</span>
       =20
        dec3 <span class=3D"token operator">=3D</span> self<span class=3D"t=
oken punctuation">.</span>upconv3<span class=3D"token punctuation">(</span>=
dec4<span class=3D"token punctuation">)</span>
        dec3 <span class=3D"token operator">=3D</span> torch<span class=3D"=
token punctuation">.</span>cat<span class=3D"token punctuation">(</span><sp=
an class=3D"token punctuation">(</span>dec3<span class=3D"token punctuation=
">,</span> enc3<span class=3D"token punctuation">)</span><span class=3D"tok=
en punctuation">,</span> dim<span class=3D"token operator">=3D</span><span =
class=3D"token number">1</span><span class=3D"token punctuation">)</span>
        dec3 <span class=3D"token operator">=3D</span> self<span class=3D"t=
oken punctuation">.</span>decoder3<span class=3D"token punctuation">(</span=
>dec3<span class=3D"token punctuation">)</span>
       =20
        dec2 <span class=3D"token operator">=3D</span> self<span class=3D"t=
oken punctuation">.</span>upconv2<span class=3D"token punctuation">(</span>=
dec3<span class=3D"token punctuation">)</span>
        dec2 <span class=3D"token operator">=3D</span> torch<span class=3D"=
token punctuation">.</span>cat<span class=3D"token punctuation">(</span><sp=
an class=3D"token punctuation">(</span>dec2<span class=3D"token punctuation=
">,</span> enc2<span class=3D"token punctuation">)</span><span class=3D"tok=
en punctuation">,</span> dim<span class=3D"token operator">=3D</span><span =
class=3D"token number">1</span><span class=3D"token punctuation">)</span>
        dec2 <span class=3D"token operator">=3D</span> self<span class=3D"t=
oken punctuation">.</span>decoder2<span class=3D"token punctuation">(</span=
>dec2<span class=3D"token punctuation">)</span>
       =20
        dec1 <span class=3D"token operator">=3D</span> self<span class=3D"t=
oken punctuation">.</span>upconv1<span class=3D"token punctuation">(</span>=
dec2<span class=3D"token punctuation">)</span>
        dec1 <span class=3D"token operator">=3D</span> torch<span class=3D"=
token punctuation">.</span>cat<span class=3D"token punctuation">(</span><sp=
an class=3D"token punctuation">(</span>dec1<span class=3D"token punctuation=
">,</span> enc1<span class=3D"token punctuation">)</span><span class=3D"tok=
en punctuation">,</span> dim<span class=3D"token operator">=3D</span><span =
class=3D"token number">1</span><span class=3D"token punctuation">)</span>
        dec1 <span class=3D"token operator">=3D</span> self<span class=3D"t=
oken punctuation">.</span>decoder1<span class=3D"token punctuation">(</span=
>dec1<span class=3D"token punctuation">)</span>
       =20
        <span class=3D"token keyword">return</span> torch<span class=3D"tok=
en punctuation">.</span>sigmoid<span class=3D"token punctuation">(</span>se=
lf<span class=3D"token punctuation">.</span>conv<span class=3D"token punctu=
ation">(</span>dec1<span class=3D"token punctuation">)</span><span class=3D=
"token punctuation">)</span>
   =20
    <span class=3D"token decorator annotation punctuation">@staticmethod</s=
pan>
    <span class=3D"token keyword">def</span> <span class=3D"token function"=
>_block</span><span class=3D"token punctuation">(</span>in_channels<span cl=
ass=3D"token punctuation">,</span> features<span class=3D"token punctuation=
">,</span> name<span class=3D"token punctuation">)</span><span class=3D"tok=
en punctuation">:</span>
        <span class=3D"token keyword">return</span> nn<span class=3D"token =
punctuation">.</span>Sequential<span class=3D"token punctuation">(</span>
            nn<span class=3D"token punctuation">.</span>Conv2d<span class=
=3D"token punctuation">(</span>in_channels<span class=3D"token operator">=
=3D</span>in_channels<span class=3D"token punctuation">,</span> out_channel=
s<span class=3D"token operator">=3D</span>features<span class=3D"token punc=
tuation">,</span> kernel_size<span class=3D"token operator">=3D</span><span=
 class=3D"token number">3</span><span class=3D"token punctuation">,</span> =
padding<span class=3D"token operator">=3D</span><span class=3D"token number=
">1</span><span class=3D"token punctuation">,</span> bias<span class=3D"tok=
en operator">=3D</span><span class=3D"token boolean">False</span><span clas=
s=3D"token punctuation">)</span><span class=3D"token punctuation">,</span>
            nn<span class=3D"token punctuation">.</span>BatchNorm2d<span cl=
ass=3D"token punctuation">(</span>num_features<span class=3D"token operator=
">=3D</span>features<span class=3D"token punctuation">)</span><span class=
=3D"token punctuation">,</span>
            nn<span class=3D"token punctuation">.</span>ReLU<span class=3D"=
token punctuation">(</span>inplace<span class=3D"token operator">=3D</span>=
<span class=3D"token boolean">True</span><span class=3D"token punctuation">=
)</span><span class=3D"token punctuation">,</span>
            nn<span class=3D"token punctuation">.</span>Conv2d<span class=
=3D"token punctuation">(</span>in_channels<span class=3D"token operator">=
=3D</span>features<span class=3D"token punctuation">,</span> out_channels<s=
pan class=3D"token operator">=3D</span>features<span class=3D"token punctua=
tion">,</span> kernel_size<span class=3D"token operator">=3D</span><span cl=
ass=3D"token number">3</span><span class=3D"token punctuation">,</span> pad=
ding<span class=3D"token operator">=3D</span><span class=3D"token number">1=
</span><span class=3D"token punctuation">,</span> bias<span class=3D"token =
operator">=3D</span><span class=3D"token boolean">False</span><span class=
=3D"token punctuation">)</span><span class=3D"token punctuation">,</span>
            nn<span class=3D"token punctuation">.</span>BatchNorm2d<span cl=
ass=3D"token punctuation">(</span>num_features<span class=3D"token operator=
">=3D</span>features<span class=3D"token punctuation">)</span><span class=
=3D"token punctuation">,</span>
            nn<span class=3D"token punctuation">.</span>ReLU<span class=3D"=
token punctuation">(</span>inplace<span class=3D"token operator">=3D</span>=
<span class=3D"token boolean">True</span><span class=3D"token punctuation">=
)</span><span class=3D"token punctuation">,</span>
        <span class=3D"token punctuation">)</span>

<span class=3D"token comment"># Custom Dataset Class</span>
<span class=3D"token keyword">class</span> <span class=3D"token class-name"=
>CustomDataset</span><span class=3D"token punctuation">(</span>Dataset<span=
 class=3D"token punctuation">)</span><span class=3D"token punctuation">:</s=
pan>
    <span class=3D"token keyword">def</span> <span class=3D"token function"=
>__init__</span><span class=3D"token punctuation">(</span>self<span class=
=3D"token punctuation">,</span> image_dir<span class=3D"token punctuation">=
,</span> mask_dir<span class=3D"token punctuation">,</span> transform<span =
class=3D"token operator">=3D</span><span class=3D"token boolean">None</span=
><span class=3D"token punctuation">)</span><span class=3D"token punctuation=
">:</span>
        self<span class=3D"token punctuation">.</span>image_dir <span class=
=3D"token operator">=3D</span> image_dir
        self<span class=3D"token punctuation">.</span>mask_dir <span class=
=3D"token operator">=3D</span> mask_dir
        self<span class=3D"token punctuation">.</span>transform <span class=
=3D"token operator">=3D</span> transform
        self<span class=3D"token punctuation">.</span>images <span class=3D=
"token operator">=3D</span> os<span class=3D"token punctuation">.</span>lis=
tdir<span class=3D"token punctuation">(</span>image_dir<span class=3D"token=
 punctuation">)</span>
   =20
    <span class=3D"token keyword">def</span> <span class=3D"token function"=
>__len__</span><span class=3D"token punctuation">(</span>self<span class=3D=
"token punctuation">)</span><span class=3D"token punctuation">:</span>
        <span class=3D"token keyword">return</span> <span class=3D"token bu=
iltin">len</span><span class=3D"token punctuation">(</span>self<span class=
=3D"token punctuation">.</span>images<span class=3D"token punctuation">)</s=
pan>
   =20
    <span class=3D"token keyword">def</span> <span class=3D"token function"=
>__getitem__</span><span class=3D"token punctuation">(</span>self<span clas=
s=3D"token punctuation">,</span> idx<span class=3D"token punctuation">)</sp=
an><span class=3D"token punctuation">:</span>
        img_path <span class=3D"token operator">=3D</span> os<span class=3D=
"token punctuation">.</span>path<span class=3D"token punctuation">.</span>j=
oin<span class=3D"token punctuation">(</span>self<span class=3D"token punct=
uation">.</span>image_dir<span class=3D"token punctuation">,</span> self<sp=
an class=3D"token punctuation">.</span>images<span class=3D"token punctuati=
on">[</span>idx<span class=3D"token punctuation">]</span><span class=3D"tok=
en punctuation">)</span>
        mask_path <span class=3D"token operator">=3D</span> os<span class=
=3D"token punctuation">.</span>path<span class=3D"token punctuation">.</spa=
n>join<span class=3D"token punctuation">(</span>self<span class=3D"token pu=
nctuation">.</span>mask_dir<span class=3D"token punctuation">,</span> self<=
span class=3D"token punctuation">.</span>images<span class=3D"token punctua=
tion">[</span>idx<span class=3D"token punctuation">]</span><span class=3D"t=
oken punctuation">)</span>
        image <span class=3D"token operator">=3D</span> np<span class=3D"to=
ken punctuation">.</span>array<span class=3D"token punctuation">(</span>Ima=
ge<span class=3D"token punctuation">.</span><span class=3D"token builtin">o=
pen</span><span class=3D"token punctuation">(</span>img_path<span class=3D"=
token punctuation">)</span><span class=3D"token punctuation">.</span>conver=
t<span class=3D"token punctuation">(</span><span class=3D"token string">"RG=
B"</span><span class=3D"token punctuation">)</span><span class=3D"token pun=
ctuation">)</span>
        mask <span class=3D"token operator">=3D</span> np<span class=3D"tok=
en punctuation">.</span>array<span class=3D"token punctuation">(</span>Imag=
e<span class=3D"token punctuation">.</span><span class=3D"token builtin">op=
en</span><span class=3D"token punctuation">(</span>mask_path<span class=3D"=
token punctuation">)</span><span class=3D"token punctuation">.</span>conver=
t<span class=3D"token punctuation">(</span><span class=3D"token string">"L"=
</span><span class=3D"token punctuation">)</span><span class=3D"token punct=
uation">,</span> dtype<span class=3D"token operator">=3D</span>np<span clas=
s=3D"token punctuation">.</span>float32<span class=3D"token punctuation">)<=
/span>
        mask<span class=3D"token punctuation">[</span>mask <span class=3D"t=
oken operator">=3D=3D</span> <span class=3D"token number">255.0</span><span=
 class=3D"token punctuation">]</span> <span class=3D"token operator">=3D</s=
pan> <span class=3D"token number">1.0</span>
       =20
        <span class=3D"token keyword">if</span> self<span class=3D"token pu=
nctuation">.</span>transform<span class=3D"token punctuation">:</span>
            augmentations <span class=3D"token operator">=3D</span> self<sp=
an class=3D"token punctuation">.</span>transform<span class=3D"token punctu=
ation">(</span>image<span class=3D"token operator">=3D</span>image<span cla=
ss=3D"token punctuation">,</span> mask<span class=3D"token operator">=3D</s=
pan>mask<span class=3D"token punctuation">)</span>
            image <span class=3D"token operator">=3D</span> augmentations<s=
pan class=3D"token punctuation">[</span><span class=3D"token string">"image=
"</span><span class=3D"token punctuation">]</span>
            mask <span class=3D"token operator">=3D</span> augmentations<sp=
an class=3D"token punctuation">[</span><span class=3D"token string">"mask"<=
/span><span class=3D"token punctuation">]</span>
       =20
        image <span class=3D"token operator">=3D</span> image<span class=3D=
"token punctuation">.</span>transpose<span class=3D"token punctuation">(</s=
pan><span class=3D"token punctuation">(</span><span class=3D"token number">=
2</span><span class=3D"token punctuation">,</span> <span class=3D"token num=
ber">0</span><span class=3D"token punctuation">,</span> <span class=3D"toke=
n number">1</span><span class=3D"token punctuation">)</span><span class=3D"=
token punctuation">)</span>  <span class=3D"token comment"># HWC to CHW</sp=
an>
        image <span class=3D"token operator">=3D</span> torch<span class=3D=
"token punctuation">.</span>tensor<span class=3D"token punctuation">(</span=
>image<span class=3D"token punctuation">,</span> dtype<span class=3D"token =
operator">=3D</span>torch<span class=3D"token punctuation">.</span><span cl=
ass=3D"token builtin">float</span><span class=3D"token punctuation">)</span=
>
        mask <span class=3D"token operator">=3D</span> torch<span class=3D"=
token punctuation">.</span>tensor<span class=3D"token punctuation">(</span>=
mask<span class=3D"token punctuation">,</span> dtype<span class=3D"token op=
erator">=3D</span>torch<span class=3D"token punctuation">.</span><span clas=
s=3D"token builtin">float</span><span class=3D"token punctuation">)</span>
       =20
        <span class=3D"token keyword">return</span> image<span class=3D"tok=
en punctuation">,</span> mask

<span class=3D"token comment"># Define transformations</span>
<span class=3D"token keyword">import</span> albumentations <span class=3D"t=
oken keyword">as</span> A
transform <span class=3D"token operator">=3D</span> A<span class=3D"token p=
unctuation">.</span>Compose<span class=3D"token punctuation">(</span><span =
class=3D"token punctuation">[</span>
    A<span class=3D"token punctuation">.</span>Resize<span class=3D"token p=
unctuation">(</span><span class=3D"token number">256</span><span class=3D"t=
oken punctuation">,</span> <span class=3D"token number">256</span><span cla=
ss=3D"token punctuation">)</span><span class=3D"token punctuation">,</span>
    A<span class=3D"token punctuation">.</span>HorizontalFlip<span class=3D=
"token punctuation">(</span>p<span class=3D"token operator">=3D</span><span=
 class=3D"token number">0.5</span><span class=3D"token punctuation">)</span=
><span class=3D"token punctuation">,</span>
    A<span class=3D"token punctuation">.</span>VerticalFlip<span class=3D"t=
oken punctuation">(</span>p<span class=3D"token operator">=3D</span><span c=
lass=3D"token number">0.5</span><span class=3D"token punctuation">)</span><=
span class=3D"token punctuation">,</span>
<span class=3D"token punctuation">]</span><span class=3D"token punctuation"=
>)</span>

<span class=3D"token comment"># Hyperparameters</span>
LEARNING_RATE <span class=3D"token operator">=3D</span> <span class=3D"toke=
n number">1e-4</span>
DEVICE <span class=3D"token operator">=3D</span> <span class=3D"token strin=
g">"cuda"</span> <span class=3D"token keyword">if</span> torch<span class=
=3D"token punctuation">.</span>cuda<span class=3D"token punctuation">.</spa=
n>is_available<span class=3D"token punctuation">(</span><span class=3D"toke=
n punctuation">)</span> <span class=3D"token keyword">else</span> <span cla=
ss=3D"token string">"cpu"</span>
BATCH_SIZE <span class=3D"token operator">=3D</span> <span class=3D"token n=
umber">16</span>
NUM_EPOCHS <span class=3D"token operator">=3D</span> <span class=3D"token n=
umber">10</span>
NUM_WORKERS <span class=3D"token operator">=3D</span> <span class=3D"token =
number">2</span>
IMAGE_HEIGHT <span class=3D"token operator">=3D</span> <span class=3D"token=
 number">256</span>
IMAGE_WIDTH <span class=3D"token operator">=3D</span> <span class=3D"token =
number">256</span>

<span class=3D"token comment"># Initialize dataset and dataloader</span>
train_dataset <span class=3D"token operator">=3D</span> CustomDataset<span =
class=3D"token punctuation">(</span>image_dir<span class=3D"token operator"=
>=3D</span><span class=3D"token string">"my_dataset/images"</span><span cla=
ss=3D"token punctuation">,</span> mask_dir<span class=3D"token operator">=
=3D</span><span class=3D"token string">"my_dataset/masks"</span><span class=
=3D"token punctuation">,</span> transform<span class=3D"token operator">=3D=
</span>transform<span class=3D"token punctuation">)</span>
train_loader <span class=3D"token operator">=3D</span> DataLoader<span clas=
s=3D"token punctuation">(</span>train_dataset<span class=3D"token punctuati=
on">,</span> batch_size<span class=3D"token operator">=3D</span>BATCH_SIZE<=
span class=3D"token punctuation">,</span> shuffle<span class=3D"token opera=
tor">=3D</span><span class=3D"token boolean">True</span><span class=3D"toke=
n punctuation">,</span> num_workers<span class=3D"token operator">=3D</span=
>NUM_WORKERS<span class=3D"token punctuation">)</span>

<span class=3D"token comment"># Initialize model, loss function, and optimi=
zer</span>
model <span class=3D"token operator">=3D</span> UNet<span class=3D"token pu=
nctuation">(</span><span class=3D"token punctuation">)</span><span class=3D=
"token punctuation">.</span>to<span class=3D"token punctuation">(</span>DEV=
ICE<span class=3D"token punctuation">)</span>
loss_fn <span class=3D"token operator">=3D</span> nn<span class=3D"token pu=
nctuation">.</span>BCELoss<span class=3D"token punctuation">(</span><span c=
lass=3D"token punctuation">)</span>
optimizer <span class=3D"token operator">=3D</span> optim<span class=3D"tok=
en punctuation">.</span>Adam<span class=3D"token punctuation">(</span>model=
<span class=3D"token punctuation">.</span>parameters<span class=3D"token pu=
nctuation">(</span><span class=3D"token punctuation">)</span><span class=3D=
"token punctuation">,</span> lr<span class=3D"token operator">=3D</span>LEA=
RNING_RATE<span class=3D"token punctuation">)</span>

<span class=3D"token comment"># Training loop</span>
<span class=3D"token keyword">for</span> epoch <span class=3D"token keyword=
">in</span> <span class=3D"token builtin">range</span><span class=3D"token =
punctuation">(</span>NUM_EPOCHS<span class=3D"token punctuation">)</span><s=
pan class=3D"token punctuation">:</span>
    model<span class=3D"token punctuation">.</span>train<span class=3D"toke=
n punctuation">(</span><span class=3D"token punctuation">)</span>
    <span class=3D"token keyword">for</span> batch_idx<span class=3D"token =
punctuation">,</span> <span class=3D"token punctuation">(</span>data<span c=
lass=3D"token punctuation">,</span> targets<span class=3D"token punctuation=
">)</span> <span class=3D"token keyword">in</span> <span class=3D"token bui=
ltin">enumerate</span><span class=3D"token punctuation">(</span>train_loade=
r<span class=3D"token punctuation">)</span><span class=3D"token punctuation=
">:</span>
        data <span class=3D"token operator">=3D</span> data<span class=3D"t=
oken punctuation">.</span>to<span class=3D"token punctuation">(</span>devic=
e<span class=3D"token operator">=3D</span>DEVICE<span class=3D"token punctu=
ation">)</span>
        targets <span class=3D"token operator">=3D</span> targets<span clas=
s=3D"token punctuation">.</span>to<span class=3D"token punctuation">(</span=
>device<span class=3D"token operator">=3D</span>DEVICE<span class=3D"token =
punctuation">)</span>
       =20
        <span class=3D"token comment"># Forward pass</span>
        predictions <span class=3D"token operator">=3D</span> model<span cl=
ass=3D"token punctuation">(</span>data<span class=3D"token punctuation">)</=
span>
        loss <span class=3D"token operator">=3D</span> loss_fn<span class=
=3D"token punctuation">(</span>predictions<span class=3D"token punctuation"=
>,</span> targets<span class=3D"token punctuation">)</span>
       =20
        <span class=3D"token comment"># Backward pass</span>
        optimizer<span class=3D"token punctuation">.</span>zero_grad<span c=
lass=3D"token punctuation">(</span><span class=3D"token punctuation">)</spa=
n>
        loss<span class=3D"token punctuation">.</span>backward<span class=
=3D"token punctuation">(</span><span class=3D"token punctuation">)</span>
        optimizer<span class=3D"token punctuation">.</span>step<span class=
=3D"token punctuation">(</span><span class=3D"token punctuation">)</span>
       =20
        <span class=3D"token keyword">if</span> batch_idx <span class=3D"to=
ken operator">%</span> <span class=3D"token number">10</span> <span class=
=3D"token operator">=3D=3D</span> <span class=3D"token number">0</span><spa=
n class=3D"token punctuation">:</span>
            <span class=3D"token keyword">print</span><span class=3D"token =
punctuation">(</span><span class=3D"token string-interpolation"><span class=
=3D"token string">f"Epoch [</span><span class=3D"token interpolation"><span=
 class=3D"token punctuation">{</span>epoch<span class=3D"token punctuation"=
>}</span></span><span class=3D"token string">/</span><span class=3D"token i=
nterpolation"><span class=3D"token punctuation">{</span>NUM_EPOCHS<span cla=
ss=3D"token punctuation">}</span></span><span class=3D"token string">] Batc=
h </span><span class=3D"token interpolation"><span class=3D"token punctuati=
on">{</span>batch_idx<span class=3D"token punctuation">}</span></span><span=
 class=3D"token string">/</span><span class=3D"token interpolation"><span c=
lass=3D"token punctuation">{</span><span class=3D"token builtin">len</span>=
<span class=3D"token punctuation">(</span>train_loader<span class=3D"token =
punctuation">)</span><span class=3D"token punctuation">}</span></span><span=
 class=3D"token string"> Loss: </span><span class=3D"token interpolation"><=
span class=3D"token punctuation">{</span>loss<span class=3D"token punctuati=
on">.</span>item<span class=3D"token punctuation">(</span><span class=3D"to=
ken punctuation">)</span><span class=3D"token punctuation">:</span><span cl=
ass=3D"token format-spec">.4f</span><span class=3D"token punctuation">}</sp=
an></span><span class=3D"token string">"</span></span><span class=3D"token =
punctuation">)</span>
   =20
    <span class=3D"token comment"># Save model checkpoint</span>
    torch<span class=3D"token punctuation">.</span>save<span class=3D"token=
 punctuation">(</span>model<span class=3D"token punctuation">.</span>state_=
dict<span class=3D"token punctuation">(</span><span class=3D"token punctuat=
ion">)</span><span class=3D"token punctuation">,</span> <span class=3D"toke=
n string-interpolation"><span class=3D"token string">f"unet_epoch_</span><s=
pan class=3D"token interpolation"><span class=3D"token punctuation">{</span=
>epoch<span class=3D"token punctuation">}</span></span><span class=3D"token=
 string">.pth"</span></span><span class=3D"token punctuation">)</span>

<span class=3D"token keyword">print</span><span class=3D"token punctuation"=
>(</span><span class=3D"token string">"Training complete!"</span><span clas=
s=3D"token punctuation">)</span></pre></div><h3>Explanation:</h3><ol start=
=3D"1"><li><p><strong>U-Net Model</strong>: The U-Net architecture is defin=
ed with encoder and decoder blocks.</p></li><li><p><strong>Custom Dataset</=
strong>: The <code>CustomDataset</code> class loads images and masks from t=
he specified directories.</p></li><li><p><strong>Data Augmentation</strong>=
: Albumentations is used for data augmentation (resizing, flipping, etc.).<=
/p></li><li><p><strong>Training Loop</strong>: The model is trained using b=
inary cross-entropy loss and the Adam optimizer.</p></li><li><p><strong>Che=
ckpointing</strong>: The model is saved after each epoch.</p></li></ol><h3>=
Step 3: Run the Code</h3><p>Run the script in your Python environment. Make=
 sure to adjust paths, hyperparameters, and other settings as needed.</p><h=
3>Notes:</h3><ul><li><p>Ensure that the images and masks are correctly alig=
ned (i.e., the filenames match).</p></li><li><p>You can modify the U-Net ar=
chitecture, loss function, or optimizer as per your requirements.</p></li><=
li><p>For multi-class segmentation, modify the output channels and use <cod=
e>nn.CrossEntropyLoss()</code> instead of <code>nn.BCELoss()</code>.</p></l=
i></ul><p>Let me know if you need further assistance!</p></div><div class=
=3D"ds-flex" style=3D"margin-top: 12px; height: 20px; align-items: center; =
gap: 12px;"><div class=3D"ds-flex abe97156" style=3D"align-items: center; g=
ap: 12px;"><div class=3D"ds-icon-button" tabindex=3D"0" style=3D"--ds-icon-=
button-text-color: #909090; --ds-icon-button-size: 20px;"><div class=3D"ds-=
icon" style=3D"font-size: 20px; width: 20px; height: 20px;"><svg viewBox=3D=
"0 0 20 20" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" xmlns:xlink=
=3D"http://www.w3.org/1999/xlink"><defs><clipPath id=3D"clip1248_20193"><re=
ct id=3D"=E9=8D=A5=E6=83=A7=E7=9C=B0_1" width=3D"17.052675" height=3D"17.05=
2441" transform=3D"translate(1.000000 1.000000)" fill=3D"white" fill-opacit=
y=3D"0"></rect></clipPath><clipPath id=3D"clip1257_20794"><rect id=3D"=E5=
=A4=8D=E5=88=B6" width=3D"20.000000" height=3D"20.000000" fill=3D"white" fi=
ll-opacity=3D"0"></rect></clipPath></defs><g clip-path=3D"url(#clip1257_207=
94)"><g clip-path=3D"url(#clip1248_20193)"><path id=3D"path" d=3D"M5.03 14.=
64C4.77 14.64 4.5 14.62 4.24 14.56C3.98 14.51 3.73 14.43 3.49 14.33C3.24 14=
.23 3.01 14.1 2.79 13.96C2.57 13.81 2.37 13.64 2.18 13.45C1.99 13.26 1.82 1=
3.05 1.68 12.83C1.53 12.61 1.4 12.37 1.3 12.13C1.2 11.88 1.13 11.63 1.07 11=
.36C1.02 11.1 1 10.84 1 10.57L1 5.07C1 4.8 1.02 4.54 1.07 4.27C1.13 4.01 1.=
2 3.76 1.3 3.51C1.4 3.26 1.53 3.03 1.68 2.81C1.82 2.58 1.99 2.38 2.18 2.19C=
2.37 2 2.57 1.83 2.79 1.68C3.01 1.53 3.24 1.41 3.49 1.31C3.73 1.2 3.98 1.13=
 4.24 1.07C4.5 1.02 4.77 1 5.03 1L10.49 1C10.75 1 11.01 1.02 11.27 1.07C11.=
53 1.13 11.78 1.2 12.03 1.31C12.27 1.41 12.51 1.53 12.73 1.68C12.95 1.83 13=
.15 2 13.34 2.19C13.53 2.38 13.69 2.58 13.84 2.81C13.99 3.03 14.11 3.26 14.=
21 3.51C14.31 3.76 14.39 4.01 14.44 4.27C14.5 4.54 14.52 4.8 14.52 5.07L12.=
94 5.07C12.94 4.91 12.92 4.75 12.89 4.58C12.86 4.43 12.81 4.27 12.75 4.12C1=
2.69 3.97 12.61 3.83 12.52 3.69C12.43 3.56 12.33 3.43 12.22 3.32C12.1 3.2 1=
1.98 3.1 11.85 3.01C11.71 2.92 11.57 2.84 11.42 2.78C11.27 2.72 11.12 2.67 =
10.96 2.64C10.81 2.61 10.65 2.59 10.49 2.59L5.03 2.59C4.87 2.59 4.71 2.61 4=
.55 2.64C4.4 2.67 4.24 2.72 4.09 2.78C3.95 2.84 3.8 2.92 3.67 3.01C3.54 3.1=
 3.41 3.2 3.3 3.32C3.18 3.43 3.08 3.56 2.99 3.69C2.9 3.83 2.83 3.97 2.77 4.=
12C2.71 4.27 2.66 4.43 2.63 4.58C2.6 4.75 2.58 4.91 2.58 5.07L2.58 10.57C2.=
58 10.73 2.6 10.89 2.63 11.05C2.66 11.21 2.71 11.37 2.77 11.52C2.83 11.67 2=
.9 11.81 2.99 11.94C3.08 12.08 3.18 12.2 3.3 12.32C3.41 12.43 3.54 12.54 3.=
67 12.63C3.8 12.72 3.95 12.79 4.09 12.86C4.24 12.92 4.4 12.96 4.55 13C4.71 =
13.03 4.87 13.04 5.03 13.04L5.03 14.64Z" fill=3D"currentColor" fill-opacity=
=3D"1.000000" fill-rule=3D"evenodd"></path></g><path id=3D"path" d=3D"M14.7=
5 18.91L9.3 18.91C9.03 18.91 8.77 18.88 8.51 18.83C8.25 18.78 8 18.7 7.75 1=
8.6C7.51 18.49 7.27 18.37 7.05 18.22C6.83 18.07 6.63 17.9 6.44 17.71C6.25 1=
7.52 6.09 17.32 5.94 17.1C5.79 16.87 5.67 16.64 5.57 16.39C5.47 16.14 5.39 =
15.89 5.34 15.63C5.28 15.37 5.26 15.1 5.26 14.83L5.26 9.33C5.26 9.06 5.28 8=
.8 5.34 8.54C5.39 8.28 5.47 8.02 5.57 7.77C5.67 7.53 5.79 7.29 5.94 7.07C6.=
09 6.85 6.25 6.64 6.44 6.45C6.63 6.26 6.83 6.09 7.05 5.95C7.27 5.8 7.51 5.6=
7 7.75 5.57C8 5.47 8.25 5.39 8.51 5.34C8.77 5.29 9.03 5.26 9.3 5.26L14.75 5=
.26C15.01 5.26 15.28 5.29 15.54 5.34C15.8 5.39 16.05 5.47 16.29 5.57C16.54 =
5.67 16.77 5.8 16.99 5.95C17.21 6.09 17.41 6.26 17.6 6.45C17.79 6.64 17.96 =
6.85 18.1 7.07C18.25 7.29 18.37 7.53 18.48 7.77C18.58 8.02 18.65 8.28 18.71=
 8.54C18.76 8.8 18.78 9.06 18.78 9.33L18.78 14.83C18.78 15.1 18.76 15.37 18=
.71 15.63C18.65 15.89 18.58 16.14 18.48 16.39C18.37 16.64 18.25 16.87 18.1 =
17.1C17.96 17.32 17.79 17.52 17.6 17.71C17.41 17.9 17.21 18.07 16.99 18.22C=
16.77 18.37 16.54 18.49 16.29 18.6C16.05 18.7 15.8 18.78 15.54 18.83C15.28 =
18.88 15.01 18.91 14.75 18.91ZM9.3 6.86C9.13 6.86 8.97 6.87 8.82 6.91C8.66 =
6.94 8.51 6.98 8.36 7.05C8.21 7.11 8.07 7.18 7.93 7.28C7.8 7.37 7.68 7.47 7=
.56 7.58C7.45 7.7 7.35 7.82 7.26 7.96C7.17 8.09 7.09 8.24 7.03 8.38C6.97 8.=
54 6.92 8.69 6.89 8.85C6.86 9.01 6.84 9.17 6.84 9.33L6.84 14.83C6.84 15 6.8=
6 15.16 6.89 15.32C6.92 15.48 6.97 15.63 7.03 15.78C7.09 15.93 7.17 16.07 7=
.26 16.21C7.35 16.34 7.45 16.47 7.56 16.58C7.68 16.7 7.8 16.8 7.93 16.89C8.=
07 16.98 8.21 17.06 8.36 17.12C8.51 17.18 8.66 17.23 8.82 17.26C8.97 17.29 =
9.13 17.31 9.3 17.31L14.75 17.31C14.91 17.31 15.07 17.29 15.23 17.26C15.38 =
17.23 15.54 17.18 15.69 17.12C15.83 17.06 15.98 16.98 16.11 16.89C16.24 16.=
8 16.37 16.7 16.48 16.58C16.59 16.47 16.7 16.34 16.79 16.21C16.87 16.07 16.=
95 15.93 17.01 15.78C17.07 15.63 17.12 15.48 17.15 15.32C17.18 15.16 17.2 1=
5 17.2 14.83L17.2 9.33C17.2 9.17 17.18 9.01 17.15 8.85C17.12 8.69 17.07 8.5=
4 17.01 8.38C16.95 8.24 16.87 8.09 16.79 7.96C16.7 7.82 16.59 7.7 16.48 7.5=
8C16.37 7.47 16.24 7.37 16.11 7.28C15.98 7.19 15.83 7.11 15.69 7.05C15.54 6=
.98 15.38 6.94 15.23 6.91C15.07 6.87 14.91 6.86 14.75 6.86L9.3 6.86Z" fill=
=3D"currentColor" fill-opacity=3D"1.000000" fill-rule=3D"nonzero"></path></=
g></svg></div></div><div class=3D"ds-icon-button" tabindex=3D"0" style=3D"-=
-ds-icon-button-text-color: #909090; --ds-icon-button-size: 20px;"><div cla=
ss=3D"ds-icon" style=3D"font-size: 20px; width: 20px; height: 20px;"><svg v=
iewBox=3D"0 0 20 20" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" xml=
ns:xlink=3D"http://www.w3.org/1999/xlink"><defs><clipPath id=3D"clip1258_20=
811"><rect id=3D"=E9=87=8D=E6=96=B0=E7=94=9F=E6=88=90" width=3D"20.000000" =
height=3D"20.000000" fill=3D"white" fill-opacity=3D"0"></rect></clipPath></=
defs><rect id=3D"=E9=87=8D=E6=96=B0=E7=94=9F=E6=88=90" width=3D"20.000000" =
height=3D"20.000000" fill=3D"#FFFFFF" fill-opacity=3D"0"></rect><g clip-pat=
h=3D"url(#clip1258_20811)"><path id=3D"path" d=3D"M17.01 7.63L13.98 7.62C13=
.88 7.62 13.79 7.6 13.7 7.56C13.62 7.52 13.54 7.47 13.47 7.4C13.4 7.33 13.3=
5 7.25 13.32 7.16C13.28 7.07 13.26 6.98 13.26 6.88C13.26 6.79 13.28 6.69 13=
.32 6.6C13.35 6.51 13.4 6.43 13.47 6.36C13.54 6.3 13.62 6.24 13.7 6.21C13.7=
9 6.17 13.88 6.15 13.98 6.15L15.57 6.16C15.67 6.16 15.76 6.14 15.85 6.1C15.=
94 6.06 16.01 6.01 16.08 5.94C16.15 5.87 16.2 5.79 16.23 5.7C16.27 5.61 16.=
29 5.52 16.29 5.42L16.3 3.89C16.3 3.79 16.32 3.7 16.36 3.61C16.39 3.52 16.4=
4 3.44 16.51 3.37C16.58 3.3 16.66 3.25 16.74 3.21C16.83 3.17 16.92 3.16 17.=
02 3.16C17.11 3.16 17.2 3.17 17.29 3.21C17.38 3.25 17.46 3.3 17.52 3.37C17.=
59 3.44 17.64 3.52 17.68 3.61C17.71 3.7 17.73 3.79 17.73 3.89L17.72 6.9C17.=
72 7 17.71 7.09 17.67 7.18C17.63 7.27 17.58 7.34 17.52 7.41C17.45 7.48 17.3=
7 7.53 17.29 7.57C17.2 7.61 17.11 7.63 17.01 7.63Z" fill=3D"currentColor" f=
ill-opacity=3D"1.000000" fill-rule=3D"nonzero"></path><path id=3D"path" d=
=3D"M2.31 16.29L2.32 13.3C2.32 13.21 2.34 13.11 2.37 13.02C2.41 12.93 2.46 =
12.85 2.53 12.78C2.6 12.71 2.67 12.66 2.76 12.62C2.85 12.58 2.94 12.56 3.03=
 12.56L6.07 12.57C6.16 12.57 6.25 12.59 6.34 12.63C6.43 12.67 6.51 12.72 6.=
57 12.79C6.64 12.86 6.69 12.94 6.73 13.03C6.76 13.12 6.78 13.22 6.78 13.32C=
6.78 13.41 6.76 13.51 6.73 13.6C6.69 13.69 6.64 13.77 6.57 13.84C6.51 13.91=
 6.43 13.96 6.34 14C6.25 14.04 6.16 14.06 6.07 14.06L4.47 14.05C4.38 14.05 =
4.29 14.07 4.2 14.11C4.11 14.15 4.03 14.2 3.97 14.27C3.9 14.34 3.85 14.42 3=
.81 14.51C3.78 14.6 3.76 14.7 3.76 14.8L3.75 16.29C3.75 16.39 3.73 16.48 3.=
69 16.58C3.65 16.67 3.6 16.75 3.54 16.82C3.47 16.89 3.39 16.94 3.3 16.98C3.=
22 17.01 3.13 17.03 3.03 17.03C2.94 17.03 2.85 17.02 2.76 16.98C2.67 16.94 =
2.59 16.89 2.52 16.82C2.46 16.75 2.4 16.67 2.37 16.58C2.33 16.49 2.31 16.39=
 2.31 16.29Z" fill=3D"currentColor" fill-opacity=3D"1.000000" fill-rule=3D"=
nonzero"></path><path id=3D"path" d=3D"M9.88 18.01C9.51 18.01 9.15 17.99 8.=
79 17.94C8.42 17.89 8.07 17.82 7.71 17.73C7.36 17.63 7.02 17.51 6.68 17.37C=
6.34 17.23 6.02 17.07 5.7 16.89C5.39 16.7 5.09 16.5 4.8 16.28C4.52 16.05 4.=
25 15.81 3.99 15.55C3.74 15.29 3.5 15.02 3.29 14.73C3.07 14.44 2.88 14.13 2=
.7 13.82L4.15 13.05C4.32 13.35 4.51 13.64 4.72 13.91C4.93 14.18 5.17 14.43 =
5.42 14.66C5.67 14.9 5.94 15.11 6.23 15.3C6.52 15.49 6.83 15.66 7.14 15.81C=
7.46 15.95 7.78 16.07 8.12 16.16C8.45 16.25 8.8 16.32 9.14 16.36C9.49 16.39=
 9.83 16.4 10.18 16.39C10.53 16.37 10.87 16.33 11.22 16.26C11.56 16.19 11.8=
9 16.09 12.21 15.97C12.54 15.84 12.85 15.7 13.15 15.53C13.45 15.35 13.74 15=
.16 14.01 14.94C14.28 14.72 14.53 14.49 14.76 14.23C14.99 13.97 15.2 13.7 1=
5.38 13.41C15.57 13.12 15.73 12.82 15.87 12.5C16 12.19 16.11 11.87 16.2 11.=
53C16.28 11.2 16.34 10.87 16.36 10.52C16.37 10.42 16.4 10.33 16.44 10.24C16=
.48 10.15 16.54 10.07 16.61 10C16.69 9.93 16.77 9.87 16.86 9.84C16.96 9.8 1=
7.05 9.77 17.16 9.77C17.27 9.77 17.38 9.79 17.49 9.83C17.6 9.87 17.7 9.94 1=
7.78 10.02C17.86 10.1 17.92 10.2 17.96 10.3C18 10.41 18.01 10.52 18 10.64C1=
7.98 10.89 17.95 11.13 17.91 11.38C17.86 11.62 17.81 11.87 17.74 12.11C17.6=
8 12.35 17.6 12.58 17.51 12.82C17.42 13.05 17.32 13.28 17.21 13.5C17.1 13.7=
3 16.98 13.95 16.85 14.16C16.71 14.37 16.57 14.58 16.42 14.78C16.27 14.98 1=
6.11 15.17 15.94 15.36C15.77 15.54 15.59 15.72 15.41 15.89C15.22 16.06 15.0=
3 16.22 14.83 16.37C14.63 16.52 14.42 16.66 14.2 16.79C13.99 16.93 13.77 17=
.05 13.54 17.16C13.31 17.27 13.08 17.37 12.85 17.46C12.61 17.55 12.37 17.63=
 12.13 17.7C11.88 17.77 11.64 17.83 11.39 17.87C11.14 17.92 10.89 17.96 10.=
63 17.98C10.38 18 10.13 18.01 9.88 18.01Z" fill=3D"currentColor" fill-opaci=
ty=3D"1.000000" fill-rule=3D"nonzero"></path><path id=3D"path" d=3D"M2.85 1=
0.27C2.73 10.28 2.62 10.26 2.51 10.22C2.4 10.17 2.31 10.11 2.23 10.03C2.14 =
9.95 2.08 9.85 2.04 9.74C2 9.63 1.99 9.52 2 9.41C2.03 8.98 2.1 8.56 2.2 8.1=
5C2.3 7.73 2.43 7.33 2.6 6.94C2.76 6.54 2.96 6.16 3.19 5.8C3.41 5.44 3.67 5=
.1 3.95 4.77C4.24 4.45 4.54 4.15 4.88 3.88C5.21 3.6 5.56 3.35 5.93 3.13C6.3=
 2.91 6.69 2.73 7.09 2.57C7.5 2.41 7.91 2.28 8.33 2.19C8.75 2.09 9.18 2.03 =
9.62 2.01C10.05 1.98 10.48 1.99 10.91 2.03C11.35 2.07 11.77 2.14 12.19 2.25=
C12.61 2.36 13.02 2.5 13.42 2.67C13.81 2.84 14.19 3.04 14.56 3.28C14.92 3.5=
1 15.27 3.77 15.59 4.05C15.91 4.34 16.21 4.64 16.48 4.98C16.75 5.31 17 5.66=
 17.21 6.03L15.78 6.83C15.61 6.54 15.42 6.25 15.2 5.99C14.98 5.73 14.74 5.4=
8 14.49 5.25C14.23 5.02 13.96 4.82 13.66 4.63C13.37 4.45 13.07 4.29 12.75 4=
.15C12.44 4.01 12.11 3.9 11.77 3.82C11.44 3.73 11.1 3.67 10.76 3.64C10.41 3=
.61 10.07 3.6 9.72 3.62C9.37 3.64 9.03 3.69 8.69 3.77C8.36 3.84 8.03 3.94 7=
.71 4.07C7.38 4.2 7.08 4.35 6.78 4.52C6.48 4.7 6.2 4.89 5.94 5.11C5.67 5.33=
 5.43 5.57 5.2 5.83C4.97 6.08 4.77 6.36 4.59 6.65C4.41 6.94 4.25 7.24 4.12 =
7.55C3.98 7.87 3.88 8.19 3.8 8.52C3.72 8.85 3.66 9.19 3.64 9.53C3.63 9.62 3=
.6 9.72 3.56 9.81C3.52 9.9 3.46 9.98 3.39 10.05C3.32 10.12 3.23 10.17 3.14 =
10.21C3.05 10.25 2.95 10.27 2.85 10.27Z" fill=3D"currentColor" fill-opacity=
=3D"1.000000" fill-rule=3D"nonzero"></path></g></svg></div></div><div class=
=3D"ds-icon-button" tabindex=3D"0" style=3D"--ds-icon-button-text-color: #9=
09090; --ds-icon-button-size: 20px;"><div class=3D"ds-icon" style=3D"font-s=
ize: 18px; width: 18px; height: 18px;"><svg width=3D"18" height=3D"18" view=
Box=3D"0 0 18 18" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"><path =
d=3D"M2.5 18c-.663 0-1.298-.294-1.767-.815A2.944 2.944 0 0 1 0 15.222V8.777=
c0-.737.263-1.443.732-1.964C1.202 6.293 1.837 6 2.5 6s1.299.293 1.768.813A2=
.94 2.94 0 0 1 5 8.777v6.445c0 .737-.264 1.443-.733 1.963-.469.521-1.104.81=
4-1.767.815zm0-10.308a.934.934 0 0 0-.693.319c-.183.204-.287.48-.287.77v6.4=
45c0 .288.103.565.287.77.184.204.433.319.693.32.26-.001.51-.116.693-.32.183=
-.205.287-.482.287-.77V8.78c0-.143-.025-.285-.074-.417a1.105 1.105 0 0 0-.2=
12-.354.981.981 0 0 0-.318-.237.897.897 0 0 0-.376-.084v.004z" fill=3D"curr=
entColor"></path><path d=3D"M10.352 18H7.564a3.539 3.539 0 0 1-2.519-1.062A=
3.658 3.658 0 0 1 4 14.378V8.281c0-.884.177-1.76.523-2.572l1.911-4.502c.142=
-.334.371-.622.662-.834A1.949 1.949 0 0 1 9.122.21c.32.163.59.411.782.719l.=
171.271c.194.312.298.673.298 1.041v1.755c0 .341.134.669.371.91.238.242.56.3=
78.896.378h2.691a3.64 3.64 0 0 1 2.594 1.092A3.76 3.76 0 0 1 18 9.014a7.267=
 7.267 0 0 1-1.288 4.147l-1.602 2.325a5.84 5.84 0 0 1-2.076 1.848 5.735 5.7=
35 0 0 1-2.682.666zM8.245 1.648h-.03a.331.331 0 0 0-.293.212L6.012 6.36a4.8=
82 4.882 0 0 0-.39 1.92v6.095c0 .524.205 1.026.569 1.396.364.37.858.579 1.3=
73.58h2.788c.672-.001 1.335-.166 1.931-.481a4.208 4.208 0 0 0 1.495-1.332l1=
.603-2.324a5.616 5.616 0 0 0 .994-3.201 2.1 2.1 0 0 0-.6-1.472 2.031 2.031 =
0 0 0-1.448-.61h-2.691c-.766-.001-1.5-.31-2.042-.861a2.964 2.964 0 0 1-.847=
-2.075V2.241a.297.297 0 0 0-.046-.16l-.17-.272a.334.334 0 0 0-.286-.16z" fi=
ll=3D"currentColor"></path></svg></div></div><div class=3D"ds-icon-button" =
tabindex=3D"0" style=3D"--ds-icon-button-text-color: #909090; --ds-icon-but=
ton-size: 20px;"><div class=3D"ds-icon" style=3D"font-size: 20px; width: 20=
px; height: 20px;"><svg viewBox=3D"0 0 20 20" fill=3D"none" xmlns=3D"http:/=
/www.w3.org/2000/svg" xmlns:xlink=3D"http://www.w3.org/1999/xlink"><defs><c=
lipPath id=3D"clip1348_20218"><rect id=3D"=E7=82=B9=E8=B8=A90718" width=3D"=
20.000000" height=3D"20.000000" fill=3D"white" fill-opacity=3D"0"></rect></=
clipPath></defs><rect id=3D"=E7=82=B9=E8=B8=A90718" width=3D"20.000000" hei=
ght=3D"20.000000" fill=3D"#FFFFFF" fill-opacity=3D"0"></rect><g clip-path=
=3D"url(#clip1348_20218)"><path id=3D"path" d=3D"M3.71 13.17C3.53 13.17 3.3=
6 13.16 3.18 13.12C3.01 13.09 2.84 13.04 2.67 12.97C2.51 12.9 2.35 12.82 2.=
2 12.72C2.05 12.62 1.92 12.51 1.79 12.38C1.66 12.25 1.55 12.12 1.45 11.97C1=
.35 11.82 1.27 11.67 1.2 11.5C1.13 11.34 1.08 11.17 1.05 11C1.01 10.82 1 10=
.65 1 10.47L1 4.19C1 4.02 1.02 3.84 1.06 3.67C1.09 3.5 1.15 3.33 1.22 3.17C=
1.29 3.01 1.37 2.86 1.47 2.71C1.57 2.57 1.68 2.43 1.81 2.31C1.93 2.19 2.07 =
2.08 2.22 1.98C2.36 1.88 2.52 1.8 2.68 1.74C2.84 1.67 3.01 1.62 3.19 1.59C3=
.36 1.55 3.53 1.54 3.71 1.54C3.89 1.54 4.06 1.55 4.23 1.59C4.41 1.62 4.57 1=
.67 4.74 1.74C4.9 1.8 5.06 1.88 5.2 1.98C5.35 2.08 5.49 2.19 5.61 2.31C5.74=
 2.43 5.85 2.57 5.95 2.71C6.05 2.86 6.13 3.01 6.2 3.17C6.27 3.33 6.33 3.5 6=
.36 3.67C6.4 3.84 6.42 4.02 6.42 4.19L6.42 10.47C6.42 10.65 6.41 10.82 6.37=
 11C6.34 11.17 6.28 11.34 6.22 11.5C6.15 11.67 6.06 11.82 5.97 11.97C5.87 1=
2.12 5.75 12.25 5.63 12.38C5.5 12.51 5.36 12.62 5.22 12.72C5.07 12.82 4.91 =
12.9 4.75 12.97C4.58 13.04 4.41 13.09 4.24 13.12C4.06 13.16 3.89 13.17 3.71=
 13.17ZM3.71 3.14C3.57 3.14 3.43 3.16 3.3 3.22C3.17 3.27 3.06 3.35 2.96 3.4=
5C2.86 3.54 2.78 3.66 2.73 3.79C2.67 3.92 2.65 4.05 2.64 4.2L2.64 10.47C2.6=
4 10.62 2.66 10.75 2.72 10.89C2.77 11.02 2.85 11.14 2.95 11.24C3.05 11.34 3=
.16 11.42 3.29 11.48C3.43 11.54 3.57 11.56 3.71 11.56C3.85 11.56 3.99 11.54=
 4.12 11.48C4.26 11.42 4.37 11.34 4.47 11.24C4.57 11.14 4.65 11.02 4.7 10.8=
9C4.75 10.75 4.78 10.62 4.77 10.47L4.77 4.2C4.77 4.05 4.75 3.92 4.69 3.79C4=
.64 3.66 4.56 3.54 4.46 3.44C4.36 3.34 4.25 3.27 4.12 3.21C3.99 3.16 3.85 3=
.14 3.71 3.14Z" fill=3D"currentColor" fill-opacity=3D"1.000000" fill-rule=
=3D"nonzero"></path><path id=3D"path" d=3D"M9.09 18.95C9.04 18.95 8.99 18.9=
5 8.93 18.95C8.75 18.93 8.57 18.89 8.4 18.83C8.23 18.77 8.07 18.69 7.92 18.=
58C7.78 18.48 7.64 18.35 7.53 18.21C7.42 18.07 7.32 17.92 7.25 17.75L5.31 1=
3.26C4.95 12.44 4.77 11.58 4.77 10.69L4.77 4.61C4.77 4.37 4.8 4.14 4.84 3.9=
C4.89 3.67 4.96 3.45 5.05 3.23C5.14 3.01 5.25 2.8 5.39 2.6C5.52 2.4 5.67 2.=
22 5.84 2.05C6.01 1.89 6.19 1.74 6.39 1.61C6.58 1.47 6.79 1.36 7.01 1.27C7.=
23 1.18 7.46 1.11 7.69 1.07C7.93 1.02 8.16 1 8.4 1L11.24 1C11.71 1 12.18 1.=
05 12.64 1.16C13.1 1.28 13.54 1.44 13.97 1.66C14.39 1.88 14.78 2.14 15.13 2=
.46C15.49 2.77 15.8 3.12 16.08 3.5L17.71 5.82C18.13 6.43 18.46 7.08 18.68 7=
.79C18.91 8.5 19.02 9.22 19.02 9.96C19.02 10.21 18.99 10.45 18.95 10.69C18.=
9 10.93 18.83 11.16 18.73 11.38C18.64 11.61 18.53 11.82 18.39 12.03C18.25 1=
2.23 18.1 12.42 17.92 12.59C17.75 12.76 17.56 12.92 17.36 13.05C17.15 13.19=
 16.94 13.3 16.71 13.4C16.49 13.49 16.25 13.56 16.01 13.61C15.77 13.66 15.5=
3 13.68 15.28 13.68L12.54 13.68C12.37 13.68 12.21 13.71 12.05 13.78C11.89 1=
3.84 11.75 13.94 11.63 14.06C11.51 14.18 11.42 14.32 11.35 14.48C11.29 14.6=
3 11.26 14.8 11.26 14.97L11.26 16.71C11.25 17.09 11.15 17.43 10.95 17.75L10=
.78 18.02C10.6 18.31 10.36 18.54 10.06 18.7C9.76 18.87 9.43 18.95 9.09 18.9=
5ZM8.4 2.64C8.27 2.64 8.14 2.65 8.01 2.68C7.88 2.7 7.76 2.74 7.64 2.79C7.52=
 2.84 7.41 2.9 7.3 2.97C7.19 3.04 7.09 3.12 7 3.21C6.91 3.31 6.83 3.41 6.75=
 3.51C6.68 3.62 6.62 3.73 6.57 3.85C6.52 3.97 6.48 4.1 6.46 4.22C6.43 4.35 =
6.42 4.48 6.42 4.61L6.42 10.69C6.42 11.35 6.55 11.99 6.82 12.6L8.76 17.1C8.=
82 17.23 8.92 17.3 9.06 17.31C9.2 17.32 9.31 17.26 9.39 17.14L9.56 16.87C9.=
59 16.83 9.61 16.77 9.61 16.71L9.61 14.96C9.61 14.77 9.63 14.58 9.66 14.39C=
9.7 14.2 9.76 14.02 9.83 13.84C9.9 13.66 10 13.5 10.1 13.34C10.21 13.18 10.=
33 13.03 10.47 12.89C10.6 12.76 10.75 12.63 10.91 12.53C11.07 12.42 11.24 1=
2.33 11.42 12.26C11.6 12.18 11.78 12.13 11.97 12.09C12.16 12.05 12.35 12.03=
 12.55 12.03L15.28 12.03C15.42 12.03 15.56 12.02 15.69 11.99C15.82 11.97 15=
.96 11.93 16.08 11.87C16.21 11.82 16.33 11.76 16.44 11.68C16.56 11.61 16.66=
 11.52 16.76 11.42C16.85 11.33 16.94 11.22 17.02 11.11C17.09 11 17.16 10.88=
 17.21 10.75C17.26 10.62 17.3 10.5 17.33 10.36C17.35 10.23 17.37 10.09 17.3=
7 9.96C17.37 9.38 17.28 8.83 17.11 8.28C16.94 7.74 16.69 7.23 16.36 6.76L14=
.73 4.44C14.53 4.16 14.3 3.91 14.04 3.69C13.79 3.46 13.51 3.27 13.2 3.11C12=
.9 2.96 12.58 2.84 12.25 2.76C11.92 2.68 11.58 2.63 11.24 2.63L8.4 2.64Z" f=
ill=3D"currentColor" fill-opacity=3D"1.000000" fill-rule=3D"nonzero"></path=
></g></svg></div></div></div><div style=3D"flex: 1 1 0%;"></div></div></div=
><div class=3D"fa81"><div class=3D"fbb737a4">I found warning "Import "album=
entations" could not be resolved"<div class=3D"ds-flex e0558cb1" style=3D"p=
osition: absolute; right: calc(100% + 18px); top: 12px; gap: 12px;"><div cl=
ass=3D"ds-icon-button" tabindex=3D"0" style=3D"--ds-icon-button-text-color:=
 #909090; --ds-icon-button-size: 20px;"><div class=3D"ds-icon" style=3D"fon=
t-size: 20px; width: 20px; height: 20px;"><svg viewBox=3D"0 0 20 20" fill=
=3D"none" xmlns=3D"http://www.w3.org/2000/svg" xmlns:xlink=3D"http://www.w3=
.org/1999/xlink"><defs><clipPath id=3D"clip1248_20193"><rect id=3D"=E9=8D=
=A5=E6=83=A7=E7=9C=B0_1" width=3D"17.052675" height=3D"17.052441" transform=
=3D"translate(1.000000 1.000000)" fill=3D"white" fill-opacity=3D"0"></rect>=
</clipPath><clipPath id=3D"clip1257_20794"><rect id=3D"=E5=A4=8D=E5=88=B6" =
width=3D"20.000000" height=3D"20.000000" fill=3D"white" fill-opacity=3D"0">=
</rect></clipPath></defs><g clip-path=3D"url(#clip1257_20794)"><g clip-path=
=3D"url(#clip1248_20193)"><path id=3D"path" d=3D"M5.03 14.64C4.77 14.64 4.5=
 14.62 4.24 14.56C3.98 14.51 3.73 14.43 3.49 14.33C3.24 14.23 3.01 14.1 2.7=
9 13.96C2.57 13.81 2.37 13.64 2.18 13.45C1.99 13.26 1.82 13.05 1.68 12.83C1=
.53 12.61 1.4 12.37 1.3 12.13C1.2 11.88 1.13 11.63 1.07 11.36C1.02 11.1 1 1=
0.84 1 10.57L1 5.07C1 4.8 1.02 4.54 1.07 4.27C1.13 4.01 1.2 3.76 1.3 3.51C1=
.4 3.26 1.53 3.03 1.68 2.81C1.82 2.58 1.99 2.38 2.18 2.19C2.37 2 2.57 1.83 =
2.79 1.68C3.01 1.53 3.24 1.41 3.49 1.31C3.73 1.2 3.98 1.13 4.24 1.07C4.5 1.=
02 4.77 1 5.03 1L10.49 1C10.75 1 11.01 1.02 11.27 1.07C11.53 1.13 11.78 1.2=
 12.03 1.31C12.27 1.41 12.51 1.53 12.73 1.68C12.95 1.83 13.15 2 13.34 2.19C=
13.53 2.38 13.69 2.58 13.84 2.81C13.99 3.03 14.11 3.26 14.21 3.51C14.31 3.7=
6 14.39 4.01 14.44 4.27C14.5 4.54 14.52 4.8 14.52 5.07L12.94 5.07C12.94 4.9=
1 12.92 4.75 12.89 4.58C12.86 4.43 12.81 4.27 12.75 4.12C12.69 3.97 12.61 3=
.83 12.52 3.69C12.43 3.56 12.33 3.43 12.22 3.32C12.1 3.2 11.98 3.1 11.85 3.=
01C11.71 2.92 11.57 2.84 11.42 2.78C11.27 2.72 11.12 2.67 10.96 2.64C10.81 =
2.61 10.65 2.59 10.49 2.59L5.03 2.59C4.87 2.59 4.71 2.61 4.55 2.64C4.4 2.67=
 4.24 2.72 4.09 2.78C3.95 2.84 3.8 2.92 3.67 3.01C3.54 3.1 3.41 3.2 3.3 3.3=
2C3.18 3.43 3.08 3.56 2.99 3.69C2.9 3.83 2.83 3.97 2.77 4.12C2.71 4.27 2.66=
 4.43 2.63 4.58C2.6 4.75 2.58 4.91 2.58 5.07L2.58 10.57C2.58 10.73 2.6 10.8=
9 2.63 11.05C2.66 11.21 2.71 11.37 2.77 11.52C2.83 11.67 2.9 11.81 2.99 11.=
94C3.08 12.08 3.18 12.2 3.3 12.32C3.41 12.43 3.54 12.54 3.67 12.63C3.8 12.7=
2 3.95 12.79 4.09 12.86C4.24 12.92 4.4 12.96 4.55 13C4.71 13.03 4.87 13.04 =
5.03 13.04L5.03 14.64Z" fill=3D"currentColor" fill-opacity=3D"1.000000" fil=
l-rule=3D"evenodd"></path></g><path id=3D"path" d=3D"M14.75 18.91L9.3 18.91=
C9.03 18.91 8.77 18.88 8.51 18.83C8.25 18.78 8 18.7 7.75 18.6C7.51 18.49 7.=
27 18.37 7.05 18.22C6.83 18.07 6.63 17.9 6.44 17.71C6.25 17.52 6.09 17.32 5=
.94 17.1C5.79 16.87 5.67 16.64 5.57 16.39C5.47 16.14 5.39 15.89 5.34 15.63C=
5.28 15.37 5.26 15.1 5.26 14.83L5.26 9.33C5.26 9.06 5.28 8.8 5.34 8.54C5.39=
 8.28 5.47 8.02 5.57 7.77C5.67 7.53 5.79 7.29 5.94 7.07C6.09 6.85 6.25 6.64=
 6.44 6.45C6.63 6.26 6.83 6.09 7.05 5.95C7.27 5.8 7.51 5.67 7.75 5.57C8 5.4=
7 8.25 5.39 8.51 5.34C8.77 5.29 9.03 5.26 9.3 5.26L14.75 5.26C15.01 5.26 15=
.28 5.29 15.54 5.34C15.8 5.39 16.05 5.47 16.29 5.57C16.54 5.67 16.77 5.8 16=
.99 5.95C17.21 6.09 17.41 6.26 17.6 6.45C17.79 6.64 17.96 6.85 18.1 7.07C18=
.25 7.29 18.37 7.53 18.48 7.77C18.58 8.02 18.65 8.28 18.71 8.54C18.76 8.8 1=
8.78 9.06 18.78 9.33L18.78 14.83C18.78 15.1 18.76 15.37 18.71 15.63C18.65 1=
5.89 18.58 16.14 18.48 16.39C18.37 16.64 18.25 16.87 18.1 17.1C17.96 17.32 =
17.79 17.52 17.6 17.71C17.41 17.9 17.21 18.07 16.99 18.22C16.77 18.37 16.54=
 18.49 16.29 18.6C16.05 18.7 15.8 18.78 15.54 18.83C15.28 18.88 15.01 18.91=
 14.75 18.91ZM9.3 6.86C9.13 6.86 8.97 6.87 8.82 6.91C8.66 6.94 8.51 6.98 8.=
36 7.05C8.21 7.11 8.07 7.18 7.93 7.28C7.8 7.37 7.68 7.47 7.56 7.58C7.45 7.7=
 7.35 7.82 7.26 7.96C7.17 8.09 7.09 8.24 7.03 8.38C6.97 8.54 6.92 8.69 6.89=
 8.85C6.86 9.01 6.84 9.17 6.84 9.33L6.84 14.83C6.84 15 6.86 15.16 6.89 15.3=
2C6.92 15.48 6.97 15.63 7.03 15.78C7.09 15.93 7.17 16.07 7.26 16.21C7.35 16=
.34 7.45 16.47 7.56 16.58C7.68 16.7 7.8 16.8 7.93 16.89C8.07 16.98 8.21 17.=
06 8.36 17.12C8.51 17.18 8.66 17.23 8.82 17.26C8.97 17.29 9.13 17.31 9.3 17=
.31L14.75 17.31C14.91 17.31 15.07 17.29 15.23 17.26C15.38 17.23 15.54 17.18=
 15.69 17.12C15.83 17.06 15.98 16.98 16.11 16.89C16.24 16.8 16.37 16.7 16.4=
8 16.58C16.59 16.47 16.7 16.34 16.79 16.21C16.87 16.07 16.95 15.93 17.01 15=
.78C17.07 15.63 17.12 15.48 17.15 15.32C17.18 15.16 17.2 15 17.2 14.83L17.2=
 9.33C17.2 9.17 17.18 9.01 17.15 8.85C17.12 8.69 17.07 8.54 17.01 8.38C16.9=
5 8.24 16.87 8.09 16.79 7.96C16.7 7.82 16.59 7.7 16.48 7.58C16.37 7.47 16.2=
4 7.37 16.11 7.28C15.98 7.19 15.83 7.11 15.69 7.05C15.54 6.98 15.38 6.94 15=
.23 6.91C15.07 6.87 14.91 6.86 14.75 6.86L9.3 6.86Z" fill=3D"currentColor" =
fill-opacity=3D"1.000000" fill-rule=3D"nonzero"></path></g></svg></div></di=
v><div class=3D"ds-icon-button" tabindex=3D"0" style=3D"--ds-icon-button-te=
xt-color: #909090; --ds-icon-button-size: 20px;"><div class=3D"ds-icon" sty=
le=3D"font-size: 20px; width: 20px; height: 20px;"><svg width=3D"20" height=
=3D"20" viewBox=3D"0 0 20 20" fill=3D"none" xmlns=3D"http://www.w3.org/2000=
/svg"><path d=3D"M18.2286 17.3545H1.77142C1.34538 17.3545 1 17.6999 1 18.12=
59C1 18.552 1.34538 18.8973 1.77142 18.8973H18.2286C18.6546 18.8973 19 18.5=
52 19 18.1259C19 17.6999 18.6546 17.3545 18.2286 17.3545Z" fill=3D"currentC=
olor"></path><mask id=3D"mask0_400_418" maskUnits=3D"userSpaceOnUse" x=3D"1=
" y=3D"1" width=3D"15" height=3D"15"><path d=3D"M15.1429 1.10254H1V15.2454H=
15.1429V1.10254Z" fill=3D"white"></path></mask><g mask=3D"url(#mask0_400_41=
8)"><path d=3D"M2.48999 15.2425C2.36999 15.2425 2.26002 15.2225 2.15002 15.=
2025C2.04002 15.1725 1.94003 15.1325 1.84003 15.0825C1.73003 15.0325 1.6399=
9 14.9825 1.54999 14.9025C1.45999 14.8325 1.39001 14.7525 1.32001 14.6625C1=
.25001 14.5825 1.19001 14.4825 1.14001 14.3825C1.09001 14.2825 1.05003 14.1=
725 1.03003 14.0625C1.01003 13.9525 1 13.8425 1 13.7225C1 13.6125 1.00998 1=
3.5025 1.03998 13.3925L1.75 10.4325C1.9 9.81254 2.20001 9.28253 2.64001 8.8=
3253L9.40002 2.08253C9.55002 1.92253 9.71997 1.78254 9.90997 1.66254C10.09 =
1.54254 10.28 1.44254 10.49 1.35254C10.69 1.27254 10.9 1.20254 11.12 1.1625=
4C11.33 1.12254 11.55 1.10254 11.77 1.10254C12 1.10254 12.21 1.12254 12.43 =
1.16254C12.65 1.20254 12.86 1.27254 13.06 1.35254C13.27 1.44254 13.46 1.542=
54 13.64 1.66254C13.83 1.78254 14 1.92253 14.15 2.08253C14.31 2.24253 14.45=
 2.41254 14.57 2.59254C14.69 2.77254 14.79 2.97255 14.88 3.17255C14.96 3.37=
255 15.03 3.59254 15.07 3.80254C15.11 4.02254 15.13 4.24254 15.13 4.46254C1=
5.13 4.68254 15.11 4.90253 15.07 5.11253C15.03 5.33253 14.96 5.54254 14.88 =
5.74254C14.79 5.95254 14.69 6.14254 14.57 6.32254C14.45 6.51254 14.31 6.682=
53 14.15 6.83253L7.40002 13.5925C6.95002 14.0425 6.42 14.3325 5.81 14.4825L=
2.84003 15.1925C2.73003 15.2225 2.60999 15.2425 2.48999 15.2425ZM11.67 2.73=
254C11.22 2.76254 10.84 2.94254 10.52 3.26254L3.78998 9.99254C3.55998 10.22=
25 3.41002 10.4925 3.33002 10.8125L2.66998 13.5625L5.42999 12.9025C5.73999 =
12.8225 6.02 12.6725 6.25 12.4425L13 5.68254C13.08 5.60254 13.15 5.52255 13=
.22 5.42255C13.28 5.33255 13.33 5.23254 13.38 5.12254C13.42 5.02254 13.45 4=
.91254 13.47 4.80254C13.5 4.68254 13.51 4.57254 13.51 4.46254C13.51 4.34254=
 13.5 4.23254 13.47 4.12254C13.45 4.01254 13.42 3.90254 13.38 3.79254C13.33=
 3.69254 13.28 3.59254 13.22 3.49254C13.15 3.40254 13.08 3.31254 13 3.23254=
C12.82 3.06254 12.62 2.92254 12.39 2.84254C12.16 2.75254 11.91 2.71254 11.6=
7 2.73254Z" fill=3D"currentColor"></path></g></svg></div></div></div></div>=
</div><div class=3D"f9bf7997 c05b5566"><div class=3D"eb23581b dfa60d66"><sv=
g viewBox=3D"0 0 30 30" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" =
xmlns:xlink=3D"http://www.w3.org/1999/xlink"><path id=3D"path" d=3D"M27.501=
 8.46875C27.249 8.3457 27.1406 8.58008 26.9932 8.69922C26.9434 8.73828 26.9=
004 8.78906 26.8584 8.83398C26.4902 9.22852 26.0605 9.48633 25.5 9.45508C24=
.6787 9.41016 23.9785 9.66797 23.3594 10.2969C23.2275 9.52148 22.79 9.05859=
 22.125 8.76172C21.7764 8.60742 21.4238 8.45312 21.1807 8.11719C21.0098 7.8=
7891 20.9639 7.61328 20.8779 7.35156C20.8242 7.19336 20.7695 7.03125 20.587=
9 7.00391C20.3906 6.97266 20.3135 7.13867 20.2363 7.27734C19.9258 7.84375 1=
9.8066 8.46875 19.8174 9.10156C19.8447 10.5234 20.4453 11.6562 21.6367 12.4=
629C21.7725 12.5547 21.8076 12.6484 21.7646 12.7832C21.6836 13.0605 21.5869=
 13.3301 21.501 13.6074C21.4473 13.7852 21.3662 13.8242 21.1768 13.7461C20.=
5225 13.4727 19.957 13.0684 19.458 12.5781C18.6104 11.7578 17.8438 10.8516 =
16.8877 10.1426C16.6631 9.97656 16.4395 9.82227 16.207 9.67578C15.2314 8.72=
656 16.335 7.94727 16.5898 7.85547C16.8574 7.75977 16.6826 7.42773 15.8193 =
7.43164C14.957 7.43555 14.167 7.72461 13.1611 8.10938C13.0137 8.16797 12.85=
94 8.21094 12.7002 8.24414C11.7871 8.07227 10.8389 8.0332 9.84766 8.14453C7=
.98242 8.35352 6.49219 9.23633 5.39648 10.7441C4.08105 12.5547 3.77148 14.6=
133 4.15039 16.7617C4.54883 19.0234 5.70215 20.8984 7.47559 22.3633C9.31348=
 23.8809 11.4307 24.625 13.8457 24.4824C15.3125 24.3984 16.9463 24.2012 18.=
7881 22.6406C19.2529 22.8711 19.7402 22.9629 20.5498 23.0332C21.1729 23.091=
8 21.7725 23.002 22.2373 22.9062C22.9648 22.752 22.9141 22.0781 22.6514 21.=
9531C20.5186 20.959 20.9863 21.3633 20.5605 21.0371C21.6445 19.752 23.2783 =
18.418 23.917 14.0977C23.9668 13.7539 23.9238 13.5391 23.917 13.2598C23.913=
1 13.0918 23.9512 13.0254 24.1445 13.0059C24.6787 12.9453 25.1973 12.7988 2=
5.6738 12.5352C27.0557 11.7793 27.6123 10.5391 27.7441 9.05078C27.7637 8.82=
422 27.7402 8.58789 27.501 8.46875ZM15.46 21.8613C13.3926 20.2344 12.3906 1=
9.6992 11.9766 19.7227C11.5898 19.7441 11.6592 20.1875 11.7441 20.4766C11.8=
33 20.7617 11.9492 20.959 12.1123 21.209C12.2246 21.375 12.3018 21.623 12 2=
1.8066C11.334 22.2207 10.1768 21.668 10.1221 21.6406C8.77539 20.8477 7.6494=
1 19.7988 6.85547 18.3652C6.08984 16.9844 5.64453 15.5039 5.57129 13.9238C5=
.55176 13.541 5.66406 13.4062 6.04297 13.3379C6.54199 13.2461 7.05762 13.22=
66 7.55664 13.2988C9.66602 13.6074 11.4619 14.5527 12.9668 16.0469C13.8262 =
16.9004 14.4766 17.918 15.1465 18.9121C15.8584 19.9688 16.625 20.9746 17.60=
06 21.7988C17.9443 22.0879 18.2197 22.3086 18.4824 22.4707C17.6895 22.5586 =
16.3652 22.5781 15.46 21.8613ZM16.4502 15.4805C16.4502 15.3105 16.5859 15.1=
758 16.7568 15.1758C16.7949 15.1758 16.8301 15.1836 16.8613 15.1953C16.9033=
 15.2109 16.9424 15.2344 16.9727 15.2695C17.0273 15.3223 17.0586 15.4004 17=
.0586 15.4805C17.0586 15.6504 16.9229 15.7852 16.7529 15.7852C16.582 15.785=
2 16.4502 15.6504 16.4502 15.4805ZM19.5273 17.0625C19.3301 17.1426 19.1328 =
17.2129 18.9434 17.2207C18.6494 17.2344 18.3281 17.1152 18.1533 16.9688C17.=
8828 16.7422 17.6895 16.6152 17.6074 16.2168C17.5732 16.0469 17.5928 15.785=
2 17.623 15.6348C17.6934 15.3105 17.6152 15.1035 17.3877 14.9141C17.2012 14=
.7598 16.9658 14.7188 16.7061 14.7188C16.6094 14.7188 16.5205 14.6758 16.45=
41 14.6406C16.3457 14.5859 16.2568 14.4512 16.3418 14.2852C16.3691 14.2324 =
16.501 14.1016 16.5322 14.0781C16.8838 13.877 17.29 13.9434 17.666 14.0938C=
18.0146 14.2363 18.2773 14.498 18.6562 14.8672C19.0439 15.3145 19.1133 15.4=
395 19.334 15.7734C19.5078 16.0371 19.667 16.3066 19.7754 16.6152C19.8408 1=
6.8066 19.7559 16.9648 19.5273 17.0625Z" fill-rule=3D"nonzero" fill=3D"#4D6=
BFE"></path></svg></div><div class=3D"ds-markdown ds-markdown--block" style=
=3D"--ds-md-zoom: 1.143;"><p>The warning <code>Import "albumentations" coul=
d not be resolved</code> occurs because the <code>albumentations</code> lib=
rary is not installed in your Python environment. <code>albumentations</cod=
e> is a popular library for image augmentation, and it is used in the code =
for data transformations.</p><h3>Solution: Install <code>albumentations</co=
de></h3><p>You can install the <code>albumentations</code> library using <c=
ode>pip</code>. Run the following command in your terminal or command promp=
t:</p><div class=3D"md-code-block"><div class=3D"md-code-block-banner-wrap"=
><div class=3D"md-code-block-banner"><div class=3D"md-code-block-infostring=
">bash</div><div class=3D"md-code-block-action"><div class=3D"ds-markdown-c=
ode-copy-button">Copy</div></div></div></div><pre>pip <span class=3D"token =
function">install</span> albumentations</pre></div><p>If you are using a Ju=
pyter Notebook, you can install it directly in a cell by running:</p><div c=
lass=3D"md-code-block"><div class=3D"md-code-block-banner-wrap"><div class=
=3D"md-code-block-banner"><div class=3D"md-code-block-infostring">python</d=
iv><div class=3D"md-code-block-action"><div class=3D"ds-markdown-code-copy-=
button">Copy</div></div></div></div><pre>!pip install albumentations</pre><=
/div><h3>Verify Installation</h3><p>After installing, you can verify that t=
he library is installed correctly by running:</p><div class=3D"md-code-bloc=
k"><div class=3D"md-code-block-banner-wrap"><div class=3D"md-code-block-ban=
ner"><div class=3D"md-code-block-infostring">python</div><div class=3D"md-c=
ode-block-action"><div class=3D"ds-markdown-code-copy-button">Copy</div></d=
iv></div></div><pre><span class=3D"token keyword">import</span> albumentati=
ons <span class=3D"token keyword">as</span> A
<span class=3D"token keyword">print</span><span class=3D"token punctuation"=
>(</span>A<span class=3D"token punctuation">.</span>__version__<span class=
=3D"token punctuation">)</span></pre></div><p>If no errors occur, the libra=
ry is installed and ready to use.</p><h3>Alternative: Use <code>torchvision=
.transforms</code></h3><p>If you prefer not to use <code>albumentations</co=
de>, you can replace the augmentation part with <code>torchvision.transform=
s</code>. Here's an example of how to modify the code:</p><div class=3D"md-=
code-block"><div class=3D"md-code-block-banner-wrap"><div class=3D"md-code-=
block-banner"><div class=3D"md-code-block-infostring">python</div><div clas=
s=3D"md-code-block-action"><div class=3D"ds-markdown-code-copy-button">Copy=
</div></div></div></div><pre><span class=3D"token keyword">from</span> torc=
hvision <span class=3D"token keyword">import</span> transforms

<span class=3D"token comment"># Define transformations using torchvision</s=
pan>
transform <span class=3D"token operator">=3D</span> transforms<span class=
=3D"token punctuation">.</span>Compose<span class=3D"token punctuation">(</=
span><span class=3D"token punctuation">[</span>
    transforms<span class=3D"token punctuation">.</span>ToPILImage<span cla=
ss=3D"token punctuation">(</span><span class=3D"token punctuation">)</span>=
<span class=3D"token punctuation">,</span>
    transforms<span class=3D"token punctuation">.</span>Resize<span class=
=3D"token punctuation">(</span><span class=3D"token punctuation">(</span><s=
pan class=3D"token number">256</span><span class=3D"token punctuation">,</s=
pan> <span class=3D"token number">256</span><span class=3D"token punctuatio=
n">)</span><span class=3D"token punctuation">)</span><span class=3D"token p=
unctuation">,</span>
    transforms<span class=3D"token punctuation">.</span>RandomHorizontalFli=
p<span class=3D"token punctuation">(</span>p<span class=3D"token operator">=
=3D</span><span class=3D"token number">0.5</span><span class=3D"token punct=
uation">)</span><span class=3D"token punctuation">,</span>
    transforms<span class=3D"token punctuation">.</span>RandomVerticalFlip<=
span class=3D"token punctuation">(</span>p<span class=3D"token operator">=
=3D</span><span class=3D"token number">0.5</span><span class=3D"token punct=
uation">)</span><span class=3D"token punctuation">,</span>
    transforms<span class=3D"token punctuation">.</span>ToTensor<span class=
=3D"token punctuation">(</span><span class=3D"token punctuation">)</span><s=
pan class=3D"token punctuation">,</span>
<span class=3D"token punctuation">]</span><span class=3D"token punctuation"=
>)</span>

<span class=3D"token comment"># Modify the CustomDataset class to use torch=
vision transforms</span>
<span class=3D"token keyword">class</span> <span class=3D"token class-name"=
>CustomDataset</span><span class=3D"token punctuation">(</span>Dataset<span=
 class=3D"token punctuation">)</span><span class=3D"token punctuation">:</s=
pan>
    <span class=3D"token keyword">def</span> <span class=3D"token function"=
>__init__</span><span class=3D"token punctuation">(</span>self<span class=
=3D"token punctuation">,</span> image_dir<span class=3D"token punctuation">=
,</span> mask_dir<span class=3D"token punctuation">,</span> transform<span =
class=3D"token operator">=3D</span><span class=3D"token boolean">None</span=
><span class=3D"token punctuation">)</span><span class=3D"token punctuation=
">:</span>
        self<span class=3D"token punctuation">.</span>image_dir <span class=
=3D"token operator">=3D</span> image_dir
        self<span class=3D"token punctuation">.</span>mask_dir <span class=
=3D"token operator">=3D</span> mask_dir
        self<span class=3D"token punctuation">.</span>transform <span class=
=3D"token operator">=3D</span> transform
        self<span class=3D"token punctuation">.</span>images <span class=3D=
"token operator">=3D</span> os<span class=3D"token punctuation">.</span>lis=
tdir<span class=3D"token punctuation">(</span>image_dir<span class=3D"token=
 punctuation">)</span>
   =20
    <span class=3D"token keyword">def</span> <span class=3D"token function"=
>__len__</span><span class=3D"token punctuation">(</span>self<span class=3D=
"token punctuation">)</span><span class=3D"token punctuation">:</span>
        <span class=3D"token keyword">return</span> <span class=3D"token bu=
iltin">len</span><span class=3D"token punctuation">(</span>self<span class=
=3D"token punctuation">.</span>images<span class=3D"token punctuation">)</s=
pan>
   =20
    <span class=3D"token keyword">def</span> <span class=3D"token function"=
>__getitem__</span><span class=3D"token punctuation">(</span>self<span clas=
s=3D"token punctuation">,</span> idx<span class=3D"token punctuation">)</sp=
an><span class=3D"token punctuation">:</span>
        img_path <span class=3D"token operator">=3D</span> os<span class=3D=
"token punctuation">.</span>path<span class=3D"token punctuation">.</span>j=
oin<span class=3D"token punctuation">(</span>self<span class=3D"token punct=
uation">.</span>image_dir<span class=3D"token punctuation">,</span> self<sp=
an class=3D"token punctuation">.</span>images<span class=3D"token punctuati=
on">[</span>idx<span class=3D"token punctuation">]</span><span class=3D"tok=
en punctuation">)</span>
        mask_path <span class=3D"token operator">=3D</span> os<span class=
=3D"token punctuation">.</span>path<span class=3D"token punctuation">.</spa=
n>join<span class=3D"token punctuation">(</span>self<span class=3D"token pu=
nctuation">.</span>mask_dir<span class=3D"token punctuation">,</span> self<=
span class=3D"token punctuation">.</span>images<span class=3D"token punctua=
tion">[</span>idx<span class=3D"token punctuation">]</span><span class=3D"t=
oken punctuation">)</span>
        image <span class=3D"token operator">=3D</span> np<span class=3D"to=
ken punctuation">.</span>array<span class=3D"token punctuation">(</span>Ima=
ge<span class=3D"token punctuation">.</span><span class=3D"token builtin">o=
pen</span><span class=3D"token punctuation">(</span>img_path<span class=3D"=
token punctuation">)</span><span class=3D"token punctuation">.</span>conver=
t<span class=3D"token punctuation">(</span><span class=3D"token string">"RG=
B"</span><span class=3D"token punctuation">)</span><span class=3D"token pun=
ctuation">)</span>
        mask <span class=3D"token operator">=3D</span> np<span class=3D"tok=
en punctuation">.</span>array<span class=3D"token punctuation">(</span>Imag=
e<span class=3D"token punctuation">.</span><span class=3D"token builtin">op=
en</span><span class=3D"token punctuation">(</span>mask_path<span class=3D"=
token punctuation">)</span><span class=3D"token punctuation">.</span>conver=
t<span class=3D"token punctuation">(</span><span class=3D"token string">"L"=
</span><span class=3D"token punctuation">)</span><span class=3D"token punct=
uation">,</span> dtype<span class=3D"token operator">=3D</span>np<span clas=
s=3D"token punctuation">.</span>float32<span class=3D"token punctuation">)<=
/span>
        mask<span class=3D"token punctuation">[</span>mask <span class=3D"t=
oken operator">=3D=3D</span> <span class=3D"token number">255.0</span><span=
 class=3D"token punctuation">]</span> <span class=3D"token operator">=3D</s=
pan> <span class=3D"token number">1.0</span>
       =20
        <span class=3D"token keyword">if</span> self<span class=3D"token pu=
nctuation">.</span>transform<span class=3D"token punctuation">:</span>
            image <span class=3D"token operator">=3D</span> self<span class=
=3D"token punctuation">.</span>transform<span class=3D"token punctuation">(=
</span>image<span class=3D"token punctuation">)</span>
            mask <span class=3D"token operator">=3D</span> self<span class=
=3D"token punctuation">.</span>transform<span class=3D"token punctuation">(=
</span>mask<span class=3D"token punctuation">)</span>
       =20
        <span class=3D"token keyword">return</span> image<span class=3D"tok=
en punctuation">,</span> mask</pre></div><h3>Key Changes:</h3><ol start=3D"=
1"><li><p>Replace <code>albumentations</code> with <code>torchvision.transf=
orms</code>.</p></li><li><p>Convert the image and mask to PIL format before=
 applying transformations.</p></li><li><p>Apply the same transformations to=
 both the image and mask.</p></li></ol><h3>Final Notes:</h3><ul><li><p>If y=
ou use <code>torchvision.transforms</code>, ensure that the transformations=
 are compatible with both the image and mask (e.g., resizing, flipping).</p=
></li><li><p><code>albumentations</code> is often preferred for segmentatio=
n tasks because it allows simultaneous augmentation of images and masks wit=
h the same parameters.</p></li></ul><p>Let me know if you encounter any oth=
er issues!</p></div><div class=3D"ds-flex" style=3D"margin-top: 12px; heigh=
t: 20px; align-items: center; gap: 12px;"><div class=3D"ds-flex abe97156" s=
tyle=3D"align-items: center; gap: 12px;"><div class=3D"ds-icon-button" tabi=
ndex=3D"0" style=3D"--ds-icon-button-text-color: #909090; --ds-icon-button-=
size: 20px;"><div class=3D"ds-icon" style=3D"font-size: 20px; width: 20px; =
height: 20px;"><svg viewBox=3D"0 0 20 20" fill=3D"none" xmlns=3D"http://www=
.w3.org/2000/svg" xmlns:xlink=3D"http://www.w3.org/1999/xlink"><defs><clipP=
ath id=3D"clip1248_20193"><rect id=3D"=E9=8D=A5=E6=83=A7=E7=9C=B0_1" width=
=3D"17.052675" height=3D"17.052441" transform=3D"translate(1.000000 1.00000=
0)" fill=3D"white" fill-opacity=3D"0"></rect></clipPath><clipPath id=3D"cli=
p1257_20794"><rect id=3D"=E5=A4=8D=E5=88=B6" width=3D"20.000000" height=3D"=
20.000000" fill=3D"white" fill-opacity=3D"0"></rect></clipPath></defs><g cl=
ip-path=3D"url(#clip1257_20794)"><g clip-path=3D"url(#clip1248_20193)"><pat=
h id=3D"path" d=3D"M5.03 14.64C4.77 14.64 4.5 14.62 4.24 14.56C3.98 14.51 3=
.73 14.43 3.49 14.33C3.24 14.23 3.01 14.1 2.79 13.96C2.57 13.81 2.37 13.64 =
2.18 13.45C1.99 13.26 1.82 13.05 1.68 12.83C1.53 12.61 1.4 12.37 1.3 12.13C=
1.2 11.88 1.13 11.63 1.07 11.36C1.02 11.1 1 10.84 1 10.57L1 5.07C1 4.8 1.02=
 4.54 1.07 4.27C1.13 4.01 1.2 3.76 1.3 3.51C1.4 3.26 1.53 3.03 1.68 2.81C1.=
82 2.58 1.99 2.38 2.18 2.19C2.37 2 2.57 1.83 2.79 1.68C3.01 1.53 3.24 1.41 =
3.49 1.31C3.73 1.2 3.98 1.13 4.24 1.07C4.5 1.02 4.77 1 5.03 1L10.49 1C10.75=
 1 11.01 1.02 11.27 1.07C11.53 1.13 11.78 1.2 12.03 1.31C12.27 1.41 12.51 1=
.53 12.73 1.68C12.95 1.83 13.15 2 13.34 2.19C13.53 2.38 13.69 2.58 13.84 2.=
81C13.99 3.03 14.11 3.26 14.21 3.51C14.31 3.76 14.39 4.01 14.44 4.27C14.5 4=
.54 14.52 4.8 14.52 5.07L12.94 5.07C12.94 4.91 12.92 4.75 12.89 4.58C12.86 =
4.43 12.81 4.27 12.75 4.12C12.69 3.97 12.61 3.83 12.52 3.69C12.43 3.56 12.3=
3 3.43 12.22 3.32C12.1 3.2 11.98 3.1 11.85 3.01C11.71 2.92 11.57 2.84 11.42=
 2.78C11.27 2.72 11.12 2.67 10.96 2.64C10.81 2.61 10.65 2.59 10.49 2.59L5.0=
3 2.59C4.87 2.59 4.71 2.61 4.55 2.64C4.4 2.67 4.24 2.72 4.09 2.78C3.95 2.84=
 3.8 2.92 3.67 3.01C3.54 3.1 3.41 3.2 3.3 3.32C3.18 3.43 3.08 3.56 2.99 3.6=
9C2.9 3.83 2.83 3.97 2.77 4.12C2.71 4.27 2.66 4.43 2.63 4.58C2.6 4.75 2.58 =
4.91 2.58 5.07L2.58 10.57C2.58 10.73 2.6 10.89 2.63 11.05C2.66 11.21 2.71 1=
1.37 2.77 11.52C2.83 11.67 2.9 11.81 2.99 11.94C3.08 12.08 3.18 12.2 3.3 12=
.32C3.41 12.43 3.54 12.54 3.67 12.63C3.8 12.72 3.95 12.79 4.09 12.86C4.24 1=
2.92 4.4 12.96 4.55 13C4.71 13.03 4.87 13.04 5.03 13.04L5.03 14.64Z" fill=
=3D"currentColor" fill-opacity=3D"1.000000" fill-rule=3D"evenodd"></path></=
g><path id=3D"path" d=3D"M14.75 18.91L9.3 18.91C9.03 18.91 8.77 18.88 8.51 =
18.83C8.25 18.78 8 18.7 7.75 18.6C7.51 18.49 7.27 18.37 7.05 18.22C6.83 18.=
07 6.63 17.9 6.44 17.71C6.25 17.52 6.09 17.32 5.94 17.1C5.79 16.87 5.67 16.=
64 5.57 16.39C5.47 16.14 5.39 15.89 5.34 15.63C5.28 15.37 5.26 15.1 5.26 14=
.83L5.26 9.33C5.26 9.06 5.28 8.8 5.34 8.54C5.39 8.28 5.47 8.02 5.57 7.77C5.=
67 7.53 5.79 7.29 5.94 7.07C6.09 6.85 6.25 6.64 6.44 6.45C6.63 6.26 6.83 6.=
09 7.05 5.95C7.27 5.8 7.51 5.67 7.75 5.57C8 5.47 8.25 5.39 8.51 5.34C8.77 5=
.29 9.03 5.26 9.3 5.26L14.75 5.26C15.01 5.26 15.28 5.29 15.54 5.34C15.8 5.3=
9 16.05 5.47 16.29 5.57C16.54 5.67 16.77 5.8 16.99 5.95C17.21 6.09 17.41 6.=
26 17.6 6.45C17.79 6.64 17.96 6.85 18.1 7.07C18.25 7.29 18.37 7.53 18.48 7.=
77C18.58 8.02 18.65 8.28 18.71 8.54C18.76 8.8 18.78 9.06 18.78 9.33L18.78 1=
4.83C18.78 15.1 18.76 15.37 18.71 15.63C18.65 15.89 18.58 16.14 18.48 16.39=
C18.37 16.64 18.25 16.87 18.1 17.1C17.96 17.32 17.79 17.52 17.6 17.71C17.41=
 17.9 17.21 18.07 16.99 18.22C16.77 18.37 16.54 18.49 16.29 18.6C16.05 18.7=
 15.8 18.78 15.54 18.83C15.28 18.88 15.01 18.91 14.75 18.91ZM9.3 6.86C9.13 =
6.86 8.97 6.87 8.82 6.91C8.66 6.94 8.51 6.98 8.36 7.05C8.21 7.11 8.07 7.18 =
7.93 7.28C7.8 7.37 7.68 7.47 7.56 7.58C7.45 7.7 7.35 7.82 7.26 7.96C7.17 8.=
09 7.09 8.24 7.03 8.38C6.97 8.54 6.92 8.69 6.89 8.85C6.86 9.01 6.84 9.17 6.=
84 9.33L6.84 14.83C6.84 15 6.86 15.16 6.89 15.32C6.92 15.48 6.97 15.63 7.03=
 15.78C7.09 15.93 7.17 16.07 7.26 16.21C7.35 16.34 7.45 16.47 7.56 16.58C7.=
68 16.7 7.8 16.8 7.93 16.89C8.07 16.98 8.21 17.06 8.36 17.12C8.51 17.18 8.6=
6 17.23 8.82 17.26C8.97 17.29 9.13 17.31 9.3 17.31L14.75 17.31C14.91 17.31 =
15.07 17.29 15.23 17.26C15.38 17.23 15.54 17.18 15.69 17.12C15.83 17.06 15.=
98 16.98 16.11 16.89C16.24 16.8 16.37 16.7 16.48 16.58C16.59 16.47 16.7 16.=
34 16.79 16.21C16.87 16.07 16.95 15.93 17.01 15.78C17.07 15.63 17.12 15.48 =
17.15 15.32C17.18 15.16 17.2 15 17.2 14.83L17.2 9.33C17.2 9.17 17.18 9.01 1=
7.15 8.85C17.12 8.69 17.07 8.54 17.01 8.38C16.95 8.24 16.87 8.09 16.79 7.96=
C16.7 7.82 16.59 7.7 16.48 7.58C16.37 7.47 16.24 7.37 16.11 7.28C15.98 7.19=
 15.83 7.11 15.69 7.05C15.54 6.98 15.38 6.94 15.23 6.91C15.07 6.87 14.91 6.=
86 14.75 6.86L9.3 6.86Z" fill=3D"currentColor" fill-opacity=3D"1.000000" fi=
ll-rule=3D"nonzero"></path></g></svg></div></div><div class=3D"ds-icon-butt=
on" tabindex=3D"0" style=3D"--ds-icon-button-text-color: #909090; --ds-icon=
-button-size: 20px;"><div class=3D"ds-icon" style=3D"font-size: 20px; width=
: 20px; height: 20px;"><svg viewBox=3D"0 0 20 20" fill=3D"none" xmlns=3D"ht=
tp://www.w3.org/2000/svg" xmlns:xlink=3D"http://www.w3.org/1999/xlink"><def=
s><clipPath id=3D"clip1258_20811"><rect id=3D"=E9=87=8D=E6=96=B0=E7=94=9F=
=E6=88=90" width=3D"20.000000" height=3D"20.000000" fill=3D"white" fill-opa=
city=3D"0"></rect></clipPath></defs><rect id=3D"=E9=87=8D=E6=96=B0=E7=94=9F=
=E6=88=90" width=3D"20.000000" height=3D"20.000000" fill=3D"#FFFFFF" fill-o=
pacity=3D"0"></rect><g clip-path=3D"url(#clip1258_20811)"><path id=3D"path"=
 d=3D"M17.01 7.63L13.98 7.62C13.88 7.62 13.79 7.6 13.7 7.56C13.62 7.52 13.5=
4 7.47 13.47 7.4C13.4 7.33 13.35 7.25 13.32 7.16C13.28 7.07 13.26 6.98 13.2=
6 6.88C13.26 6.79 13.28 6.69 13.32 6.6C13.35 6.51 13.4 6.43 13.47 6.36C13.5=
4 6.3 13.62 6.24 13.7 6.21C13.79 6.17 13.88 6.15 13.98 6.15L15.57 6.16C15.6=
7 6.16 15.76 6.14 15.85 6.1C15.94 6.06 16.01 6.01 16.08 5.94C16.15 5.87 16.=
2 5.79 16.23 5.7C16.27 5.61 16.29 5.52 16.29 5.42L16.3 3.89C16.3 3.79 16.32=
 3.7 16.36 3.61C16.39 3.52 16.44 3.44 16.51 3.37C16.58 3.3 16.66 3.25 16.74=
 3.21C16.83 3.17 16.92 3.16 17.02 3.16C17.11 3.16 17.2 3.17 17.29 3.21C17.3=
8 3.25 17.46 3.3 17.52 3.37C17.59 3.44 17.64 3.52 17.68 3.61C17.71 3.7 17.7=
3 3.79 17.73 3.89L17.72 6.9C17.72 7 17.71 7.09 17.67 7.18C17.63 7.27 17.58 =
7.34 17.52 7.41C17.45 7.48 17.37 7.53 17.29 7.57C17.2 7.61 17.11 7.63 17.01=
 7.63Z" fill=3D"currentColor" fill-opacity=3D"1.000000" fill-rule=3D"nonzer=
o"></path><path id=3D"path" d=3D"M2.31 16.29L2.32 13.3C2.32 13.21 2.34 13.1=
1 2.37 13.02C2.41 12.93 2.46 12.85 2.53 12.78C2.6 12.71 2.67 12.66 2.76 12.=
62C2.85 12.58 2.94 12.56 3.03 12.56L6.07 12.57C6.16 12.57 6.25 12.59 6.34 1=
2.63C6.43 12.67 6.51 12.72 6.57 12.79C6.64 12.86 6.69 12.94 6.73 13.03C6.76=
 13.12 6.78 13.22 6.78 13.32C6.78 13.41 6.76 13.51 6.73 13.6C6.69 13.69 6.6=
4 13.77 6.57 13.84C6.51 13.91 6.43 13.96 6.34 14C6.25 14.04 6.16 14.06 6.07=
 14.06L4.47 14.05C4.38 14.05 4.29 14.07 4.2 14.11C4.11 14.15 4.03 14.2 3.97=
 14.27C3.9 14.34 3.85 14.42 3.81 14.51C3.78 14.6 3.76 14.7 3.76 14.8L3.75 1=
6.29C3.75 16.39 3.73 16.48 3.69 16.58C3.65 16.67 3.6 16.75 3.54 16.82C3.47 =
16.89 3.39 16.94 3.3 16.98C3.22 17.01 3.13 17.03 3.03 17.03C2.94 17.03 2.85=
 17.02 2.76 16.98C2.67 16.94 2.59 16.89 2.52 16.82C2.46 16.75 2.4 16.67 2.3=
7 16.58C2.33 16.49 2.31 16.39 2.31 16.29Z" fill=3D"currentColor" fill-opaci=
ty=3D"1.000000" fill-rule=3D"nonzero"></path><path id=3D"path" d=3D"M9.88 1=
8.01C9.51 18.01 9.15 17.99 8.79 17.94C8.42 17.89 8.07 17.82 7.71 17.73C7.36=
 17.63 7.02 17.51 6.68 17.37C6.34 17.23 6.02 17.07 5.7 16.89C5.39 16.7 5.09=
 16.5 4.8 16.28C4.52 16.05 4.25 15.81 3.99 15.55C3.74 15.29 3.5 15.02 3.29 =
14.73C3.07 14.44 2.88 14.13 2.7 13.82L4.15 13.05C4.32 13.35 4.51 13.64 4.72=
 13.91C4.93 14.18 5.17 14.43 5.42 14.66C5.67 14.9 5.94 15.11 6.23 15.3C6.52=
 15.49 6.83 15.66 7.14 15.81C7.46 15.95 7.78 16.07 8.12 16.16C8.45 16.25 8.=
8 16.32 9.14 16.36C9.49 16.39 9.83 16.4 10.18 16.39C10.53 16.37 10.87 16.33=
 11.22 16.26C11.56 16.19 11.89 16.09 12.21 15.97C12.54 15.84 12.85 15.7 13.=
15 15.53C13.45 15.35 13.74 15.16 14.01 14.94C14.28 14.72 14.53 14.49 14.76 =
14.23C14.99 13.97 15.2 13.7 15.38 13.41C15.57 13.12 15.73 12.82 15.87 12.5C=
16 12.19 16.11 11.87 16.2 11.53C16.28 11.2 16.34 10.87 16.36 10.52C16.37 10=
.42 16.4 10.33 16.44 10.24C16.48 10.15 16.54 10.07 16.61 10C16.69 9.93 16.7=
7 9.87 16.86 9.84C16.96 9.8 17.05 9.77 17.16 9.77C17.27 9.77 17.38 9.79 17.=
49 9.83C17.6 9.87 17.7 9.94 17.78 10.02C17.86 10.1 17.92 10.2 17.96 10.3C18=
 10.41 18.01 10.52 18 10.64C17.98 10.89 17.95 11.13 17.91 11.38C17.86 11.62=
 17.81 11.87 17.74 12.11C17.68 12.35 17.6 12.58 17.51 12.82C17.42 13.05 17.=
32 13.28 17.21 13.5C17.1 13.73 16.98 13.95 16.85 14.16C16.71 14.37 16.57 14=
.58 16.42 14.78C16.27 14.98 16.11 15.17 15.94 15.36C15.77 15.54 15.59 15.72=
 15.41 15.89C15.22 16.06 15.03 16.22 14.83 16.37C14.63 16.52 14.42 16.66 14=
.2 16.79C13.99 16.93 13.77 17.05 13.54 17.16C13.31 17.27 13.08 17.37 12.85 =
17.46C12.61 17.55 12.37 17.63 12.13 17.7C11.88 17.77 11.64 17.83 11.39 17.8=
7C11.14 17.92 10.89 17.96 10.63 17.98C10.38 18 10.13 18.01 9.88 18.01Z" fil=
l=3D"currentColor" fill-opacity=3D"1.000000" fill-rule=3D"nonzero"></path><=
path id=3D"path" d=3D"M2.85 10.27C2.73 10.28 2.62 10.26 2.51 10.22C2.4 10.1=
7 2.31 10.11 2.23 10.03C2.14 9.95 2.08 9.85 2.04 9.74C2 9.63 1.99 9.52 2 9.=
41C2.03 8.98 2.1 8.56 2.2 8.15C2.3 7.73 2.43 7.33 2.6 6.94C2.76 6.54 2.96 6=
.16 3.19 5.8C3.41 5.44 3.67 5.1 3.95 4.77C4.24 4.45 4.54 4.15 4.88 3.88C5.2=
1 3.6 5.56 3.35 5.93 3.13C6.3 2.91 6.69 2.73 7.09 2.57C7.5 2.41 7.91 2.28 8=
.33 2.19C8.75 2.09 9.18 2.03 9.62 2.01C10.05 1.98 10.48 1.99 10.91 2.03C11.=
35 2.07 11.77 2.14 12.19 2.25C12.61 2.36 13.02 2.5 13.42 2.67C13.81 2.84 14=
.19 3.04 14.56 3.28C14.92 3.51 15.27 3.77 15.59 4.05C15.91 4.34 16.21 4.64 =
16.48 4.98C16.75 5.31 17 5.66 17.21 6.03L15.78 6.83C15.61 6.54 15.42 6.25 1=
5.2 5.99C14.98 5.73 14.74 5.48 14.49 5.25C14.23 5.02 13.96 4.82 13.66 4.63C=
13.37 4.45 13.07 4.29 12.75 4.15C12.44 4.01 12.11 3.9 11.77 3.82C11.44 3.73=
 11.1 3.67 10.76 3.64C10.41 3.61 10.07 3.6 9.72 3.62C9.37 3.64 9.03 3.69 8.=
69 3.77C8.36 3.84 8.03 3.94 7.71 4.07C7.38 4.2 7.08 4.35 6.78 4.52C6.48 4.7=
 6.2 4.89 5.94 5.11C5.67 5.33 5.43 5.57 5.2 5.83C4.97 6.08 4.77 6.36 4.59 6=
.65C4.41 6.94 4.25 7.24 4.12 7.55C3.98 7.87 3.88 8.19 3.8 8.52C3.72 8.85 3.=
66 9.19 3.64 9.53C3.63 9.62 3.6 9.72 3.56 9.81C3.52 9.9 3.46 9.98 3.39 10.0=
5C3.32 10.12 3.23 10.17 3.14 10.21C3.05 10.25 2.95 10.27 2.85 10.27Z" fill=
=3D"currentColor" fill-opacity=3D"1.000000" fill-rule=3D"nonzero"></path></=
g></svg></div></div><div class=3D"ds-icon-button" tabindex=3D"0" style=3D"-=
-ds-icon-button-text-color: #909090; --ds-icon-button-size: 20px;"><div cla=
ss=3D"ds-icon" style=3D"font-size: 18px; width: 18px; height: 18px;"><svg w=
idth=3D"18" height=3D"18" viewBox=3D"0 0 18 18" fill=3D"none" xmlns=3D"http=
://www.w3.org/2000/svg"><path d=3D"M2.5 18c-.663 0-1.298-.294-1.767-.815A2.=
944 2.944 0 0 1 0 15.222V8.777c0-.737.263-1.443.732-1.964C1.202 6.293 1.837=
 6 2.5 6s1.299.293 1.768.813A2.94 2.94 0 0 1 5 8.777v6.445c0 .737-.264 1.44=
3-.733 1.963-.469.521-1.104.814-1.767.815zm0-10.308a.934.934 0 0 0-.693.319=
c-.183.204-.287.48-.287.77v6.445c0 .288.103.565.287.77.184.204.433.319.693.=
32.26-.001.51-.116.693-.32.183-.205.287-.482.287-.77V8.78c0-.143-.025-.285-=
.074-.417a1.105 1.105 0 0 0-.212-.354.981.981 0 0 0-.318-.237.897.897 0 0 0=
-.376-.084v.004z" fill=3D"currentColor"></path><path d=3D"M10.352 18H7.564a=
3.539 3.539 0 0 1-2.519-1.062A3.658 3.658 0 0 1 4 14.378V8.281c0-.884.177-1=
.76.523-2.572l1.911-4.502c.142-.334.371-.622.662-.834A1.949 1.949 0 0 1 9.1=
22.21c.32.163.59.411.782.719l.171.271c.194.312.298.673.298 1.041v1.755c0 .3=
41.134.669.371.91.238.242.56.378.896.378h2.691a3.64 3.64 0 0 1 2.594 1.092A=
3.76 3.76 0 0 1 18 9.014a7.267 7.267 0 0 1-1.288 4.147l-1.602 2.325a5.84 5.=
84 0 0 1-2.076 1.848 5.735 5.735 0 0 1-2.682.666zM8.245 1.648h-.03a.331.331=
 0 0 0-.293.212L6.012 6.36a4.882 4.882 0 0 0-.39 1.92v6.095c0 .524.205 1.02=
6.569 1.396.364.37.858.579 1.373.58h2.788c.672-.001 1.335-.166 1.931-.481a4=
.208 4.208 0 0 0 1.495-1.332l1.603-2.324a5.616 5.616 0 0 0 .994-3.201 2.1 2=
.1 0 0 0-.6-1.472 2.031 2.031 0 0 0-1.448-.61h-2.691c-.766-.001-1.5-.31-2.0=
42-.861a2.964 2.964 0 0 1-.847-2.075V2.241a.297.297 0 0 0-.046-.16l-.17-.27=
2a.334.334 0 0 0-.286-.16z" fill=3D"currentColor"></path></svg></div></div>=
<div class=3D"ds-icon-button" tabindex=3D"0" style=3D"--ds-icon-button-text=
-color: #909090; --ds-icon-button-size: 20px;"><div class=3D"ds-icon" style=
=3D"font-size: 20px; width: 20px; height: 20px;"><svg viewBox=3D"0 0 20 20"=
 fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" xmlns:xlink=3D"http://w=
ww.w3.org/1999/xlink"><defs><clipPath id=3D"clip1348_20218"><rect id=3D"=E7=
=82=B9=E8=B8=A90718" width=3D"20.000000" height=3D"20.000000" fill=3D"white=
" fill-opacity=3D"0"></rect></clipPath></defs><rect id=3D"=E7=82=B9=E8=B8=
=A90718" width=3D"20.000000" height=3D"20.000000" fill=3D"#FFFFFF" fill-opa=
city=3D"0"></rect><g clip-path=3D"url(#clip1348_20218)"><path id=3D"path" d=
=3D"M3.71 13.17C3.53 13.17 3.36 13.16 3.18 13.12C3.01 13.09 2.84 13.04 2.67=
 12.97C2.51 12.9 2.35 12.82 2.2 12.72C2.05 12.62 1.92 12.51 1.79 12.38C1.66=
 12.25 1.55 12.12 1.45 11.97C1.35 11.82 1.27 11.67 1.2 11.5C1.13 11.34 1.08=
 11.17 1.05 11C1.01 10.82 1 10.65 1 10.47L1 4.19C1 4.02 1.02 3.84 1.06 3.67=
C1.09 3.5 1.15 3.33 1.22 3.17C1.29 3.01 1.37 2.86 1.47 2.71C1.57 2.57 1.68 =
2.43 1.81 2.31C1.93 2.19 2.07 2.08 2.22 1.98C2.36 1.88 2.52 1.8 2.68 1.74C2=
.84 1.67 3.01 1.62 3.19 1.59C3.36 1.55 3.53 1.54 3.71 1.54C3.89 1.54 4.06 1=
.55 4.23 1.59C4.41 1.62 4.57 1.67 4.74 1.74C4.9 1.8 5.06 1.88 5.2 1.98C5.35=
 2.08 5.49 2.19 5.61 2.31C5.74 2.43 5.85 2.57 5.95 2.71C6.05 2.86 6.13 3.01=
 6.2 3.17C6.27 3.33 6.33 3.5 6.36 3.67C6.4 3.84 6.42 4.02 6.42 4.19L6.42 10=
.47C6.42 10.65 6.41 10.82 6.37 11C6.34 11.17 6.28 11.34 6.22 11.5C6.15 11.6=
7 6.06 11.82 5.97 11.97C5.87 12.12 5.75 12.25 5.63 12.38C5.5 12.51 5.36 12.=
62 5.22 12.72C5.07 12.82 4.91 12.9 4.75 12.97C4.58 13.04 4.41 13.09 4.24 13=
.12C4.06 13.16 3.89 13.17 3.71 13.17ZM3.71 3.14C3.57 3.14 3.43 3.16 3.3 3.2=
2C3.17 3.27 3.06 3.35 2.96 3.45C2.86 3.54 2.78 3.66 2.73 3.79C2.67 3.92 2.6=
5 4.05 2.64 4.2L2.64 10.47C2.64 10.62 2.66 10.75 2.72 10.89C2.77 11.02 2.85=
 11.14 2.95 11.24C3.05 11.34 3.16 11.42 3.29 11.48C3.43 11.54 3.57 11.56 3.=
71 11.56C3.85 11.56 3.99 11.54 4.12 11.48C4.26 11.42 4.37 11.34 4.47 11.24C=
4.57 11.14 4.65 11.02 4.7 10.89C4.75 10.75 4.78 10.62 4.77 10.47L4.77 4.2C4=
.77 4.05 4.75 3.92 4.69 3.79C4.64 3.66 4.56 3.54 4.46 3.44C4.36 3.34 4.25 3=
.27 4.12 3.21C3.99 3.16 3.85 3.14 3.71 3.14Z" fill=3D"currentColor" fill-op=
acity=3D"1.000000" fill-rule=3D"nonzero"></path><path id=3D"path" d=3D"M9.0=
9 18.95C9.04 18.95 8.99 18.95 8.93 18.95C8.75 18.93 8.57 18.89 8.4 18.83C8.=
23 18.77 8.07 18.69 7.92 18.58C7.78 18.48 7.64 18.35 7.53 18.21C7.42 18.07 =
7.32 17.92 7.25 17.75L5.31 13.26C4.95 12.44 4.77 11.58 4.77 10.69L4.77 4.61=
C4.77 4.37 4.8 4.14 4.84 3.9C4.89 3.67 4.96 3.45 5.05 3.23C5.14 3.01 5.25 2=
.8 5.39 2.6C5.52 2.4 5.67 2.22 5.84 2.05C6.01 1.89 6.19 1.74 6.39 1.61C6.58=
 1.47 6.79 1.36 7.01 1.27C7.23 1.18 7.46 1.11 7.69 1.07C7.93 1.02 8.16 1 8.=
4 1L11.24 1C11.71 1 12.18 1.05 12.64 1.16C13.1 1.28 13.54 1.44 13.97 1.66C1=
4.39 1.88 14.78 2.14 15.13 2.46C15.49 2.77 15.8 3.12 16.08 3.5L17.71 5.82C1=
8.13 6.43 18.46 7.08 18.68 7.79C18.91 8.5 19.02 9.22 19.02 9.96C19.02 10.21=
 18.99 10.45 18.95 10.69C18.9 10.93 18.83 11.16 18.73 11.38C18.64 11.61 18.=
53 11.82 18.39 12.03C18.25 12.23 18.1 12.42 17.92 12.59C17.75 12.76 17.56 1=
2.92 17.36 13.05C17.15 13.19 16.94 13.3 16.71 13.4C16.49 13.49 16.25 13.56 =
16.01 13.61C15.77 13.66 15.53 13.68 15.28 13.68L12.54 13.68C12.37 13.68 12.=
21 13.71 12.05 13.78C11.89 13.84 11.75 13.94 11.63 14.06C11.51 14.18 11.42 =
14.32 11.35 14.48C11.29 14.63 11.26 14.8 11.26 14.97L11.26 16.71C11.25 17.0=
9 11.15 17.43 10.95 17.75L10.78 18.02C10.6 18.31 10.36 18.54 10.06 18.7C9.7=
6 18.87 9.43 18.95 9.09 18.95ZM8.4 2.64C8.27 2.64 8.14 2.65 8.01 2.68C7.88 =
2.7 7.76 2.74 7.64 2.79C7.52 2.84 7.41 2.9 7.3 2.97C7.19 3.04 7.09 3.12 7 3=
.21C6.91 3.31 6.83 3.41 6.75 3.51C6.68 3.62 6.62 3.73 6.57 3.85C6.52 3.97 6=
.48 4.1 6.46 4.22C6.43 4.35 6.42 4.48 6.42 4.61L6.42 10.69C6.42 11.35 6.55 =
11.99 6.82 12.6L8.76 17.1C8.82 17.23 8.92 17.3 9.06 17.31C9.2 17.32 9.31 17=
.26 9.39 17.14L9.56 16.87C9.59 16.83 9.61 16.77 9.61 16.71L9.61 14.96C9.61 =
14.77 9.63 14.58 9.66 14.39C9.7 14.2 9.76 14.02 9.83 13.84C9.9 13.66 10 13.=
5 10.1 13.34C10.21 13.18 10.33 13.03 10.47 12.89C10.6 12.76 10.75 12.63 10.=
91 12.53C11.07 12.42 11.24 12.33 11.42 12.26C11.6 12.18 11.78 12.13 11.97 1=
2.09C12.16 12.05 12.35 12.03 12.55 12.03L15.28 12.03C15.42 12.03 15.56 12.0=
2 15.69 11.99C15.82 11.97 15.96 11.93 16.08 11.87C16.21 11.82 16.33 11.76 1=
6.44 11.68C16.56 11.61 16.66 11.52 16.76 11.42C16.85 11.33 16.94 11.22 17.0=
2 11.11C17.09 11 17.16 10.88 17.21 10.75C17.26 10.62 17.3 10.5 17.33 10.36C=
17.35 10.23 17.37 10.09 17.37 9.96C17.37 9.38 17.28 8.83 17.11 8.28C16.94 7=
.74 16.69 7.23 16.36 6.76L14.73 4.44C14.53 4.16 14.3 3.91 14.04 3.69C13.79 =
3.46 13.51 3.27 13.2 3.11C12.9 2.96 12.58 2.84 12.25 2.76C11.92 2.68 11.58 =
2.63 11.24 2.63L8.4 2.64Z" fill=3D"currentColor" fill-opacity=3D"1.000000" =
fill-rule=3D"nonzero"></path></g></svg></div></div></div><div style=3D"flex=
: 1 1 0%;"></div></div></div><div class=3D"fa81"><div class=3D"fbb737a4">pl=
s fix below error.
RuntimeError:
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ =3D=3D '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.<div class=3D"ds=
-flex e0558cb1" style=3D"position: absolute; right: calc(100% + 18px); top:=
 12px; gap: 12px;"><div class=3D"ds-icon-button" tabindex=3D"0" style=3D"--=
ds-icon-button-text-color: #909090; --ds-icon-button-size: 20px;"><div clas=
s=3D"ds-icon" style=3D"font-size: 20px; width: 20px; height: 20px;"><svg vi=
ewBox=3D"0 0 20 20" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" xmln=
s:xlink=3D"http://www.w3.org/1999/xlink"><defs><clipPath id=3D"clip1248_201=
93"><rect id=3D"=E9=8D=A5=E6=83=A7=E7=9C=B0_1" width=3D"17.052675" height=
=3D"17.052441" transform=3D"translate(1.000000 1.000000)" fill=3D"white" fi=
ll-opacity=3D"0"></rect></clipPath><clipPath id=3D"clip1257_20794"><rect id=
=3D"=E5=A4=8D=E5=88=B6" width=3D"20.000000" height=3D"20.000000" fill=3D"wh=
ite" fill-opacity=3D"0"></rect></clipPath></defs><g clip-path=3D"url(#clip1=
257_20794)"><g clip-path=3D"url(#clip1248_20193)"><path id=3D"path" d=3D"M5=
.03 14.64C4.77 14.64 4.5 14.62 4.24 14.56C3.98 14.51 3.73 14.43 3.49 14.33C=
3.24 14.23 3.01 14.1 2.79 13.96C2.57 13.81 2.37 13.64 2.18 13.45C1.99 13.26=
 1.82 13.05 1.68 12.83C1.53 12.61 1.4 12.37 1.3 12.13C1.2 11.88 1.13 11.63 =
1.07 11.36C1.02 11.1 1 10.84 1 10.57L1 5.07C1 4.8 1.02 4.54 1.07 4.27C1.13 =
4.01 1.2 3.76 1.3 3.51C1.4 3.26 1.53 3.03 1.68 2.81C1.82 2.58 1.99 2.38 2.1=
8 2.19C2.37 2 2.57 1.83 2.79 1.68C3.01 1.53 3.24 1.41 3.49 1.31C3.73 1.2 3.=
98 1.13 4.24 1.07C4.5 1.02 4.77 1 5.03 1L10.49 1C10.75 1 11.01 1.02 11.27 1=
.07C11.53 1.13 11.78 1.2 12.03 1.31C12.27 1.41 12.51 1.53 12.73 1.68C12.95 =
1.83 13.15 2 13.34 2.19C13.53 2.38 13.69 2.58 13.84 2.81C13.99 3.03 14.11 3=
.26 14.21 3.51C14.31 3.76 14.39 4.01 14.44 4.27C14.5 4.54 14.52 4.8 14.52 5=
.07L12.94 5.07C12.94 4.91 12.92 4.75 12.89 4.58C12.86 4.43 12.81 4.27 12.75=
 4.12C12.69 3.97 12.61 3.83 12.52 3.69C12.43 3.56 12.33 3.43 12.22 3.32C12.=
1 3.2 11.98 3.1 11.85 3.01C11.71 2.92 11.57 2.84 11.42 2.78C11.27 2.72 11.1=
2 2.67 10.96 2.64C10.81 2.61 10.65 2.59 10.49 2.59L5.03 2.59C4.87 2.59 4.71=
 2.61 4.55 2.64C4.4 2.67 4.24 2.72 4.09 2.78C3.95 2.84 3.8 2.92 3.67 3.01C3=
.54 3.1 3.41 3.2 3.3 3.32C3.18 3.43 3.08 3.56 2.99 3.69C2.9 3.83 2.83 3.97 =
2.77 4.12C2.71 4.27 2.66 4.43 2.63 4.58C2.6 4.75 2.58 4.91 2.58 5.07L2.58 1=
0.57C2.58 10.73 2.6 10.89 2.63 11.05C2.66 11.21 2.71 11.37 2.77 11.52C2.83 =
11.67 2.9 11.81 2.99 11.94C3.08 12.08 3.18 12.2 3.3 12.32C3.41 12.43 3.54 1=
2.54 3.67 12.63C3.8 12.72 3.95 12.79 4.09 12.86C4.24 12.92 4.4 12.96 4.55 1=
3C4.71 13.03 4.87 13.04 5.03 13.04L5.03 14.64Z" fill=3D"currentColor" fill-=
opacity=3D"1.000000" fill-rule=3D"evenodd"></path></g><path id=3D"path" d=
=3D"M14.75 18.91L9.3 18.91C9.03 18.91 8.77 18.88 8.51 18.83C8.25 18.78 8 18=
.7 7.75 18.6C7.51 18.49 7.27 18.37 7.05 18.22C6.83 18.07 6.63 17.9 6.44 17.=
71C6.25 17.52 6.09 17.32 5.94 17.1C5.79 16.87 5.67 16.64 5.57 16.39C5.47 16=
.14 5.39 15.89 5.34 15.63C5.28 15.37 5.26 15.1 5.26 14.83L5.26 9.33C5.26 9.=
06 5.28 8.8 5.34 8.54C5.39 8.28 5.47 8.02 5.57 7.77C5.67 7.53 5.79 7.29 5.9=
4 7.07C6.09 6.85 6.25 6.64 6.44 6.45C6.63 6.26 6.83 6.09 7.05 5.95C7.27 5.8=
 7.51 5.67 7.75 5.57C8 5.47 8.25 5.39 8.51 5.34C8.77 5.29 9.03 5.26 9.3 5.2=
6L14.75 5.26C15.01 5.26 15.28 5.29 15.54 5.34C15.8 5.39 16.05 5.47 16.29 5.=
57C16.54 5.67 16.77 5.8 16.99 5.95C17.21 6.09 17.41 6.26 17.6 6.45C17.79 6.=
64 17.96 6.85 18.1 7.07C18.25 7.29 18.37 7.53 18.48 7.77C18.58 8.02 18.65 8=
.28 18.71 8.54C18.76 8.8 18.78 9.06 18.78 9.33L18.78 14.83C18.78 15.1 18.76=
 15.37 18.71 15.63C18.65 15.89 18.58 16.14 18.48 16.39C18.37 16.64 18.25 16=
.87 18.1 17.1C17.96 17.32 17.79 17.52 17.6 17.71C17.41 17.9 17.21 18.07 16.=
99 18.22C16.77 18.37 16.54 18.49 16.29 18.6C16.05 18.7 15.8 18.78 15.54 18.=
83C15.28 18.88 15.01 18.91 14.75 18.91ZM9.3 6.86C9.13 6.86 8.97 6.87 8.82 6=
.91C8.66 6.94 8.51 6.98 8.36 7.05C8.21 7.11 8.07 7.18 7.93 7.28C7.8 7.37 7.=
68 7.47 7.56 7.58C7.45 7.7 7.35 7.82 7.26 7.96C7.17 8.09 7.09 8.24 7.03 8.3=
8C6.97 8.54 6.92 8.69 6.89 8.85C6.86 9.01 6.84 9.17 6.84 9.33L6.84 14.83C6.=
84 15 6.86 15.16 6.89 15.32C6.92 15.48 6.97 15.63 7.03 15.78C7.09 15.93 7.1=
7 16.07 7.26 16.21C7.35 16.34 7.45 16.47 7.56 16.58C7.68 16.7 7.8 16.8 7.93=
 16.89C8.07 16.98 8.21 17.06 8.36 17.12C8.51 17.18 8.66 17.23 8.82 17.26C8.=
97 17.29 9.13 17.31 9.3 17.31L14.75 17.31C14.91 17.31 15.07 17.29 15.23 17.=
26C15.38 17.23 15.54 17.18 15.69 17.12C15.83 17.06 15.98 16.98 16.11 16.89C=
16.24 16.8 16.37 16.7 16.48 16.58C16.59 16.47 16.7 16.34 16.79 16.21C16.87 =
16.07 16.95 15.93 17.01 15.78C17.07 15.63 17.12 15.48 17.15 15.32C17.18 15.=
16 17.2 15 17.2 14.83L17.2 9.33C17.2 9.17 17.18 9.01 17.15 8.85C17.12 8.69 =
17.07 8.54 17.01 8.38C16.95 8.24 16.87 8.09 16.79 7.96C16.7 7.82 16.59 7.7 =
16.48 7.58C16.37 7.47 16.24 7.37 16.11 7.28C15.98 7.19 15.83 7.11 15.69 7.0=
5C15.54 6.98 15.38 6.94 15.23 6.91C15.07 6.87 14.91 6.86 14.75 6.86L9.3 6.8=
6Z" fill=3D"currentColor" fill-opacity=3D"1.000000" fill-rule=3D"nonzero"><=
/path></g></svg></div></div><div class=3D"ds-icon-button" tabindex=3D"0" st=
yle=3D"--ds-icon-button-text-color: #909090; --ds-icon-button-size: 20px;">=
<div class=3D"ds-icon" style=3D"font-size: 20px; width: 20px; height: 20px;=
"><svg width=3D"20" height=3D"20" viewBox=3D"0 0 20 20" fill=3D"none" xmlns=
=3D"http://www.w3.org/2000/svg"><path d=3D"M18.2286 17.3545H1.77142C1.34538=
 17.3545 1 17.6999 1 18.1259C1 18.552 1.34538 18.8973 1.77142 18.8973H18.22=
86C18.6546 18.8973 19 18.552 19 18.1259C19 17.6999 18.6546 17.3545 18.2286 =
17.3545Z" fill=3D"currentColor"></path><mask id=3D"mask0_400_418" maskUnits=
=3D"userSpaceOnUse" x=3D"1" y=3D"1" width=3D"15" height=3D"15"><path d=3D"M=
15.1429 1.10254H1V15.2454H15.1429V1.10254Z" fill=3D"white"></path></mask><g=
 mask=3D"url(#mask0_400_418)"><path d=3D"M2.48999 15.2425C2.36999 15.2425 2=
.26002 15.2225 2.15002 15.2025C2.04002 15.1725 1.94003 15.1325 1.84003 15.0=
825C1.73003 15.0325 1.63999 14.9825 1.54999 14.9025C1.45999 14.8325 1.39001=
 14.7525 1.32001 14.6625C1.25001 14.5825 1.19001 14.4825 1.14001 14.3825C1.=
09001 14.2825 1.05003 14.1725 1.03003 14.0625C1.01003 13.9525 1 13.8425 1 1=
3.7225C1 13.6125 1.00998 13.5025 1.03998 13.3925L1.75 10.4325C1.9 9.81254 2=
.20001 9.28253 2.64001 8.83253L9.40002 2.08253C9.55002 1.92253 9.71997 1.78=
254 9.90997 1.66254C10.09 1.54254 10.28 1.44254 10.49 1.35254C10.69 1.27254=
 10.9 1.20254 11.12 1.16254C11.33 1.12254 11.55 1.10254 11.77 1.10254C12 1.=
10254 12.21 1.12254 12.43 1.16254C12.65 1.20254 12.86 1.27254 13.06 1.35254=
C13.27 1.44254 13.46 1.54254 13.64 1.66254C13.83 1.78254 14 1.92253 14.15 2=
.08253C14.31 2.24253 14.45 2.41254 14.57 2.59254C14.69 2.77254 14.79 2.9725=
5 14.88 3.17255C14.96 3.37255 15.03 3.59254 15.07 3.80254C15.11 4.02254 15.=
13 4.24254 15.13 4.46254C15.13 4.68254 15.11 4.90253 15.07 5.11253C15.03 5.=
33253 14.96 5.54254 14.88 5.74254C14.79 5.95254 14.69 6.14254 14.57 6.32254=
C14.45 6.51254 14.31 6.68253 14.15 6.83253L7.40002 13.5925C6.95002 14.0425 =
6.42 14.3325 5.81 14.4825L2.84003 15.1925C2.73003 15.2225 2.60999 15.2425 2=
.48999 15.2425ZM11.67 2.73254C11.22 2.76254 10.84 2.94254 10.52 3.26254L3.7=
8998 9.99254C3.55998 10.2225 3.41002 10.4925 3.33002 10.8125L2.66998 13.562=
5L5.42999 12.9025C5.73999 12.8225 6.02 12.6725 6.25 12.4425L13 5.68254C13.0=
8 5.60254 13.15 5.52255 13.22 5.42255C13.28 5.33255 13.33 5.23254 13.38 5.1=
2254C13.42 5.02254 13.45 4.91254 13.47 4.80254C13.5 4.68254 13.51 4.57254 1=
3.51 4.46254C13.51 4.34254 13.5 4.23254 13.47 4.12254C13.45 4.01254 13.42 3=
.90254 13.38 3.79254C13.33 3.69254 13.28 3.59254 13.22 3.49254C13.15 3.4025=
4 13.08 3.31254 13 3.23254C12.82 3.06254 12.62 2.92254 12.39 2.84254C12.16 =
2.75254 11.91 2.71254 11.67 2.73254Z" fill=3D"currentColor"></path></g></sv=
g></div></div></div></div></div><div class=3D"f9bf7997 c05b5566"><div class=
=3D"eb23581b dfa60d66"><svg viewBox=3D"0 0 30 30" fill=3D"none" xmlns=3D"ht=
tp://www.w3.org/2000/svg" xmlns:xlink=3D"http://www.w3.org/1999/xlink"><pat=
h id=3D"path" d=3D"M27.501 8.46875C27.249 8.3457 27.1406 8.58008 26.9932 8.=
69922C26.9434 8.73828 26.9004 8.78906 26.8584 8.83398C26.4902 9.22852 26.06=
05 9.48633 25.5 9.45508C24.6787 9.41016 23.9785 9.66797 23.3594 10.2969C23.=
2275 9.52148 22.79 9.05859 22.125 8.76172C21.7764 8.60742 21.4238 8.45312 2=
1.1807 8.11719C21.0098 7.87891 20.9639 7.61328 20.8779 7.35156C20.8242 7.19=
336 20.7695 7.03125 20.5879 7.00391C20.3906 6.97266 20.3135 7.13867 20.2363=
 7.27734C19.9258 7.84375 19.8066 8.46875 19.8174 9.10156C19.8447 10.5234 20=
.4453 11.6562 21.6367 12.4629C21.7725 12.5547 21.8076 12.6484 21.7646 12.78=
32C21.6836 13.0605 21.5869 13.3301 21.501 13.6074C21.4473 13.7852 21.3662 1=
3.8242 21.1768 13.7461C20.5225 13.4727 19.957 13.0684 19.458 12.5781C18.610=
4 11.7578 17.8438 10.8516 16.8877 10.1426C16.6631 9.97656 16.4395 9.82227 1=
6.207 9.67578C15.2314 8.72656 16.335 7.94727 16.5898 7.85547C16.8574 7.7597=
7 16.6826 7.42773 15.8193 7.43164C14.957 7.43555 14.167 7.72461 13.1611 8.1=
0938C13.0137 8.16797 12.8594 8.21094 12.7002 8.24414C11.7871 8.07227 10.838=
9 8.0332 9.84766 8.14453C7.98242 8.35352 6.49219 9.23633 5.39648 10.7441C4.=
08105 12.5547 3.77148 14.6133 4.15039 16.7617C4.54883 19.0234 5.70215 20.89=
84 7.47559 22.3633C9.31348 23.8809 11.4307 24.625 13.8457 24.4824C15.3125 2=
4.3984 16.9463 24.2012 18.7881 22.6406C19.2529 22.8711 19.7402 22.9629 20.5=
498 23.0332C21.1729 23.0918 21.7725 23.002 22.2373 22.9062C22.9648 22.752 2=
2.9141 22.0781 22.6514 21.9531C20.5186 20.959 20.9863 21.3633 20.5605 21.03=
71C21.6445 19.752 23.2783 18.418 23.917 14.0977C23.9668 13.7539 23.9238 13.=
5391 23.917 13.2598C23.9131 13.0918 23.9512 13.0254 24.1445 13.0059C24.6787=
 12.9453 25.1973 12.7988 25.6738 12.5352C27.0557 11.7793 27.6123 10.5391 27=
.7441 9.05078C27.7637 8.82422 27.7402 8.58789 27.501 8.46875ZM15.46 21.8613=
C13.3926 20.2344 12.3906 19.6992 11.9766 19.7227C11.5898 19.7441 11.6592 20=
.1875 11.7441 20.4766C11.833 20.7617 11.9492 20.959 12.1123 21.209C12.2246 =
21.375 12.3018 21.623 12 21.8066C11.334 22.2207 10.1768 21.668 10.1221 21.6=
406C8.77539 20.8477 7.64941 19.7988 6.85547 18.3652C6.08984 16.9844 5.64453=
 15.5039 5.57129 13.9238C5.55176 13.541 5.66406 13.4062 6.04297 13.3379C6.5=
4199 13.2461 7.05762 13.2266 7.55664 13.2988C9.66602 13.6074 11.4619 14.552=
7 12.9668 16.0469C13.8262 16.9004 14.4766 17.918 15.1465 18.9121C15.8584 19=
.9688 16.625 20.9746 17.6006 21.7988C17.9443 22.0879 18.2197 22.3086 18.482=
4 22.4707C17.6895 22.5586 16.3652 22.5781 15.46 21.8613ZM16.4502 15.4805C16=
.4502 15.3105 16.5859 15.1758 16.7568 15.1758C16.7949 15.1758 16.8301 15.18=
36 16.8613 15.1953C16.9033 15.2109 16.9424 15.2344 16.9727 15.2695C17.0273 =
15.3223 17.0586 15.4004 17.0586 15.4805C17.0586 15.6504 16.9229 15.7852 16.=
7529 15.7852C16.582 15.7852 16.4502 15.6504 16.4502 15.4805ZM19.5273 17.062=
5C19.3301 17.1426 19.1328 17.2129 18.9434 17.2207C18.6494 17.2344 18.3281 1=
7.1152 18.1533 16.9688C17.8828 16.7422 17.6895 16.6152 17.6074 16.2168C17.5=
732 16.0469 17.5928 15.7852 17.623 15.6348C17.6934 15.3105 17.6152 15.1035 =
17.3877 14.9141C17.2012 14.7598 16.9658 14.7188 16.7061 14.7188C16.6094 14.=
7188 16.5205 14.6758 16.4541 14.6406C16.3457 14.5859 16.2568 14.4512 16.341=
8 14.2852C16.3691 14.2324 16.501 14.1016 16.5322 14.0781C16.8838 13.877 17.=
29 13.9434 17.666 14.0938C18.0146 14.2363 18.2773 14.498 18.6562 14.8672C19=
.0439 15.3145 19.1133 15.4395 19.334 15.7734C19.5078 16.0371 19.667 16.3066=
 19.7754 16.6152C19.8408 16.8066 19.7559 16.9648 19.5273 17.0625Z" fill-rul=
e=3D"nonzero" fill=3D"#4D6BFE"></path></svg></div><div class=3D"ds-markdown=
 ds-markdown--block" style=3D"--ds-md-zoom: 1.143;"><p>The error you're enc=
ountering is related to how Python handles multiprocessing, especially on W=
indows or macOS. When using <code>DataLoader</code> with <code>num_workers =
&gt; 0</code>, the main script must be protected by the <code>if __name__ =
=3D=3D '__main__':</code> block to avoid recursive spawning of subprocesses=
.</p><h3>Fix: Wrap the Training Code in <code>if __name__ =3D=3D '__main__'=
:</code></h3><p>Here=E2=80=99s how you can fix the issue:</p><div class=3D"=
md-code-block"><div class=3D"md-code-block-banner-wrap"><div class=3D"md-co=
de-block-banner"><div class=3D"md-code-block-infostring">python</div><div c=
lass=3D"md-code-block-action"><div class=3D"ds-markdown-code-copy-button">C=
opy</div></div></div></div><pre><span class=3D"token keyword">import</span>=
 os
<span class=3D"token keyword">import</span> torch
<span class=3D"token keyword">import</span> torch<span class=3D"token punct=
uation">.</span>nn <span class=3D"token keyword">as</span> nn
<span class=3D"token keyword">import</span> torch<span class=3D"token punct=
uation">.</span>optim <span class=3D"token keyword">as</span> optim
<span class=3D"token keyword">from</span> torch<span class=3D"token punctua=
tion">.</span>utils<span class=3D"token punctuation">.</span>data <span cla=
ss=3D"token keyword">import</span> DataLoader<span class=3D"token punctuati=
on">,</span> Dataset
<span class=3D"token keyword">from</span> torchvision <span class=3D"token =
keyword">import</span> transforms
<span class=3D"token keyword">from</span> PIL <span class=3D"token keyword"=
>import</span> Image
<span class=3D"token keyword">import</span> numpy <span class=3D"token keyw=
ord">as</span> np
<span class=3D"token keyword">import</span> matplotlib<span class=3D"token =
punctuation">.</span>pyplot <span class=3D"token keyword">as</span> plt

<span class=3D"token comment"># Define the U-Net model</span>
<span class=3D"token keyword">class</span> <span class=3D"token class-name"=
>UNet</span><span class=3D"token punctuation">(</span>nn<span class=3D"toke=
n punctuation">.</span>Module<span class=3D"token punctuation">)</span><spa=
n class=3D"token punctuation">:</span>
    <span class=3D"token keyword">def</span> <span class=3D"token function"=
>__init__</span><span class=3D"token punctuation">(</span>self<span class=
=3D"token punctuation">,</span> in_channels<span class=3D"token operator">=
=3D</span><span class=3D"token number">3</span><span class=3D"token punctua=
tion">,</span> out_channels<span class=3D"token operator">=3D</span><span c=
lass=3D"token number">1</span><span class=3D"token punctuation">,</span> in=
it_features<span class=3D"token operator">=3D</span><span class=3D"token nu=
mber">32</span><span class=3D"token punctuation">)</span><span class=3D"tok=
en punctuation">:</span>
        <span class=3D"token builtin">super</span><span class=3D"token punc=
tuation">(</span>UNet<span class=3D"token punctuation">,</span> self<span c=
lass=3D"token punctuation">)</span><span class=3D"token punctuation">.</spa=
n>__init__<span class=3D"token punctuation">(</span><span class=3D"token pu=
nctuation">)</span>
       =20
        features <span class=3D"token operator">=3D</span> init_features
        self<span class=3D"token punctuation">.</span>encoder1 <span class=
=3D"token operator">=3D</span> UNet<span class=3D"token punctuation">.</spa=
n>_block<span class=3D"token punctuation">(</span>in_channels<span class=3D=
"token punctuation">,</span> features<span class=3D"token punctuation">,</s=
pan> name<span class=3D"token operator">=3D</span><span class=3D"token stri=
ng">"enc1"</span><span class=3D"token punctuation">)</span>
        self<span class=3D"token punctuation">.</span>pool1 <span class=3D"=
token operator">=3D</span> nn<span class=3D"token punctuation">.</span>MaxP=
ool2d<span class=3D"token punctuation">(</span>kernel_size<span class=3D"to=
ken operator">=3D</span><span class=3D"token number">2</span><span class=3D=
"token punctuation">,</span> stride<span class=3D"token operator">=3D</span=
><span class=3D"token number">2</span><span class=3D"token punctuation">)</=
span>
        self<span class=3D"token punctuation">.</span>encoder2 <span class=
=3D"token operator">=3D</span> UNet<span class=3D"token punctuation">.</spa=
n>_block<span class=3D"token punctuation">(</span>features<span class=3D"to=
ken punctuation">,</span> features <span class=3D"token operator">*</span> =
<span class=3D"token number">2</span><span class=3D"token punctuation">,</s=
pan> name<span class=3D"token operator">=3D</span><span class=3D"token stri=
ng">"enc2"</span><span class=3D"token punctuation">)</span>
        self<span class=3D"token punctuation">.</span>pool2 <span class=3D"=
token operator">=3D</span> nn<span class=3D"token punctuation">.</span>MaxP=
ool2d<span class=3D"token punctuation">(</span>kernel_size<span class=3D"to=
ken operator">=3D</span><span class=3D"token number">2</span><span class=3D=
"token punctuation">,</span> stride<span class=3D"token operator">=3D</span=
><span class=3D"token number">2</span><span class=3D"token punctuation">)</=
span>
        self<span class=3D"token punctuation">.</span>encoder3 <span class=
=3D"token operator">=3D</span> UNet<span class=3D"token punctuation">.</spa=
n>_block<span class=3D"token punctuation">(</span>features <span class=3D"t=
oken operator">*</span> <span class=3D"token number">2</span><span class=3D=
"token punctuation">,</span> features <span class=3D"token operator">*</spa=
n> <span class=3D"token number">4</span><span class=3D"token punctuation">,=
</span> name<span class=3D"token operator">=3D</span><span class=3D"token s=
tring">"enc3"</span><span class=3D"token punctuation">)</span>
        self<span class=3D"token punctuation">.</span>pool3 <span class=3D"=
token operator">=3D</span> nn<span class=3D"token punctuation">.</span>MaxP=
ool2d<span class=3D"token punctuation">(</span>kernel_size<span class=3D"to=
ken operator">=3D</span><span class=3D"token number">2</span><span class=3D=
"token punctuation">,</span> stride<span class=3D"token operator">=3D</span=
><span class=3D"token number">2</span><span class=3D"token punctuation">)</=
span>
        self<span class=3D"token punctuation">.</span>encoder4 <span class=
=3D"token operator">=3D</span> UNet<span class=3D"token punctuation">.</spa=
n>_block<span class=3D"token punctuation">(</span>features <span class=3D"t=
oken operator">*</span> <span class=3D"token number">4</span><span class=3D=
"token punctuation">,</span> features <span class=3D"token operator">*</spa=
n> <span class=3D"token number">8</span><span class=3D"token punctuation">,=
</span> name<span class=3D"token operator">=3D</span><span class=3D"token s=
tring">"enc4"</span><span class=3D"token punctuation">)</span>
        self<span class=3D"token punctuation">.</span>pool4 <span class=3D"=
token operator">=3D</span> nn<span class=3D"token punctuation">.</span>MaxP=
ool2d<span class=3D"token punctuation">(</span>kernel_size<span class=3D"to=
ken operator">=3D</span><span class=3D"token number">2</span><span class=3D=
"token punctuation">,</span> stride<span class=3D"token operator">=3D</span=
><span class=3D"token number">2</span><span class=3D"token punctuation">)</=
span>
       =20
        self<span class=3D"token punctuation">.</span>bottleneck <span clas=
s=3D"token operator">=3D</span> UNet<span class=3D"token punctuation">.</sp=
an>_block<span class=3D"token punctuation">(</span>features <span class=3D"=
token operator">*</span> <span class=3D"token number">8</span><span class=
=3D"token punctuation">,</span> features <span class=3D"token operator">*</=
span> <span class=3D"token number">16</span><span class=3D"token punctuatio=
n">,</span> name<span class=3D"token operator">=3D</span><span class=3D"tok=
en string">"bottleneck"</span><span class=3D"token punctuation">)</span>
       =20
        self<span class=3D"token punctuation">.</span>upconv4 <span class=
=3D"token operator">=3D</span> nn<span class=3D"token punctuation">.</span>=
ConvTranspose2d<span class=3D"token punctuation">(</span>features <span cla=
ss=3D"token operator">*</span> <span class=3D"token number">16</span><span =
class=3D"token punctuation">,</span> features <span class=3D"token operator=
">*</span> <span class=3D"token number">8</span><span class=3D"token punctu=
ation">,</span> kernel_size<span class=3D"token operator">=3D</span><span c=
lass=3D"token number">2</span><span class=3D"token punctuation">,</span> st=
ride<span class=3D"token operator">=3D</span><span class=3D"token number">2=
</span><span class=3D"token punctuation">)</span>
        self<span class=3D"token punctuation">.</span>decoder4 <span class=
=3D"token operator">=3D</span> UNet<span class=3D"token punctuation">.</spa=
n>_block<span class=3D"token punctuation">(</span><span class=3D"token punc=
tuation">(</span>features <span class=3D"token operator">*</span> <span cla=
ss=3D"token number">8</span><span class=3D"token punctuation">)</span> <spa=
n class=3D"token operator">*</span> <span class=3D"token number">2</span><s=
pan class=3D"token punctuation">,</span> features <span class=3D"token oper=
ator">*</span> <span class=3D"token number">8</span><span class=3D"token pu=
nctuation">,</span> name<span class=3D"token operator">=3D</span><span clas=
s=3D"token string">"dec4"</span><span class=3D"token punctuation">)</span>
        self<span class=3D"token punctuation">.</span>upconv3 <span class=
=3D"token operator">=3D</span> nn<span class=3D"token punctuation">.</span>=
ConvTranspose2d<span class=3D"token punctuation">(</span>features <span cla=
ss=3D"token operator">*</span> <span class=3D"token number">8</span><span c=
lass=3D"token punctuation">,</span> features <span class=3D"token operator"=
>*</span> <span class=3D"token number">4</span><span class=3D"token punctua=
tion">,</span> kernel_size<span class=3D"token operator">=3D</span><span cl=
ass=3D"token number">2</span><span class=3D"token punctuation">,</span> str=
ide<span class=3D"token operator">=3D</span><span class=3D"token number">2<=
/span><span class=3D"token punctuation">)</span>
        self<span class=3D"token punctuation">.</span>decoder3 <span class=
=3D"token operator">=3D</span> UNet<span class=3D"token punctuation">.</spa=
n>_block<span class=3D"token punctuation">(</span><span class=3D"token punc=
tuation">(</span>features <span class=3D"token operator">*</span> <span cla=
ss=3D"token number">4</span><span class=3D"token punctuation">)</span> <spa=
n class=3D"token operator">*</span> <span class=3D"token number">2</span><s=
pan class=3D"token punctuation">,</span> features <span class=3D"token oper=
ator">*</span> <span class=3D"token number">4</span><span class=3D"token pu=
nctuation">,</span> name<span class=3D"token operator">=3D</span><span clas=
s=3D"token string">"dec3"</span><span class=3D"token punctuation">)</span>
        self<span class=3D"token punctuation">.</span>upconv2 <span class=
=3D"token operator">=3D</span> nn<span class=3D"token punctuation">.</span>=
ConvTranspose2d<span class=3D"token punctuation">(</span>features <span cla=
ss=3D"token operator">*</span> <span class=3D"token number">4</span><span c=
lass=3D"token punctuation">,</span> features <span class=3D"token operator"=
>*</span> <span class=3D"token number">2</span><span class=3D"token punctua=
tion">,</span> kernel_size<span class=3D"token operator">=3D</span><span cl=
ass=3D"token number">2</span><span class=3D"token punctuation">,</span> str=
ide<span class=3D"token operator">=3D</span><span class=3D"token number">2<=
/span><span class=3D"token punctuation">)</span>
        self<span class=3D"token punctuation">.</span>decoder2 <span class=
=3D"token operator">=3D</span> UNet<span class=3D"token punctuation">.</spa=
n>_block<span class=3D"token punctuation">(</span><span class=3D"token punc=
tuation">(</span>features <span class=3D"token operator">*</span> <span cla=
ss=3D"token number">2</span><span class=3D"token punctuation">)</span> <spa=
n class=3D"token operator">*</span> <span class=3D"token number">2</span><s=
pan class=3D"token punctuation">,</span> features <span class=3D"token oper=
ator">*</span> <span class=3D"token number">2</span><span class=3D"token pu=
nctuation">,</span> name<span class=3D"token operator">=3D</span><span clas=
s=3D"token string">"dec2"</span><span class=3D"token punctuation">)</span>
        self<span class=3D"token punctuation">.</span>upconv1 <span class=
=3D"token operator">=3D</span> nn<span class=3D"token punctuation">.</span>=
ConvTranspose2d<span class=3D"token punctuation">(</span>features <span cla=
ss=3D"token operator">*</span> <span class=3D"token number">2</span><span c=
lass=3D"token punctuation">,</span> features<span class=3D"token punctuatio=
n">,</span> kernel_size<span class=3D"token operator">=3D</span><span class=
=3D"token number">2</span><span class=3D"token punctuation">,</span> stride=
<span class=3D"token operator">=3D</span><span class=3D"token number">2</sp=
an><span class=3D"token punctuation">)</span>
        self<span class=3D"token punctuation">.</span>decoder1 <span class=
=3D"token operator">=3D</span> UNet<span class=3D"token punctuation">.</spa=
n>_block<span class=3D"token punctuation">(</span>features <span class=3D"t=
oken operator">*</span> <span class=3D"token number">2</span><span class=3D=
"token punctuation">,</span> features<span class=3D"token punctuation">,</s=
pan> name<span class=3D"token operator">=3D</span><span class=3D"token stri=
ng">"dec1"</span><span class=3D"token punctuation">)</span>
       =20
        self<span class=3D"token punctuation">.</span>conv <span class=3D"t=
oken operator">=3D</span> nn<span class=3D"token punctuation">.</span>Conv2=
d<span class=3D"token punctuation">(</span>in_channels<span class=3D"token =
operator">=3D</span>features<span class=3D"token punctuation">,</span> out_=
channels<span class=3D"token operator">=3D</span>out_channels<span class=3D=
"token punctuation">,</span> kernel_size<span class=3D"token operator">=3D<=
/span><span class=3D"token number">1</span><span class=3D"token punctuation=
">)</span>
   =20
    <span class=3D"token keyword">def</span> <span class=3D"token function"=
>forward</span><span class=3D"token punctuation">(</span>self<span class=3D=
"token punctuation">,</span> x<span class=3D"token punctuation">)</span><sp=
an class=3D"token punctuation">:</span>
        enc1 <span class=3D"token operator">=3D</span> self<span class=3D"t=
oken punctuation">.</span>encoder1<span class=3D"token punctuation">(</span=
>x<span class=3D"token punctuation">)</span>
        enc2 <span class=3D"token operator">=3D</span> self<span class=3D"t=
oken punctuation">.</span>encoder2<span class=3D"token punctuation">(</span=
>self<span class=3D"token punctuation">.</span>pool1<span class=3D"token pu=
nctuation">(</span>enc1<span class=3D"token punctuation">)</span><span clas=
s=3D"token punctuation">)</span>
        enc3 <span class=3D"token operator">=3D</span> self<span class=3D"t=
oken punctuation">.</span>encoder3<span class=3D"token punctuation">(</span=
>self<span class=3D"token punctuation">.</span>pool2<span class=3D"token pu=
nctuation">(</span>enc2<span class=3D"token punctuation">)</span><span clas=
s=3D"token punctuation">)</span>
        enc4 <span class=3D"token operator">=3D</span> self<span class=3D"t=
oken punctuation">.</span>encoder4<span class=3D"token punctuation">(</span=
>self<span class=3D"token punctuation">.</span>pool3<span class=3D"token pu=
nctuation">(</span>enc3<span class=3D"token punctuation">)</span><span clas=
s=3D"token punctuation">)</span>
       =20
        bottleneck <span class=3D"token operator">=3D</span> self<span clas=
s=3D"token punctuation">.</span>bottleneck<span class=3D"token punctuation"=
>(</span>self<span class=3D"token punctuation">.</span>pool4<span class=3D"=
token punctuation">(</span>enc4<span class=3D"token punctuation">)</span><s=
pan class=3D"token punctuation">)</span>
       =20
        dec4 <span class=3D"token operator">=3D</span> self<span class=3D"t=
oken punctuation">.</span>upconv4<span class=3D"token punctuation">(</span>=
bottleneck<span class=3D"token punctuation">)</span>
        dec4 <span class=3D"token operator">=3D</span> torch<span class=3D"=
token punctuation">.</span>cat<span class=3D"token punctuation">(</span><sp=
an class=3D"token punctuation">(</span>dec4<span class=3D"token punctuation=
">,</span> enc4<span class=3D"token punctuation">)</span><span class=3D"tok=
en punctuation">,</span> dim<span class=3D"token operator">=3D</span><span =
class=3D"token number">1</span><span class=3D"token punctuation">)</span>
        dec4 <span class=3D"token operator">=3D</span> self<span class=3D"t=
oken punctuation">.</span>decoder4<span class=3D"token punctuation">(</span=
>dec4<span class=3D"token punctuation">)</span>
       =20
        dec3 <span class=3D"token operator">=3D</span> self<span class=3D"t=
oken punctuation">.</span>upconv3<span class=3D"token punctuation">(</span>=
dec4<span class=3D"token punctuation">)</span>
        dec3 <span class=3D"token operator">=3D</span> torch<span class=3D"=
token punctuation">.</span>cat<span class=3D"token punctuation">(</span><sp=
an class=3D"token punctuation">(</span>dec3<span class=3D"token punctuation=
">,</span> enc3<span class=3D"token punctuation">)</span><span class=3D"tok=
en punctuation">,</span> dim<span class=3D"token operator">=3D</span><span =
class=3D"token number">1</span><span class=3D"token punctuation">)</span>
        dec3 <span class=3D"token operator">=3D</span> self<span class=3D"t=
oken punctuation">.</span>decoder3<span class=3D"token punctuation">(</span=
>dec3<span class=3D"token punctuation">)</span>
       =20
        dec2 <span class=3D"token operator">=3D</span> self<span class=3D"t=
oken punctuation">.</span>upconv2<span class=3D"token punctuation">(</span>=
dec3<span class=3D"token punctuation">)</span>
        dec2 <span class=3D"token operator">=3D</span> torch<span class=3D"=
token punctuation">.</span>cat<span class=3D"token punctuation">(</span><sp=
an class=3D"token punctuation">(</span>dec2<span class=3D"token punctuation=
">,</span> enc2<span class=3D"token punctuation">)</span><span class=3D"tok=
en punctuation">,</span> dim<span class=3D"token operator">=3D</span><span =
class=3D"token number">1</span><span class=3D"token punctuation">)</span>
        dec2 <span class=3D"token operator">=3D</span> self<span class=3D"t=
oken punctuation">.</span>decoder2<span class=3D"token punctuation">(</span=
>dec2<span class=3D"token punctuation">)</span>
       =20
        dec1 <span class=3D"token operator">=3D</span> self<span class=3D"t=
oken punctuation">.</span>upconv1<span class=3D"token punctuation">(</span>=
dec2<span class=3D"token punctuation">)</span>
        dec1 <span class=3D"token operator">=3D</span> torch<span class=3D"=
token punctuation">.</span>cat<span class=3D"token punctuation">(</span><sp=
an class=3D"token punctuation">(</span>dec1<span class=3D"token punctuation=
">,</span> enc1<span class=3D"token punctuation">)</span><span class=3D"tok=
en punctuation">,</span> dim<span class=3D"token operator">=3D</span><span =
class=3D"token number">1</span><span class=3D"token punctuation">)</span>
        dec1 <span class=3D"token operator">=3D</span> self<span class=3D"t=
oken punctuation">.</span>decoder1<span class=3D"token punctuation">(</span=
>dec1<span class=3D"token punctuation">)</span>
       =20
        <span class=3D"token keyword">return</span> torch<span class=3D"tok=
en punctuation">.</span>sigmoid<span class=3D"token punctuation">(</span>se=
lf<span class=3D"token punctuation">.</span>conv<span class=3D"token punctu=
ation">(</span>dec1<span class=3D"token punctuation">)</span><span class=3D=
"token punctuation">)</span>
   =20
    <span class=3D"token decorator annotation punctuation">@staticmethod</s=
pan>
    <span class=3D"token keyword">def</span> <span class=3D"token function"=
>_block</span><span class=3D"token punctuation">(</span>in_channels<span cl=
ass=3D"token punctuation">,</span> features<span class=3D"token punctuation=
">,</span> name<span class=3D"token punctuation">)</span><span class=3D"tok=
en punctuation">:</span>
        <span class=3D"token keyword">return</span> nn<span class=3D"token =
punctuation">.</span>Sequential<span class=3D"token punctuation">(</span>
            nn<span class=3D"token punctuation">.</span>Conv2d<span class=
=3D"token punctuation">(</span>in_channels<span class=3D"token operator">=
=3D</span>in_channels<span class=3D"token punctuation">,</span> out_channel=
s<span class=3D"token operator">=3D</span>features<span class=3D"token punc=
tuation">,</span> kernel_size<span class=3D"token operator">=3D</span><span=
 class=3D"token number">3</span><span class=3D"token punctuation">,</span> =
padding<span class=3D"token operator">=3D</span><span class=3D"token number=
">1</span><span class=3D"token punctuation">,</span> bias<span class=3D"tok=
en operator">=3D</span><span class=3D"token boolean">False</span><span clas=
s=3D"token punctuation">)</span><span class=3D"token punctuation">,</span>
            nn<span class=3D"token punctuation">.</span>BatchNorm2d<span cl=
ass=3D"token punctuation">(</span>num_features<span class=3D"token operator=
">=3D</span>features<span class=3D"token punctuation">)</span><span class=
=3D"token punctuation">,</span>
            nn<span class=3D"token punctuation">.</span>ReLU<span class=3D"=
token punctuation">(</span>inplace<span class=3D"token operator">=3D</span>=
<span class=3D"token boolean">True</span><span class=3D"token punctuation">=
)</span><span class=3D"token punctuation">,</span>
            nn<span class=3D"token punctuation">.</span>Conv2d<span class=
=3D"token punctuation">(</span>in_channels<span class=3D"token operator">=
=3D</span>features<span class=3D"token punctuation">,</span> out_channels<s=
pan class=3D"token operator">=3D</span>features<span class=3D"token punctua=
tion">,</span> kernel_size<span class=3D"token operator">=3D</span><span cl=
ass=3D"token number">3</span><span class=3D"token punctuation">,</span> pad=
ding<span class=3D"token operator">=3D</span><span class=3D"token number">1=
</span><span class=3D"token punctuation">,</span> bias<span class=3D"token =
operator">=3D</span><span class=3D"token boolean">False</span><span class=
=3D"token punctuation">)</span><span class=3D"token punctuation">,</span>
            nn<span class=3D"token punctuation">.</span>BatchNorm2d<span cl=
ass=3D"token punctuation">(</span>num_features<span class=3D"token operator=
">=3D</span>features<span class=3D"token punctuation">)</span><span class=
=3D"token punctuation">,</span>
            nn<span class=3D"token punctuation">.</span>ReLU<span class=3D"=
token punctuation">(</span>inplace<span class=3D"token operator">=3D</span>=
<span class=3D"token boolean">True</span><span class=3D"token punctuation">=
)</span><span class=3D"token punctuation">,</span>
        <span class=3D"token punctuation">)</span>

<span class=3D"token comment"># Custom Dataset Class</span>
<span class=3D"token keyword">class</span> <span class=3D"token class-name"=
>CustomDataset</span><span class=3D"token punctuation">(</span>Dataset<span=
 class=3D"token punctuation">)</span><span class=3D"token punctuation">:</s=
pan>
    <span class=3D"token keyword">def</span> <span class=3D"token function"=
>__init__</span><span class=3D"token punctuation">(</span>self<span class=
=3D"token punctuation">,</span> image_dir<span class=3D"token punctuation">=
,</span> mask_dir<span class=3D"token punctuation">,</span> transform<span =
class=3D"token operator">=3D</span><span class=3D"token boolean">None</span=
><span class=3D"token punctuation">)</span><span class=3D"token punctuation=
">:</span>
        self<span class=3D"token punctuation">.</span>image_dir <span class=
=3D"token operator">=3D</span> image_dir
        self<span class=3D"token punctuation">.</span>mask_dir <span class=
=3D"token operator">=3D</span> mask_dir
        self<span class=3D"token punctuation">.</span>transform <span class=
=3D"token operator">=3D</span> transform
        self<span class=3D"token punctuation">.</span>images <span class=3D=
"token operator">=3D</span> os<span class=3D"token punctuation">.</span>lis=
tdir<span class=3D"token punctuation">(</span>image_dir<span class=3D"token=
 punctuation">)</span>
   =20
    <span class=3D"token keyword">def</span> <span class=3D"token function"=
>__len__</span><span class=3D"token punctuation">(</span>self<span class=3D=
"token punctuation">)</span><span class=3D"token punctuation">:</span>
        <span class=3D"token keyword">return</span> <span class=3D"token bu=
iltin">len</span><span class=3D"token punctuation">(</span>self<span class=
=3D"token punctuation">.</span>images<span class=3D"token punctuation">)</s=
pan>
   =20
    <span class=3D"token keyword">def</span> <span class=3D"token function"=
>__getitem__</span><span class=3D"token punctuation">(</span>self<span clas=
s=3D"token punctuation">,</span> idx<span class=3D"token punctuation">)</sp=
an><span class=3D"token punctuation">:</span>
        img_path <span class=3D"token operator">=3D</span> os<span class=3D=
"token punctuation">.</span>path<span class=3D"token punctuation">.</span>j=
oin<span class=3D"token punctuation">(</span>self<span class=3D"token punct=
uation">.</span>image_dir<span class=3D"token punctuation">,</span> self<sp=
an class=3D"token punctuation">.</span>images<span class=3D"token punctuati=
on">[</span>idx<span class=3D"token punctuation">]</span><span class=3D"tok=
en punctuation">)</span>
        mask_path <span class=3D"token operator">=3D</span> os<span class=
=3D"token punctuation">.</span>path<span class=3D"token punctuation">.</spa=
n>join<span class=3D"token punctuation">(</span>self<span class=3D"token pu=
nctuation">.</span>mask_dir<span class=3D"token punctuation">,</span> self<=
span class=3D"token punctuation">.</span>images<span class=3D"token punctua=
tion">[</span>idx<span class=3D"token punctuation">]</span><span class=3D"t=
oken punctuation">)</span>
        image <span class=3D"token operator">=3D</span> np<span class=3D"to=
ken punctuation">.</span>array<span class=3D"token punctuation">(</span>Ima=
ge<span class=3D"token punctuation">.</span><span class=3D"token builtin">o=
pen</span><span class=3D"token punctuation">(</span>img_path<span class=3D"=
token punctuation">)</span><span class=3D"token punctuation">.</span>conver=
t<span class=3D"token punctuation">(</span><span class=3D"token string">"RG=
B"</span><span class=3D"token punctuation">)</span><span class=3D"token pun=
ctuation">)</span>
        mask <span class=3D"token operator">=3D</span> np<span class=3D"tok=
en punctuation">.</span>array<span class=3D"token punctuation">(</span>Imag=
e<span class=3D"token punctuation">.</span><span class=3D"token builtin">op=
en</span><span class=3D"token punctuation">(</span>mask_path<span class=3D"=
token punctuation">)</span><span class=3D"token punctuation">.</span>conver=
t<span class=3D"token punctuation">(</span><span class=3D"token string">"L"=
</span><span class=3D"token punctuation">)</span><span class=3D"token punct=
uation">,</span> dtype<span class=3D"token operator">=3D</span>np<span clas=
s=3D"token punctuation">.</span>float32<span class=3D"token punctuation">)<=
/span>
        mask<span class=3D"token punctuation">[</span>mask <span class=3D"t=
oken operator">=3D=3D</span> <span class=3D"token number">255.0</span><span=
 class=3D"token punctuation">]</span> <span class=3D"token operator">=3D</s=
pan> <span class=3D"token number">1.0</span>
       =20
        <span class=3D"token keyword">if</span> self<span class=3D"token pu=
nctuation">.</span>transform<span class=3D"token punctuation">:</span>
            augmentations <span class=3D"token operator">=3D</span> self<sp=
an class=3D"token punctuation">.</span>transform<span class=3D"token punctu=
ation">(</span>image<span class=3D"token operator">=3D</span>image<span cla=
ss=3D"token punctuation">,</span> mask<span class=3D"token operator">=3D</s=
pan>mask<span class=3D"token punctuation">)</span>
            image <span class=3D"token operator">=3D</span> augmentations<s=
pan class=3D"token punctuation">[</span><span class=3D"token string">"image=
"</span><span class=3D"token punctuation">]</span>
            mask <span class=3D"token operator">=3D</span> augmentations<sp=
an class=3D"token punctuation">[</span><span class=3D"token string">"mask"<=
/span><span class=3D"token punctuation">]</span>
       =20
        image <span class=3D"token operator">=3D</span> image<span class=3D=
"token punctuation">.</span>transpose<span class=3D"token punctuation">(</s=
pan><span class=3D"token punctuation">(</span><span class=3D"token number">=
2</span><span class=3D"token punctuation">,</span> <span class=3D"token num=
ber">0</span><span class=3D"token punctuation">,</span> <span class=3D"toke=
n number">1</span><span class=3D"token punctuation">)</span><span class=3D"=
token punctuation">)</span>  <span class=3D"token comment"># HWC to CHW</sp=
an>
        image <span class=3D"token operator">=3D</span> torch<span class=3D=
"token punctuation">.</span>tensor<span class=3D"token punctuation">(</span=
>image<span class=3D"token punctuation">,</span> dtype<span class=3D"token =
operator">=3D</span>torch<span class=3D"token punctuation">.</span><span cl=
ass=3D"token builtin">float</span><span class=3D"token punctuation">)</span=
>
        mask <span class=3D"token operator">=3D</span> torch<span class=3D"=
token punctuation">.</span>tensor<span class=3D"token punctuation">(</span>=
mask<span class=3D"token punctuation">,</span> dtype<span class=3D"token op=
erator">=3D</span>torch<span class=3D"token punctuation">.</span><span clas=
s=3D"token builtin">float</span><span class=3D"token punctuation">)</span>
       =20
        <span class=3D"token keyword">return</span> image<span class=3D"tok=
en punctuation">,</span> mask

<span class=3D"token comment"># Define transformations</span>
<span class=3D"token keyword">import</span> albumentations <span class=3D"t=
oken keyword">as</span> A
transform <span class=3D"token operator">=3D</span> A<span class=3D"token p=
unctuation">.</span>Compose<span class=3D"token punctuation">(</span><span =
class=3D"token punctuation">[</span>
    A<span class=3D"token punctuation">.</span>Resize<span class=3D"token p=
unctuation">(</span><span class=3D"token number">256</span><span class=3D"t=
oken punctuation">,</span> <span class=3D"token number">256</span><span cla=
ss=3D"token punctuation">)</span><span class=3D"token punctuation">,</span>
    A<span class=3D"token punctuation">.</span>HorizontalFlip<span class=3D=
"token punctuation">(</span>p<span class=3D"token operator">=3D</span><span=
 class=3D"token number">0.5</span><span class=3D"token punctuation">)</span=
><span class=3D"token punctuation">,</span>
    A<span class=3D"token punctuation">.</span>VerticalFlip<span class=3D"t=
oken punctuation">(</span>p<span class=3D"token operator">=3D</span><span c=
lass=3D"token number">0.5</span><span class=3D"token punctuation">)</span><=
span class=3D"token punctuation">,</span>
<span class=3D"token punctuation">]</span><span class=3D"token punctuation"=
>)</span>

<span class=3D"token comment"># Hyperparameters</span>
LEARNING_RATE <span class=3D"token operator">=3D</span> <span class=3D"toke=
n number">1e-4</span>
DEVICE <span class=3D"token operator">=3D</span> <span class=3D"token strin=
g">"cuda"</span> <span class=3D"token keyword">if</span> torch<span class=
=3D"token punctuation">.</span>cuda<span class=3D"token punctuation">.</spa=
n>is_available<span class=3D"token punctuation">(</span><span class=3D"toke=
n punctuation">)</span> <span class=3D"token keyword">else</span> <span cla=
ss=3D"token string">"cpu"</span>
BATCH_SIZE <span class=3D"token operator">=3D</span> <span class=3D"token n=
umber">16</span>
NUM_EPOCHS <span class=3D"token operator">=3D</span> <span class=3D"token n=
umber">10</span>
NUM_WORKERS <span class=3D"token operator">=3D</span> <span class=3D"token =
number">2</span>
IMAGE_HEIGHT <span class=3D"token operator">=3D</span> <span class=3D"token=
 number">256</span>
IMAGE_WIDTH <span class=3D"token operator">=3D</span> <span class=3D"token =
number">256</span>

<span class=3D"token comment"># Main block</span>
<span class=3D"token keyword">if</span> __name__ <span class=3D"token opera=
tor">=3D=3D</span> <span class=3D"token string">'__main__'</span><span clas=
s=3D"token punctuation">:</span>
    <span class=3D"token comment"># Initialize dataset and dataloader</span=
>
    train_dataset <span class=3D"token operator">=3D</span> CustomDataset<s=
pan class=3D"token punctuation">(</span>image_dir<span class=3D"token opera=
tor">=3D</span><span class=3D"token string">"my_dataset/images"</span><span=
 class=3D"token punctuation">,</span> mask_dir<span class=3D"token operator=
">=3D</span><span class=3D"token string">"my_dataset/masks"</span><span cla=
ss=3D"token punctuation">,</span> transform<span class=3D"token operator">=
=3D</span>transform<span class=3D"token punctuation">)</span>
    train_loader <span class=3D"token operator">=3D</span> DataLoader<span =
class=3D"token punctuation">(</span>train_dataset<span class=3D"token punct=
uation">,</span> batch_size<span class=3D"token operator">=3D</span>BATCH_S=
IZE<span class=3D"token punctuation">,</span> shuffle<span class=3D"token o=
perator">=3D</span><span class=3D"token boolean">True</span><span class=3D"=
token punctuation">,</span> num_workers<span class=3D"token operator">=3D</=
span>NUM_WORKERS<span class=3D"token punctuation">)</span>

    <span class=3D"token comment"># Initialize model, loss function, and op=
timizer</span>
    model <span class=3D"token operator">=3D</span> UNet<span class=3D"toke=
n punctuation">(</span><span class=3D"token punctuation">)</span><span clas=
s=3D"token punctuation">.</span>to<span class=3D"token punctuation">(</span=
>DEVICE<span class=3D"token punctuation">)</span>
    loss_fn <span class=3D"token operator">=3D</span> nn<span class=3D"toke=
n punctuation">.</span>BCELoss<span class=3D"token punctuation">(</span><sp=
an class=3D"token punctuation">)</span>
    optimizer <span class=3D"token operator">=3D</span> optim<span class=3D=
"token punctuation">.</span>Adam<span class=3D"token punctuation">(</span>m=
odel<span class=3D"token punctuation">.</span>parameters<span class=3D"toke=
n punctuation">(</span><span class=3D"token punctuation">)</span><span clas=
s=3D"token punctuation">,</span> lr<span class=3D"token operator">=3D</span=
>LEARNING_RATE<span class=3D"token punctuation">)</span>

    <span class=3D"token comment"># Training loop</span>
    <span class=3D"token keyword">for</span> epoch <span class=3D"token key=
word">in</span> <span class=3D"token builtin">range</span><span class=3D"to=
ken punctuation">(</span>NUM_EPOCHS<span class=3D"token punctuation">)</spa=
n><span class=3D"token punctuation">:</span>
        model<span class=3D"token punctuation">.</span>train<span class=3D"=
token punctuation">(</span><span class=3D"token punctuation">)</span>
        <span class=3D"token keyword">for</span> batch_idx<span class=3D"to=
ken punctuation">,</span> <span class=3D"token punctuation">(</span>data<sp=
an class=3D"token punctuation">,</span> targets<span class=3D"token punctua=
tion">)</span> <span class=3D"token keyword">in</span> <span class=3D"token=
 builtin">enumerate</span><span class=3D"token punctuation">(</span>train_l=
oader<span class=3D"token punctuation">)</span><span class=3D"token punctua=
tion">:</span>
            data <span class=3D"token operator">=3D</span> data<span class=
=3D"token punctuation">.</span>to<span class=3D"token punctuation">(</span>=
device<span class=3D"token operator">=3D</span>DEVICE<span class=3D"token p=
unctuation">)</span>
            targets <span class=3D"token operator">=3D</span> targets<span =
class=3D"token punctuation">.</span>to<span class=3D"token punctuation">(</=
span>device<span class=3D"token operator">=3D</span>DEVICE<span class=3D"to=
ken punctuation">)</span>
           =20
            <span class=3D"token comment"># Forward pass</span>
            predictions <span class=3D"token operator">=3D</span> model<spa=
n class=3D"token punctuation">(</span>data<span class=3D"token punctuation"=
>)</span>
            loss <span class=3D"token operator">=3D</span> loss_fn<span cla=
ss=3D"token punctuation">(</span>predictions<span class=3D"token punctuatio=
n">,</span> targets<span class=3D"token punctuation">)</span>
           =20
            <span class=3D"token comment"># Backward pass</span>
            optimizer<span class=3D"token punctuation">.</span>zero_grad<sp=
an class=3D"token punctuation">(</span><span class=3D"token punctuation">)<=
/span>
            loss<span class=3D"token punctuation">.</span>backward<span cla=
ss=3D"token punctuation">(</span><span class=3D"token punctuation">)</span>
            optimizer<span class=3D"token punctuation">.</span>step<span cl=
ass=3D"token punctuation">(</span><span class=3D"token punctuation">)</span=
>
           =20
            <span class=3D"token keyword">if</span> batch_idx <span class=
=3D"token operator">%</span> <span class=3D"token number">10</span> <span c=
lass=3D"token operator">=3D=3D</span> <span class=3D"token number">0</span>=
<span class=3D"token punctuation">:</span>
                <span class=3D"token keyword">print</span><span class=3D"to=
ken punctuation">(</span><span class=3D"token string-interpolation"><span c=
lass=3D"token string">f"Epoch [</span><span class=3D"token interpolation"><=
span class=3D"token punctuation">{</span>epoch<span class=3D"token punctuat=
ion">}</span></span><span class=3D"token string">/</span><span class=3D"tok=
en interpolation"><span class=3D"token punctuation">{</span>NUM_EPOCHS<span=
 class=3D"token punctuation">}</span></span><span class=3D"token string">] =
Batch </span><span class=3D"token interpolation"><span class=3D"token punct=
uation">{</span>batch_idx<span class=3D"token punctuation">}</span></span><=
span class=3D"token string">/</span><span class=3D"token interpolation"><sp=
an class=3D"token punctuation">{</span><span class=3D"token builtin">len</s=
pan><span class=3D"token punctuation">(</span>train_loader<span class=3D"to=
ken punctuation">)</span><span class=3D"token punctuation">}</span></span><=
span class=3D"token string"> Loss: </span><span class=3D"token interpolatio=
n"><span class=3D"token punctuation">{</span>loss<span class=3D"token punct=
uation">.</span>item<span class=3D"token punctuation">(</span><span class=
=3D"token punctuation">)</span><span class=3D"token punctuation">:</span><s=
pan class=3D"token format-spec">.4f</span><span class=3D"token punctuation"=
>}</span></span><span class=3D"token string">"</span></span><span class=3D"=
token punctuation">)</span>
       =20
        <span class=3D"token comment"># Save model checkpoint</span>
        torch<span class=3D"token punctuation">.</span>save<span class=3D"t=
oken punctuation">(</span>model<span class=3D"token punctuation">.</span>st=
ate_dict<span class=3D"token punctuation">(</span><span class=3D"token punc=
tuation">)</span><span class=3D"token punctuation">,</span> <span class=3D"=
token string-interpolation"><span class=3D"token string">f"unet_epoch_</spa=
n><span class=3D"token interpolation"><span class=3D"token punctuation">{</=
span>epoch<span class=3D"token punctuation">}</span></span><span class=3D"t=
oken string">.pth"</span></span><span class=3D"token punctuation">)</span>

    <span class=3D"token keyword">print</span><span class=3D"token punctuat=
ion">(</span><span class=3D"token string">"Training complete!"</span><span =
class=3D"token punctuation">)</span></pre></div><h3>Key Fix:</h3><ul><li><p=
>Wrap the entire training code inside the <code>if __name__ =3D=3D '__main_=
_':</code> block. This ensures that the multiprocessing code is only execut=
ed when the script is run directly, not when it is imported as a module.</p=
></li></ul><h3>Why This Fix Works:</h3><ul><li><p>On Windows and macOS, Pyt=
hon uses the <code>spawn</code> method to start new processes, which requir=
es the <code>if __name__ =3D=3D '__main__':</code> guard to avoid recursive=
 spawning of subprocesses.</p></li><li><p>This issue does not occur on Linu=
x, where the <code>fork</code> method is used, but it's good practice to in=
clude the guard for cross-platform compatibility.</p></li></ul><h3>Addition=
al Notes:</h3><ul><li><p>If you are using a Jupyter Notebook, you may need =
to move the code into a separate <code>.py</code> file and run it as a scri=
pt to avoid multiprocessing issues.</p></li><li><p>If you still encounter i=
ssues, try setting <code>num_workers=3D0</code> in the <code>DataLoader</co=
de> (though this will slow down data loading).</p></li></ul><p>Let me know =
if you need further assistance!</p></div><div class=3D"ds-flex" style=3D"ma=
rgin-top: 12px; height: 20px; align-items: center; gap: 12px;"><div class=
=3D"ds-flex abe97156" style=3D"align-items: center; gap: 12px;"><div class=
=3D"ds-icon-button" tabindex=3D"0" style=3D"--ds-icon-button-text-color: #9=
09090; --ds-icon-button-size: 20px;"><div class=3D"ds-icon" style=3D"font-s=
ize: 20px; width: 20px; height: 20px;"><svg viewBox=3D"0 0 20 20" fill=3D"n=
one" xmlns=3D"http://www.w3.org/2000/svg" xmlns:xlink=3D"http://www.w3.org/=
1999/xlink"><defs><clipPath id=3D"clip1248_20193"><rect id=3D"=E9=8D=A5=E6=
=83=A7=E7=9C=B0_1" width=3D"17.052675" height=3D"17.052441" transform=3D"tr=
anslate(1.000000 1.000000)" fill=3D"white" fill-opacity=3D"0"></rect></clip=
Path><clipPath id=3D"clip1257_20794"><rect id=3D"=E5=A4=8D=E5=88=B6" width=
=3D"20.000000" height=3D"20.000000" fill=3D"white" fill-opacity=3D"0"></rec=
t></clipPath></defs><g clip-path=3D"url(#clip1257_20794)"><g clip-path=3D"u=
rl(#clip1248_20193)"><path id=3D"path" d=3D"M5.03 14.64C4.77 14.64 4.5 14.6=
2 4.24 14.56C3.98 14.51 3.73 14.43 3.49 14.33C3.24 14.23 3.01 14.1 2.79 13.=
96C2.57 13.81 2.37 13.64 2.18 13.45C1.99 13.26 1.82 13.05 1.68 12.83C1.53 1=
2.61 1.4 12.37 1.3 12.13C1.2 11.88 1.13 11.63 1.07 11.36C1.02 11.1 1 10.84 =
1 10.57L1 5.07C1 4.8 1.02 4.54 1.07 4.27C1.13 4.01 1.2 3.76 1.3 3.51C1.4 3.=
26 1.53 3.03 1.68 2.81C1.82 2.58 1.99 2.38 2.18 2.19C2.37 2 2.57 1.83 2.79 =
1.68C3.01 1.53 3.24 1.41 3.49 1.31C3.73 1.2 3.98 1.13 4.24 1.07C4.5 1.02 4.=
77 1 5.03 1L10.49 1C10.75 1 11.01 1.02 11.27 1.07C11.53 1.13 11.78 1.2 12.0=
3 1.31C12.27 1.41 12.51 1.53 12.73 1.68C12.95 1.83 13.15 2 13.34 2.19C13.53=
 2.38 13.69 2.58 13.84 2.81C13.99 3.03 14.11 3.26 14.21 3.51C14.31 3.76 14.=
39 4.01 14.44 4.27C14.5 4.54 14.52 4.8 14.52 5.07L12.94 5.07C12.94 4.91 12.=
92 4.75 12.89 4.58C12.86 4.43 12.81 4.27 12.75 4.12C12.69 3.97 12.61 3.83 1=
2.52 3.69C12.43 3.56 12.33 3.43 12.22 3.32C12.1 3.2 11.98 3.1 11.85 3.01C11=
.71 2.92 11.57 2.84 11.42 2.78C11.27 2.72 11.12 2.67 10.96 2.64C10.81 2.61 =
10.65 2.59 10.49 2.59L5.03 2.59C4.87 2.59 4.71 2.61 4.55 2.64C4.4 2.67 4.24=
 2.72 4.09 2.78C3.95 2.84 3.8 2.92 3.67 3.01C3.54 3.1 3.41 3.2 3.3 3.32C3.1=
8 3.43 3.08 3.56 2.99 3.69C2.9 3.83 2.83 3.97 2.77 4.12C2.71 4.27 2.66 4.43=
 2.63 4.58C2.6 4.75 2.58 4.91 2.58 5.07L2.58 10.57C2.58 10.73 2.6 10.89 2.6=
3 11.05C2.66 11.21 2.71 11.37 2.77 11.52C2.83 11.67 2.9 11.81 2.99 11.94C3.=
08 12.08 3.18 12.2 3.3 12.32C3.41 12.43 3.54 12.54 3.67 12.63C3.8 12.72 3.9=
5 12.79 4.09 12.86C4.24 12.92 4.4 12.96 4.55 13C4.71 13.03 4.87 13.04 5.03 =
13.04L5.03 14.64Z" fill=3D"currentColor" fill-opacity=3D"1.000000" fill-rul=
e=3D"evenodd"></path></g><path id=3D"path" d=3D"M14.75 18.91L9.3 18.91C9.03=
 18.91 8.77 18.88 8.51 18.83C8.25 18.78 8 18.7 7.75 18.6C7.51 18.49 7.27 18=
.37 7.05 18.22C6.83 18.07 6.63 17.9 6.44 17.71C6.25 17.52 6.09 17.32 5.94 1=
7.1C5.79 16.87 5.67 16.64 5.57 16.39C5.47 16.14 5.39 15.89 5.34 15.63C5.28 =
15.37 5.26 15.1 5.26 14.83L5.26 9.33C5.26 9.06 5.28 8.8 5.34 8.54C5.39 8.28=
 5.47 8.02 5.57 7.77C5.67 7.53 5.79 7.29 5.94 7.07C6.09 6.85 6.25 6.64 6.44=
 6.45C6.63 6.26 6.83 6.09 7.05 5.95C7.27 5.8 7.51 5.67 7.75 5.57C8 5.47 8.2=
5 5.39 8.51 5.34C8.77 5.29 9.03 5.26 9.3 5.26L14.75 5.26C15.01 5.26 15.28 5=
.29 15.54 5.34C15.8 5.39 16.05 5.47 16.29 5.57C16.54 5.67 16.77 5.8 16.99 5=
.95C17.21 6.09 17.41 6.26 17.6 6.45C17.79 6.64 17.96 6.85 18.1 7.07C18.25 7=
.29 18.37 7.53 18.48 7.77C18.58 8.02 18.65 8.28 18.71 8.54C18.76 8.8 18.78 =
9.06 18.78 9.33L18.78 14.83C18.78 15.1 18.76 15.37 18.71 15.63C18.65 15.89 =
18.58 16.14 18.48 16.39C18.37 16.64 18.25 16.87 18.1 17.1C17.96 17.32 17.79=
 17.52 17.6 17.71C17.41 17.9 17.21 18.07 16.99 18.22C16.77 18.37 16.54 18.4=
9 16.29 18.6C16.05 18.7 15.8 18.78 15.54 18.83C15.28 18.88 15.01 18.91 14.7=
5 18.91ZM9.3 6.86C9.13 6.86 8.97 6.87 8.82 6.91C8.66 6.94 8.51 6.98 8.36 7.=
05C8.21 7.11 8.07 7.18 7.93 7.28C7.8 7.37 7.68 7.47 7.56 7.58C7.45 7.7 7.35=
 7.82 7.26 7.96C7.17 8.09 7.09 8.24 7.03 8.38C6.97 8.54 6.92 8.69 6.89 8.85=
C6.86 9.01 6.84 9.17 6.84 9.33L6.84 14.83C6.84 15 6.86 15.16 6.89 15.32C6.9=
2 15.48 6.97 15.63 7.03 15.78C7.09 15.93 7.17 16.07 7.26 16.21C7.35 16.34 7=
.45 16.47 7.56 16.58C7.68 16.7 7.8 16.8 7.93 16.89C8.07 16.98 8.21 17.06 8.=
36 17.12C8.51 17.18 8.66 17.23 8.82 17.26C8.97 17.29 9.13 17.31 9.3 17.31L1=
4.75 17.31C14.91 17.31 15.07 17.29 15.23 17.26C15.38 17.23 15.54 17.18 15.6=
9 17.12C15.83 17.06 15.98 16.98 16.11 16.89C16.24 16.8 16.37 16.7 16.48 16.=
58C16.59 16.47 16.7 16.34 16.79 16.21C16.87 16.07 16.95 15.93 17.01 15.78C1=
7.07 15.63 17.12 15.48 17.15 15.32C17.18 15.16 17.2 15 17.2 14.83L17.2 9.33=
C17.2 9.17 17.18 9.01 17.15 8.85C17.12 8.69 17.07 8.54 17.01 8.38C16.95 8.2=
4 16.87 8.09 16.79 7.96C16.7 7.82 16.59 7.7 16.48 7.58C16.37 7.47 16.24 7.3=
7 16.11 7.28C15.98 7.19 15.83 7.11 15.69 7.05C15.54 6.98 15.38 6.94 15.23 6=
.91C15.07 6.87 14.91 6.86 14.75 6.86L9.3 6.86Z" fill=3D"currentColor" fill-=
opacity=3D"1.000000" fill-rule=3D"nonzero"></path></g></svg></div></div><di=
v class=3D"ds-icon-button" tabindex=3D"0" style=3D"--ds-icon-button-text-co=
lor: #909090; --ds-icon-button-size: 20px;"><div class=3D"ds-icon" style=3D=
"font-size: 20px; width: 20px; height: 20px;"><svg viewBox=3D"0 0 20 20" fi=
ll=3D"none" xmlns=3D"http://www.w3.org/2000/svg" xmlns:xlink=3D"http://www.=
w3.org/1999/xlink"><defs><clipPath id=3D"clip1258_20811"><rect id=3D"=E9=87=
=8D=E6=96=B0=E7=94=9F=E6=88=90" width=3D"20.000000" height=3D"20.000000" fi=
ll=3D"white" fill-opacity=3D"0"></rect></clipPath></defs><rect id=3D"=E9=87=
=8D=E6=96=B0=E7=94=9F=E6=88=90" width=3D"20.000000" height=3D"20.000000" fi=
ll=3D"#FFFFFF" fill-opacity=3D"0"></rect><g clip-path=3D"url(#clip1258_2081=
1)"><path id=3D"path" d=3D"M17.01 7.63L13.98 7.62C13.88 7.62 13.79 7.6 13.7=
 7.56C13.62 7.52 13.54 7.47 13.47 7.4C13.4 7.33 13.35 7.25 13.32 7.16C13.28=
 7.07 13.26 6.98 13.26 6.88C13.26 6.79 13.28 6.69 13.32 6.6C13.35 6.51 13.4=
 6.43 13.47 6.36C13.54 6.3 13.62 6.24 13.7 6.21C13.79 6.17 13.88 6.15 13.98=
 6.15L15.57 6.16C15.67 6.16 15.76 6.14 15.85 6.1C15.94 6.06 16.01 6.01 16.0=
8 5.94C16.15 5.87 16.2 5.79 16.23 5.7C16.27 5.61 16.29 5.52 16.29 5.42L16.3=
 3.89C16.3 3.79 16.32 3.7 16.36 3.61C16.39 3.52 16.44 3.44 16.51 3.37C16.58=
 3.3 16.66 3.25 16.74 3.21C16.83 3.17 16.92 3.16 17.02 3.16C17.11 3.16 17.2=
 3.17 17.29 3.21C17.38 3.25 17.46 3.3 17.52 3.37C17.59 3.44 17.64 3.52 17.6=
8 3.61C17.71 3.7 17.73 3.79 17.73 3.89L17.72 6.9C17.72 7 17.71 7.09 17.67 7=
.18C17.63 7.27 17.58 7.34 17.52 7.41C17.45 7.48 17.37 7.53 17.29 7.57C17.2 =
7.61 17.11 7.63 17.01 7.63Z" fill=3D"currentColor" fill-opacity=3D"1.000000=
" fill-rule=3D"nonzero"></path><path id=3D"path" d=3D"M2.31 16.29L2.32 13.3=
C2.32 13.21 2.34 13.11 2.37 13.02C2.41 12.93 2.46 12.85 2.53 12.78C2.6 12.7=
1 2.67 12.66 2.76 12.62C2.85 12.58 2.94 12.56 3.03 12.56L6.07 12.57C6.16 12=
.57 6.25 12.59 6.34 12.63C6.43 12.67 6.51 12.72 6.57 12.79C6.64 12.86 6.69 =
12.94 6.73 13.03C6.76 13.12 6.78 13.22 6.78 13.32C6.78 13.41 6.76 13.51 6.7=
3 13.6C6.69 13.69 6.64 13.77 6.57 13.84C6.51 13.91 6.43 13.96 6.34 14C6.25 =
14.04 6.16 14.06 6.07 14.06L4.47 14.05C4.38 14.05 4.29 14.07 4.2 14.11C4.11=
 14.15 4.03 14.2 3.97 14.27C3.9 14.34 3.85 14.42 3.81 14.51C3.78 14.6 3.76 =
14.7 3.76 14.8L3.75 16.29C3.75 16.39 3.73 16.48 3.69 16.58C3.65 16.67 3.6 1=
6.75 3.54 16.82C3.47 16.89 3.39 16.94 3.3 16.98C3.22 17.01 3.13 17.03 3.03 =
17.03C2.94 17.03 2.85 17.02 2.76 16.98C2.67 16.94 2.59 16.89 2.52 16.82C2.4=
6 16.75 2.4 16.67 2.37 16.58C2.33 16.49 2.31 16.39 2.31 16.29Z" fill=3D"cur=
rentColor" fill-opacity=3D"1.000000" fill-rule=3D"nonzero"></path><path id=
=3D"path" d=3D"M9.88 18.01C9.51 18.01 9.15 17.99 8.79 17.94C8.42 17.89 8.07=
 17.82 7.71 17.73C7.36 17.63 7.02 17.51 6.68 17.37C6.34 17.23 6.02 17.07 5.=
7 16.89C5.39 16.7 5.09 16.5 4.8 16.28C4.52 16.05 4.25 15.81 3.99 15.55C3.74=
 15.29 3.5 15.02 3.29 14.73C3.07 14.44 2.88 14.13 2.7 13.82L4.15 13.05C4.32=
 13.35 4.51 13.64 4.72 13.91C4.93 14.18 5.17 14.43 5.42 14.66C5.67 14.9 5.9=
4 15.11 6.23 15.3C6.52 15.49 6.83 15.66 7.14 15.81C7.46 15.95 7.78 16.07 8.=
12 16.16C8.45 16.25 8.8 16.32 9.14 16.36C9.49 16.39 9.83 16.4 10.18 16.39C1=
0.53 16.37 10.87 16.33 11.22 16.26C11.56 16.19 11.89 16.09 12.21 15.97C12.5=
4 15.84 12.85 15.7 13.15 15.53C13.45 15.35 13.74 15.16 14.01 14.94C14.28 14=
.72 14.53 14.49 14.76 14.23C14.99 13.97 15.2 13.7 15.38 13.41C15.57 13.12 1=
5.73 12.82 15.87 12.5C16 12.19 16.11 11.87 16.2 11.53C16.28 11.2 16.34 10.8=
7 16.36 10.52C16.37 10.42 16.4 10.33 16.44 10.24C16.48 10.15 16.54 10.07 16=
.61 10C16.69 9.93 16.77 9.87 16.86 9.84C16.96 9.8 17.05 9.77 17.16 9.77C17.=
27 9.77 17.38 9.79 17.49 9.83C17.6 9.87 17.7 9.94 17.78 10.02C17.86 10.1 17=
.92 10.2 17.96 10.3C18 10.41 18.01 10.52 18 10.64C17.98 10.89 17.95 11.13 1=
7.91 11.38C17.86 11.62 17.81 11.87 17.74 12.11C17.68 12.35 17.6 12.58 17.51=
 12.82C17.42 13.05 17.32 13.28 17.21 13.5C17.1 13.73 16.98 13.95 16.85 14.1=
6C16.71 14.37 16.57 14.58 16.42 14.78C16.27 14.98 16.11 15.17 15.94 15.36C1=
5.77 15.54 15.59 15.72 15.41 15.89C15.22 16.06 15.03 16.22 14.83 16.37C14.6=
3 16.52 14.42 16.66 14.2 16.79C13.99 16.93 13.77 17.05 13.54 17.16C13.31 17=
.27 13.08 17.37 12.85 17.46C12.61 17.55 12.37 17.63 12.13 17.7C11.88 17.77 =
11.64 17.83 11.39 17.87C11.14 17.92 10.89 17.96 10.63 17.98C10.38 18 10.13 =
18.01 9.88 18.01Z" fill=3D"currentColor" fill-opacity=3D"1.000000" fill-rul=
e=3D"nonzero"></path><path id=3D"path" d=3D"M2.85 10.27C2.73 10.28 2.62 10.=
26 2.51 10.22C2.4 10.17 2.31 10.11 2.23 10.03C2.14 9.95 2.08 9.85 2.04 9.74=
C2 9.63 1.99 9.52 2 9.41C2.03 8.98 2.1 8.56 2.2 8.15C2.3 7.73 2.43 7.33 2.6=
 6.94C2.76 6.54 2.96 6.16 3.19 5.8C3.41 5.44 3.67 5.1 3.95 4.77C4.24 4.45 4=
.54 4.15 4.88 3.88C5.21 3.6 5.56 3.35 5.93 3.13C6.3 2.91 6.69 2.73 7.09 2.5=
7C7.5 2.41 7.91 2.28 8.33 2.19C8.75 2.09 9.18 2.03 9.62 2.01C10.05 1.98 10.=
48 1.99 10.91 2.03C11.35 2.07 11.77 2.14 12.19 2.25C12.61 2.36 13.02 2.5 13=
.42 2.67C13.81 2.84 14.19 3.04 14.56 3.28C14.92 3.51 15.27 3.77 15.59 4.05C=
15.91 4.34 16.21 4.64 16.48 4.98C16.75 5.31 17 5.66 17.21 6.03L15.78 6.83C1=
5.61 6.54 15.42 6.25 15.2 5.99C14.98 5.73 14.74 5.48 14.49 5.25C14.23 5.02 =
13.96 4.82 13.66 4.63C13.37 4.45 13.07 4.29 12.75 4.15C12.44 4.01 12.11 3.9=
 11.77 3.82C11.44 3.73 11.1 3.67 10.76 3.64C10.41 3.61 10.07 3.6 9.72 3.62C=
9.37 3.64 9.03 3.69 8.69 3.77C8.36 3.84 8.03 3.94 7.71 4.07C7.38 4.2 7.08 4=
.35 6.78 4.52C6.48 4.7 6.2 4.89 5.94 5.11C5.67 5.33 5.43 5.57 5.2 5.83C4.97=
 6.08 4.77 6.36 4.59 6.65C4.41 6.94 4.25 7.24 4.12 7.55C3.98 7.87 3.88 8.19=
 3.8 8.52C3.72 8.85 3.66 9.19 3.64 9.53C3.63 9.62 3.6 9.72 3.56 9.81C3.52 9=
.9 3.46 9.98 3.39 10.05C3.32 10.12 3.23 10.17 3.14 10.21C3.05 10.25 2.95 10=
.27 2.85 10.27Z" fill=3D"currentColor" fill-opacity=3D"1.000000" fill-rule=
=3D"nonzero"></path></g></svg></div></div><div class=3D"ds-icon-button" tab=
index=3D"0" style=3D"--ds-icon-button-text-color: #909090; --ds-icon-button=
-size: 20px;"><div class=3D"ds-icon" style=3D"font-size: 18px; width: 18px;=
 height: 18px;"><svg width=3D"18" height=3D"18" viewBox=3D"0 0 18 18" fill=
=3D"none" xmlns=3D"http://www.w3.org/2000/svg"><path d=3D"M2.5 18c-.663 0-1=
.298-.294-1.767-.815A2.944 2.944 0 0 1 0 15.222V8.777c0-.737.263-1.443.732-=
1.964C1.202 6.293 1.837 6 2.5 6s1.299.293 1.768.813A2.94 2.94 0 0 1 5 8.777=
v6.445c0 .737-.264 1.443-.733 1.963-.469.521-1.104.814-1.767.815zm0-10.308a=
.934.934 0 0 0-.693.319c-.183.204-.287.48-.287.77v6.445c0 .288.103.565.287.=
77.184.204.433.319.693.32.26-.001.51-.116.693-.32.183-.205.287-.482.287-.77=
V8.78c0-.143-.025-.285-.074-.417a1.105 1.105 0 0 0-.212-.354.981.981 0 0 0-=
.318-.237.897.897 0 0 0-.376-.084v.004z" fill=3D"currentColor"></path><path=
 d=3D"M10.352 18H7.564a3.539 3.539 0 0 1-2.519-1.062A3.658 3.658 0 0 1 4 14=
.378V8.281c0-.884.177-1.76.523-2.572l1.911-4.502c.142-.334.371-.622.662-.83=
4A1.949 1.949 0 0 1 9.122.21c.32.163.59.411.782.719l.171.271c.194.312.298.6=
73.298 1.041v1.755c0 .341.134.669.371.91.238.242.56.378.896.378h2.691a3.64 =
3.64 0 0 1 2.594 1.092A3.76 3.76 0 0 1 18 9.014a7.267 7.267 0 0 1-1.288 4.1=
47l-1.602 2.325a5.84 5.84 0 0 1-2.076 1.848 5.735 5.735 0 0 1-2.682.666zM8.=
245 1.648h-.03a.331.331 0 0 0-.293.212L6.012 6.36a4.882 4.882 0 0 0-.39 1.9=
2v6.095c0 .524.205 1.026.569 1.396.364.37.858.579 1.373.58h2.788c.672-.001 =
1.335-.166 1.931-.481a4.208 4.208 0 0 0 1.495-1.332l1.603-2.324a5.616 5.616=
 0 0 0 .994-3.201 2.1 2.1 0 0 0-.6-1.472 2.031 2.031 0 0 0-1.448-.61h-2.691=
c-.766-.001-1.5-.31-2.042-.861a2.964 2.964 0 0 1-.847-2.075V2.241a.297.297 =
0 0 0-.046-.16l-.17-.272a.334.334 0 0 0-.286-.16z" fill=3D"currentColor"></=
path></svg></div></div><div class=3D"ds-icon-button" tabindex=3D"0" style=
=3D"--ds-icon-button-text-color: #909090; --ds-icon-button-size: 20px;"><di=
v class=3D"ds-icon" style=3D"font-size: 20px; width: 20px; height: 20px;"><=
svg viewBox=3D"0 0 20 20" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg=
" xmlns:xlink=3D"http://www.w3.org/1999/xlink"><defs><clipPath id=3D"clip13=
48_20218"><rect id=3D"=E7=82=B9=E8=B8=A90718" width=3D"20.000000" height=3D=
"20.000000" fill=3D"white" fill-opacity=3D"0"></rect></clipPath></defs><rec=
t id=3D"=E7=82=B9=E8=B8=A90718" width=3D"20.000000" height=3D"20.000000" fi=
ll=3D"#FFFFFF" fill-opacity=3D"0"></rect><g clip-path=3D"url(#clip1348_2021=
8)"><path id=3D"path" d=3D"M3.71 13.17C3.53 13.17 3.36 13.16 3.18 13.12C3.0=
1 13.09 2.84 13.04 2.67 12.97C2.51 12.9 2.35 12.82 2.2 12.72C2.05 12.62 1.9=
2 12.51 1.79 12.38C1.66 12.25 1.55 12.12 1.45 11.97C1.35 11.82 1.27 11.67 1=
.2 11.5C1.13 11.34 1.08 11.17 1.05 11C1.01 10.82 1 10.65 1 10.47L1 4.19C1 4=
.02 1.02 3.84 1.06 3.67C1.09 3.5 1.15 3.33 1.22 3.17C1.29 3.01 1.37 2.86 1.=
47 2.71C1.57 2.57 1.68 2.43 1.81 2.31C1.93 2.19 2.07 2.08 2.22 1.98C2.36 1.=
88 2.52 1.8 2.68 1.74C2.84 1.67 3.01 1.62 3.19 1.59C3.36 1.55 3.53 1.54 3.7=
1 1.54C3.89 1.54 4.06 1.55 4.23 1.59C4.41 1.62 4.57 1.67 4.74 1.74C4.9 1.8 =
5.06 1.88 5.2 1.98C5.35 2.08 5.49 2.19 5.61 2.31C5.74 2.43 5.85 2.57 5.95 2=
.71C6.05 2.86 6.13 3.01 6.2 3.17C6.27 3.33 6.33 3.5 6.36 3.67C6.4 3.84 6.42=
 4.02 6.42 4.19L6.42 10.47C6.42 10.65 6.41 10.82 6.37 11C6.34 11.17 6.28 11=
.34 6.22 11.5C6.15 11.67 6.06 11.82 5.97 11.97C5.87 12.12 5.75 12.25 5.63 1=
2.38C5.5 12.51 5.36 12.62 5.22 12.72C5.07 12.82 4.91 12.9 4.75 12.97C4.58 1=
3.04 4.41 13.09 4.24 13.12C4.06 13.16 3.89 13.17 3.71 13.17ZM3.71 3.14C3.57=
 3.14 3.43 3.16 3.3 3.22C3.17 3.27 3.06 3.35 2.96 3.45C2.86 3.54 2.78 3.66 =
2.73 3.79C2.67 3.92 2.65 4.05 2.64 4.2L2.64 10.47C2.64 10.62 2.66 10.75 2.7=
2 10.89C2.77 11.02 2.85 11.14 2.95 11.24C3.05 11.34 3.16 11.42 3.29 11.48C3=
.43 11.54 3.57 11.56 3.71 11.56C3.85 11.56 3.99 11.54 4.12 11.48C4.26 11.42=
 4.37 11.34 4.47 11.24C4.57 11.14 4.65 11.02 4.7 10.89C4.75 10.75 4.78 10.6=
2 4.77 10.47L4.77 4.2C4.77 4.05 4.75 3.92 4.69 3.79C4.64 3.66 4.56 3.54 4.4=
6 3.44C4.36 3.34 4.25 3.27 4.12 3.21C3.99 3.16 3.85 3.14 3.71 3.14Z" fill=
=3D"currentColor" fill-opacity=3D"1.000000" fill-rule=3D"nonzero"></path><p=
ath id=3D"path" d=3D"M9.09 18.95C9.04 18.95 8.99 18.95 8.93 18.95C8.75 18.9=
3 8.57 18.89 8.4 18.83C8.23 18.77 8.07 18.69 7.92 18.58C7.78 18.48 7.64 18.=
35 7.53 18.21C7.42 18.07 7.32 17.92 7.25 17.75L5.31 13.26C4.95 12.44 4.77 1=
1.58 4.77 10.69L4.77 4.61C4.77 4.37 4.8 4.14 4.84 3.9C4.89 3.67 4.96 3.45 5=
.05 3.23C5.14 3.01 5.25 2.8 5.39 2.6C5.52 2.4 5.67 2.22 5.84 2.05C6.01 1.89=
 6.19 1.74 6.39 1.61C6.58 1.47 6.79 1.36 7.01 1.27C7.23 1.18 7.46 1.11 7.69=
 1.07C7.93 1.02 8.16 1 8.4 1L11.24 1C11.71 1 12.18 1.05 12.64 1.16C13.1 1.2=
8 13.54 1.44 13.97 1.66C14.39 1.88 14.78 2.14 15.13 2.46C15.49 2.77 15.8 3.=
12 16.08 3.5L17.71 5.82C18.13 6.43 18.46 7.08 18.68 7.79C18.91 8.5 19.02 9.=
22 19.02 9.96C19.02 10.21 18.99 10.45 18.95 10.69C18.9 10.93 18.83 11.16 18=
.73 11.38C18.64 11.61 18.53 11.82 18.39 12.03C18.25 12.23 18.1 12.42 17.92 =
12.59C17.75 12.76 17.56 12.92 17.36 13.05C17.15 13.19 16.94 13.3 16.71 13.4=
C16.49 13.49 16.25 13.56 16.01 13.61C15.77 13.66 15.53 13.68 15.28 13.68L12=
.54 13.68C12.37 13.68 12.21 13.71 12.05 13.78C11.89 13.84 11.75 13.94 11.63=
 14.06C11.51 14.18 11.42 14.32 11.35 14.48C11.29 14.63 11.26 14.8 11.26 14.=
97L11.26 16.71C11.25 17.09 11.15 17.43 10.95 17.75L10.78 18.02C10.6 18.31 1=
0.36 18.54 10.06 18.7C9.76 18.87 9.43 18.95 9.09 18.95ZM8.4 2.64C8.27 2.64 =
8.14 2.65 8.01 2.68C7.88 2.7 7.76 2.74 7.64 2.79C7.52 2.84 7.41 2.9 7.3 2.9=
7C7.19 3.04 7.09 3.12 7 3.21C6.91 3.31 6.83 3.41 6.75 3.51C6.68 3.62 6.62 3=
.73 6.57 3.85C6.52 3.97 6.48 4.1 6.46 4.22C6.43 4.35 6.42 4.48 6.42 4.61L6.=
42 10.69C6.42 11.35 6.55 11.99 6.82 12.6L8.76 17.1C8.82 17.23 8.92 17.3 9.0=
6 17.31C9.2 17.32 9.31 17.26 9.39 17.14L9.56 16.87C9.59 16.83 9.61 16.77 9.=
61 16.71L9.61 14.96C9.61 14.77 9.63 14.58 9.66 14.39C9.7 14.2 9.76 14.02 9.=
83 13.84C9.9 13.66 10 13.5 10.1 13.34C10.21 13.18 10.33 13.03 10.47 12.89C1=
0.6 12.76 10.75 12.63 10.91 12.53C11.07 12.42 11.24 12.33 11.42 12.26C11.6 =
12.18 11.78 12.13 11.97 12.09C12.16 12.05 12.35 12.03 12.55 12.03L15.28 12.=
03C15.42 12.03 15.56 12.02 15.69 11.99C15.82 11.97 15.96 11.93 16.08 11.87C=
16.21 11.82 16.33 11.76 16.44 11.68C16.56 11.61 16.66 11.52 16.76 11.42C16.=
85 11.33 16.94 11.22 17.02 11.11C17.09 11 17.16 10.88 17.21 10.75C17.26 10.=
62 17.3 10.5 17.33 10.36C17.35 10.23 17.37 10.09 17.37 9.96C17.37 9.38 17.2=
8 8.83 17.11 8.28C16.94 7.74 16.69 7.23 16.36 6.76L14.73 4.44C14.53 4.16 14=
.3 3.91 14.04 3.69C13.79 3.46 13.51 3.27 13.2 3.11C12.9 2.96 12.58 2.84 12.=
25 2.76C11.92 2.68 11.58 2.63 11.24 2.63L8.4 2.64Z" fill=3D"currentColor" f=
ill-opacity=3D"1.000000" fill-rule=3D"nonzero"></path></g></svg></div></div=
></div><div style=3D"flex: 1 1 0%;"></div></div></div><div class=3D"fa81"><=
div class=3D"fbb737a4">Pls fix below error.
ValueError: Using a target size (torch.Size([16, 256, 256])) that is differ=
ent to the input size (torch.Size([16, 1, 256, 256])) is deprecated. Please=
 ensure they have the same size.<div class=3D"ds-flex e0558cb1" style=3D"po=
sition: absolute; right: calc(100% + 18px); top: 12px; gap: 12px;"><div cla=
ss=3D"ds-icon-button" tabindex=3D"0" style=3D"--ds-icon-button-text-color: =
#909090; --ds-icon-button-size: 20px;"><div class=3D"ds-icon" style=3D"font=
-size: 20px; width: 20px; height: 20px;"><svg viewBox=3D"0 0 20 20" fill=3D=
"none" xmlns=3D"http://www.w3.org/2000/svg" xmlns:xlink=3D"http://www.w3.or=
g/1999/xlink"><defs><clipPath id=3D"clip1248_20193"><rect id=3D"=E9=8D=A5=
=E6=83=A7=E7=9C=B0_1" width=3D"17.052675" height=3D"17.052441" transform=3D=
"translate(1.000000 1.000000)" fill=3D"white" fill-opacity=3D"0"></rect></c=
lipPath><clipPath id=3D"clip1257_20794"><rect id=3D"=E5=A4=8D=E5=88=B6" wid=
th=3D"20.000000" height=3D"20.000000" fill=3D"white" fill-opacity=3D"0"></r=
ect></clipPath></defs><g clip-path=3D"url(#clip1257_20794)"><g clip-path=3D=
"url(#clip1248_20193)"><path id=3D"path" d=3D"M5.03 14.64C4.77 14.64 4.5 14=
.62 4.24 14.56C3.98 14.51 3.73 14.43 3.49 14.33C3.24 14.23 3.01 14.1 2.79 1=
3.96C2.57 13.81 2.37 13.64 2.18 13.45C1.99 13.26 1.82 13.05 1.68 12.83C1.53=
 12.61 1.4 12.37 1.3 12.13C1.2 11.88 1.13 11.63 1.07 11.36C1.02 11.1 1 10.8=
4 1 10.57L1 5.07C1 4.8 1.02 4.54 1.07 4.27C1.13 4.01 1.2 3.76 1.3 3.51C1.4 =
3.26 1.53 3.03 1.68 2.81C1.82 2.58 1.99 2.38 2.18 2.19C2.37 2 2.57 1.83 2.7=
9 1.68C3.01 1.53 3.24 1.41 3.49 1.31C3.73 1.2 3.98 1.13 4.24 1.07C4.5 1.02 =
4.77 1 5.03 1L10.49 1C10.75 1 11.01 1.02 11.27 1.07C11.53 1.13 11.78 1.2 12=
.03 1.31C12.27 1.41 12.51 1.53 12.73 1.68C12.95 1.83 13.15 2 13.34 2.19C13.=
53 2.38 13.69 2.58 13.84 2.81C13.99 3.03 14.11 3.26 14.21 3.51C14.31 3.76 1=
4.39 4.01 14.44 4.27C14.5 4.54 14.52 4.8 14.52 5.07L12.94 5.07C12.94 4.91 1=
2.92 4.75 12.89 4.58C12.86 4.43 12.81 4.27 12.75 4.12C12.69 3.97 12.61 3.83=
 12.52 3.69C12.43 3.56 12.33 3.43 12.22 3.32C12.1 3.2 11.98 3.1 11.85 3.01C=
11.71 2.92 11.57 2.84 11.42 2.78C11.27 2.72 11.12 2.67 10.96 2.64C10.81 2.6=
1 10.65 2.59 10.49 2.59L5.03 2.59C4.87 2.59 4.71 2.61 4.55 2.64C4.4 2.67 4.=
24 2.72 4.09 2.78C3.95 2.84 3.8 2.92 3.67 3.01C3.54 3.1 3.41 3.2 3.3 3.32C3=
.18 3.43 3.08 3.56 2.99 3.69C2.9 3.83 2.83 3.97 2.77 4.12C2.71 4.27 2.66 4.=
43 2.63 4.58C2.6 4.75 2.58 4.91 2.58 5.07L2.58 10.57C2.58 10.73 2.6 10.89 2=
.63 11.05C2.66 11.21 2.71 11.37 2.77 11.52C2.83 11.67 2.9 11.81 2.99 11.94C=
3.08 12.08 3.18 12.2 3.3 12.32C3.41 12.43 3.54 12.54 3.67 12.63C3.8 12.72 3=
.95 12.79 4.09 12.86C4.24 12.92 4.4 12.96 4.55 13C4.71 13.03 4.87 13.04 5.0=
3 13.04L5.03 14.64Z" fill=3D"currentColor" fill-opacity=3D"1.000000" fill-r=
ule=3D"evenodd"></path></g><path id=3D"path" d=3D"M14.75 18.91L9.3 18.91C9.=
03 18.91 8.77 18.88 8.51 18.83C8.25 18.78 8 18.7 7.75 18.6C7.51 18.49 7.27 =
18.37 7.05 18.22C6.83 18.07 6.63 17.9 6.44 17.71C6.25 17.52 6.09 17.32 5.94=
 17.1C5.79 16.87 5.67 16.64 5.57 16.39C5.47 16.14 5.39 15.89 5.34 15.63C5.2=
8 15.37 5.26 15.1 5.26 14.83L5.26 9.33C5.26 9.06 5.28 8.8 5.34 8.54C5.39 8.=
28 5.47 8.02 5.57 7.77C5.67 7.53 5.79 7.29 5.94 7.07C6.09 6.85 6.25 6.64 6.=
44 6.45C6.63 6.26 6.83 6.09 7.05 5.95C7.27 5.8 7.51 5.67 7.75 5.57C8 5.47 8=
.25 5.39 8.51 5.34C8.77 5.29 9.03 5.26 9.3 5.26L14.75 5.26C15.01 5.26 15.28=
 5.29 15.54 5.34C15.8 5.39 16.05 5.47 16.29 5.57C16.54 5.67 16.77 5.8 16.99=
 5.95C17.21 6.09 17.41 6.26 17.6 6.45C17.79 6.64 17.96 6.85 18.1 7.07C18.25=
 7.29 18.37 7.53 18.48 7.77C18.58 8.02 18.65 8.28 18.71 8.54C18.76 8.8 18.7=
8 9.06 18.78 9.33L18.78 14.83C18.78 15.1 18.76 15.37 18.71 15.63C18.65 15.8=
9 18.58 16.14 18.48 16.39C18.37 16.64 18.25 16.87 18.1 17.1C17.96 17.32 17.=
79 17.52 17.6 17.71C17.41 17.9 17.21 18.07 16.99 18.22C16.77 18.37 16.54 18=
.49 16.29 18.6C16.05 18.7 15.8 18.78 15.54 18.83C15.28 18.88 15.01 18.91 14=
.75 18.91ZM9.3 6.86C9.13 6.86 8.97 6.87 8.82 6.91C8.66 6.94 8.51 6.98 8.36 =
7.05C8.21 7.11 8.07 7.18 7.93 7.28C7.8 7.37 7.68 7.47 7.56 7.58C7.45 7.7 7.=
35 7.82 7.26 7.96C7.17 8.09 7.09 8.24 7.03 8.38C6.97 8.54 6.92 8.69 6.89 8.=
85C6.86 9.01 6.84 9.17 6.84 9.33L6.84 14.83C6.84 15 6.86 15.16 6.89 15.32C6=
.92 15.48 6.97 15.63 7.03 15.78C7.09 15.93 7.17 16.07 7.26 16.21C7.35 16.34=
 7.45 16.47 7.56 16.58C7.68 16.7 7.8 16.8 7.93 16.89C8.07 16.98 8.21 17.06 =
8.36 17.12C8.51 17.18 8.66 17.23 8.82 17.26C8.97 17.29 9.13 17.31 9.3 17.31=
L14.75 17.31C14.91 17.31 15.07 17.29 15.23 17.26C15.38 17.23 15.54 17.18 15=
.69 17.12C15.83 17.06 15.98 16.98 16.11 16.89C16.24 16.8 16.37 16.7 16.48 1=
6.58C16.59 16.47 16.7 16.34 16.79 16.21C16.87 16.07 16.95 15.93 17.01 15.78=
C17.07 15.63 17.12 15.48 17.15 15.32C17.18 15.16 17.2 15 17.2 14.83L17.2 9.=
33C17.2 9.17 17.18 9.01 17.15 8.85C17.12 8.69 17.07 8.54 17.01 8.38C16.95 8=
.24 16.87 8.09 16.79 7.96C16.7 7.82 16.59 7.7 16.48 7.58C16.37 7.47 16.24 7=
.37 16.11 7.28C15.98 7.19 15.83 7.11 15.69 7.05C15.54 6.98 15.38 6.94 15.23=
 6.91C15.07 6.87 14.91 6.86 14.75 6.86L9.3 6.86Z" fill=3D"currentColor" fil=
l-opacity=3D"1.000000" fill-rule=3D"nonzero"></path></g></svg></div></div><=
div class=3D"ds-icon-button" tabindex=3D"0" style=3D"--ds-icon-button-text-=
color: #909090; --ds-icon-button-size: 20px;"><div class=3D"ds-icon" style=
=3D"font-size: 20px; width: 20px; height: 20px;"><svg width=3D"20" height=
=3D"20" viewBox=3D"0 0 20 20" fill=3D"none" xmlns=3D"http://www.w3.org/2000=
/svg"><path d=3D"M18.2286 17.3545H1.77142C1.34538 17.3545 1 17.6999 1 18.12=
59C1 18.552 1.34538 18.8973 1.77142 18.8973H18.2286C18.6546 18.8973 19 18.5=
52 19 18.1259C19 17.6999 18.6546 17.3545 18.2286 17.3545Z" fill=3D"currentC=
olor"></path><mask id=3D"mask0_400_418" maskUnits=3D"userSpaceOnUse" x=3D"1=
" y=3D"1" width=3D"15" height=3D"15"><path d=3D"M15.1429 1.10254H1V15.2454H=
15.1429V1.10254Z" fill=3D"white"></path></mask><g mask=3D"url(#mask0_400_41=
8)"><path d=3D"M2.48999 15.2425C2.36999 15.2425 2.26002 15.2225 2.15002 15.=
2025C2.04002 15.1725 1.94003 15.1325 1.84003 15.0825C1.73003 15.0325 1.6399=
9 14.9825 1.54999 14.9025C1.45999 14.8325 1.39001 14.7525 1.32001 14.6625C1=
.25001 14.5825 1.19001 14.4825 1.14001 14.3825C1.09001 14.2825 1.05003 14.1=
725 1.03003 14.0625C1.01003 13.9525 1 13.8425 1 13.7225C1 13.6125 1.00998 1=
3.5025 1.03998 13.3925L1.75 10.4325C1.9 9.81254 2.20001 9.28253 2.64001 8.8=
3253L9.40002 2.08253C9.55002 1.92253 9.71997 1.78254 9.90997 1.66254C10.09 =
1.54254 10.28 1.44254 10.49 1.35254C10.69 1.27254 10.9 1.20254 11.12 1.1625=
4C11.33 1.12254 11.55 1.10254 11.77 1.10254C12 1.10254 12.21 1.12254 12.43 =
1.16254C12.65 1.20254 12.86 1.27254 13.06 1.35254C13.27 1.44254 13.46 1.542=
54 13.64 1.66254C13.83 1.78254 14 1.92253 14.15 2.08253C14.31 2.24253 14.45=
 2.41254 14.57 2.59254C14.69 2.77254 14.79 2.97255 14.88 3.17255C14.96 3.37=
255 15.03 3.59254 15.07 3.80254C15.11 4.02254 15.13 4.24254 15.13 4.46254C1=
5.13 4.68254 15.11 4.90253 15.07 5.11253C15.03 5.33253 14.96 5.54254 14.88 =
5.74254C14.79 5.95254 14.69 6.14254 14.57 6.32254C14.45 6.51254 14.31 6.682=
53 14.15 6.83253L7.40002 13.5925C6.95002 14.0425 6.42 14.3325 5.81 14.4825L=
2.84003 15.1925C2.73003 15.2225 2.60999 15.2425 2.48999 15.2425ZM11.67 2.73=
254C11.22 2.76254 10.84 2.94254 10.52 3.26254L3.78998 9.99254C3.55998 10.22=
25 3.41002 10.4925 3.33002 10.8125L2.66998 13.5625L5.42999 12.9025C5.73999 =
12.8225 6.02 12.6725 6.25 12.4425L13 5.68254C13.08 5.60254 13.15 5.52255 13=
.22 5.42255C13.28 5.33255 13.33 5.23254 13.38 5.12254C13.42 5.02254 13.45 4=
.91254 13.47 4.80254C13.5 4.68254 13.51 4.57254 13.51 4.46254C13.51 4.34254=
 13.5 4.23254 13.47 4.12254C13.45 4.01254 13.42 3.90254 13.38 3.79254C13.33=
 3.69254 13.28 3.59254 13.22 3.49254C13.15 3.40254 13.08 3.31254 13 3.23254=
C12.82 3.06254 12.62 2.92254 12.39 2.84254C12.16 2.75254 11.91 2.71254 11.6=
7 2.73254Z" fill=3D"currentColor"></path></g></svg></div></div></div></div>=
</div><div class=3D"f9bf7997 c05b5566"><div class=3D"eb23581b dfa60d66"><sv=
g viewBox=3D"0 0 30 30" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" =
xmlns:xlink=3D"http://www.w3.org/1999/xlink"><path id=3D"path" d=3D"M27.501=
 8.46875C27.249 8.3457 27.1406 8.58008 26.9932 8.69922C26.9434 8.73828 26.9=
004 8.78906 26.8584 8.83398C26.4902 9.22852 26.0605 9.48633 25.5 9.45508C24=
.6787 9.41016 23.9785 9.66797 23.3594 10.2969C23.2275 9.52148 22.79 9.05859=
 22.125 8.76172C21.7764 8.60742 21.4238 8.45312 21.1807 8.11719C21.0098 7.8=
7891 20.9639 7.61328 20.8779 7.35156C20.8242 7.19336 20.7695 7.03125 20.587=
9 7.00391C20.3906 6.97266 20.3135 7.13867 20.2363 7.27734C19.9258 7.84375 1=
9.8066 8.46875 19.8174 9.10156C19.8447 10.5234 20.4453 11.6562 21.6367 12.4=
629C21.7725 12.5547 21.8076 12.6484 21.7646 12.7832C21.6836 13.0605 21.5869=
 13.3301 21.501 13.6074C21.4473 13.7852 21.3662 13.8242 21.1768 13.7461C20.=
5225 13.4727 19.957 13.0684 19.458 12.5781C18.6104 11.7578 17.8438 10.8516 =
16.8877 10.1426C16.6631 9.97656 16.4395 9.82227 16.207 9.67578C15.2314 8.72=
656 16.335 7.94727 16.5898 7.85547C16.8574 7.75977 16.6826 7.42773 15.8193 =
7.43164C14.957 7.43555 14.167 7.72461 13.1611 8.10938C13.0137 8.16797 12.85=
94 8.21094 12.7002 8.24414C11.7871 8.07227 10.8389 8.0332 9.84766 8.14453C7=
.98242 8.35352 6.49219 9.23633 5.39648 10.7441C4.08105 12.5547 3.77148 14.6=
133 4.15039 16.7617C4.54883 19.0234 5.70215 20.8984 7.47559 22.3633C9.31348=
 23.8809 11.4307 24.625 13.8457 24.4824C15.3125 24.3984 16.9463 24.2012 18.=
7881 22.6406C19.2529 22.8711 19.7402 22.9629 20.5498 23.0332C21.1729 23.091=
8 21.7725 23.002 22.2373 22.9062C22.9648 22.752 22.9141 22.0781 22.6514 21.=
9531C20.5186 20.959 20.9863 21.3633 20.5605 21.0371C21.6445 19.752 23.2783 =
18.418 23.917 14.0977C23.9668 13.7539 23.9238 13.5391 23.917 13.2598C23.913=
1 13.0918 23.9512 13.0254 24.1445 13.0059C24.6787 12.9453 25.1973 12.7988 2=
5.6738 12.5352C27.0557 11.7793 27.6123 10.5391 27.7441 9.05078C27.7637 8.82=
422 27.7402 8.58789 27.501 8.46875ZM15.46 21.8613C13.3926 20.2344 12.3906 1=
9.6992 11.9766 19.7227C11.5898 19.7441 11.6592 20.1875 11.7441 20.4766C11.8=
33 20.7617 11.9492 20.959 12.1123 21.209C12.2246 21.375 12.3018 21.623 12 2=
1.8066C11.334 22.2207 10.1768 21.668 10.1221 21.6406C8.77539 20.8477 7.6494=
1 19.7988 6.85547 18.3652C6.08984 16.9844 5.64453 15.5039 5.57129 13.9238C5=
.55176 13.541 5.66406 13.4062 6.04297 13.3379C6.54199 13.2461 7.05762 13.22=
66 7.55664 13.2988C9.66602 13.6074 11.4619 14.5527 12.9668 16.0469C13.8262 =
16.9004 14.4766 17.918 15.1465 18.9121C15.8584 19.9688 16.625 20.9746 17.60=
06 21.7988C17.9443 22.0879 18.2197 22.3086 18.4824 22.4707C17.6895 22.5586 =
16.3652 22.5781 15.46 21.8613ZM16.4502 15.4805C16.4502 15.3105 16.5859 15.1=
758 16.7568 15.1758C16.7949 15.1758 16.8301 15.1836 16.8613 15.1953C16.9033=
 15.2109 16.9424 15.2344 16.9727 15.2695C17.0273 15.3223 17.0586 15.4004 17=
.0586 15.4805C17.0586 15.6504 16.9229 15.7852 16.7529 15.7852C16.582 15.785=
2 16.4502 15.6504 16.4502 15.4805ZM19.5273 17.0625C19.3301 17.1426 19.1328 =
17.2129 18.9434 17.2207C18.6494 17.2344 18.3281 17.1152 18.1533 16.9688C17.=
8828 16.7422 17.6895 16.6152 17.6074 16.2168C17.5732 16.0469 17.5928 15.785=
2 17.623 15.6348C17.6934 15.3105 17.6152 15.1035 17.3877 14.9141C17.2012 14=
.7598 16.9658 14.7188 16.7061 14.7188C16.6094 14.7188 16.5205 14.6758 16.45=
41 14.6406C16.3457 14.5859 16.2568 14.4512 16.3418 14.2852C16.3691 14.2324 =
16.501 14.1016 16.5322 14.0781C16.8838 13.877 17.29 13.9434 17.666 14.0938C=
18.0146 14.2363 18.2773 14.498 18.6562 14.8672C19.0439 15.3145 19.1133 15.4=
395 19.334 15.7734C19.5078 16.0371 19.667 16.3066 19.7754 16.6152C19.8408 1=
6.8066 19.7559 16.9648 19.5273 17.0625Z" fill-rule=3D"nonzero" fill=3D"#4D6=
BFE"></path></svg></div><div class=3D"ds-markdown ds-markdown--block" style=
=3D"--ds-md-zoom: 1.143;"><p>The error occurs because the output of your U-=
Net model has a shape of <code>[batch_size, 1, height, width]</code> (4D te=
nsor), while the target mask has a shape of <code>[batch_size, height, widt=
h]</code> (3D tensor). The <code>nn.BCELoss</code> (Binary Cross-Entropy Lo=
ss) expects both the input and target to have the same shape.</p><h3>Fix: A=
djust the Target Mask Shape</h3><p>You need to add an extra dimension to th=
e target mask to make it a 4D tensor with shape <code>[batch_size, 1, heigh=
t, width]</code>. This can be done using <code>unsqueeze(1)</code>.</p><p>H=
ere=E2=80=99s the corrected code:</p><div class=3D"md-code-block"><div clas=
s=3D"md-code-block-banner-wrap"><div class=3D"md-code-block-banner"><div cl=
ass=3D"md-code-block-infostring">python</div><div class=3D"md-code-block-ac=
tion"><div class=3D"ds-markdown-code-copy-button">Copy</div></div></div></d=
iv><pre><span class=3D"token comment"># Training loop</span>
<span class=3D"token keyword">for</span> epoch <span class=3D"token keyword=
">in</span> <span class=3D"token builtin">range</span><span class=3D"token =
punctuation">(</span>NUM_EPOCHS<span class=3D"token punctuation">)</span><s=
pan class=3D"token punctuation">:</span>
    model<span class=3D"token punctuation">.</span>train<span class=3D"toke=
n punctuation">(</span><span class=3D"token punctuation">)</span>
    <span class=3D"token keyword">for</span> batch_idx<span class=3D"token =
punctuation">,</span> <span class=3D"token punctuation">(</span>data<span c=
lass=3D"token punctuation">,</span> targets<span class=3D"token punctuation=
">)</span> <span class=3D"token keyword">in</span> <span class=3D"token bui=
ltin">enumerate</span><span class=3D"token punctuation">(</span>train_loade=
r<span class=3D"token punctuation">)</span><span class=3D"token punctuation=
">:</span>
        data <span class=3D"token operator">=3D</span> data<span class=3D"t=
oken punctuation">.</span>to<span class=3D"token punctuation">(</span>devic=
e<span class=3D"token operator">=3D</span>DEVICE<span class=3D"token punctu=
ation">)</span>
        targets <span class=3D"token operator">=3D</span> targets<span clas=
s=3D"token punctuation">.</span>to<span class=3D"token punctuation">(</span=
>device<span class=3D"token operator">=3D</span>DEVICE<span class=3D"token =
punctuation">)</span>
       =20
        <span class=3D"token comment"># Add an extra dimension to the targe=
t mask</span>
        targets <span class=3D"token operator">=3D</span> targets<span clas=
s=3D"token punctuation">.</span>unsqueeze<span class=3D"token punctuation">=
(</span><span class=3D"token number">1</span><span class=3D"token punctuati=
on">)</span>  <span class=3D"token comment"># Shape: [batch_size, 1, height=
, width]</span>
       =20
        <span class=3D"token comment"># Forward pass</span>
        predictions <span class=3D"token operator">=3D</span> model<span cl=
ass=3D"token punctuation">(</span>data<span class=3D"token punctuation">)</=
span>
        loss <span class=3D"token operator">=3D</span> loss_fn<span class=
=3D"token punctuation">(</span>predictions<span class=3D"token punctuation"=
>,</span> targets<span class=3D"token punctuation">)</span>
       =20
        <span class=3D"token comment"># Backward pass</span>
        optimizer<span class=3D"token punctuation">.</span>zero_grad<span c=
lass=3D"token punctuation">(</span><span class=3D"token punctuation">)</spa=
n>
        loss<span class=3D"token punctuation">.</span>backward<span class=
=3D"token punctuation">(</span><span class=3D"token punctuation">)</span>
        optimizer<span class=3D"token punctuation">.</span>step<span class=
=3D"token punctuation">(</span><span class=3D"token punctuation">)</span>
       =20
        <span class=3D"token keyword">if</span> batch_idx <span class=3D"to=
ken operator">%</span> <span class=3D"token number">10</span> <span class=
=3D"token operator">=3D=3D</span> <span class=3D"token number">0</span><spa=
n class=3D"token punctuation">:</span>
            <span class=3D"token keyword">print</span><span class=3D"token =
punctuation">(</span><span class=3D"token string-interpolation"><span class=
=3D"token string">f"Epoch [</span><span class=3D"token interpolation"><span=
 class=3D"token punctuation">{</span>epoch<span class=3D"token punctuation"=
>}</span></span><span class=3D"token string">/</span><span class=3D"token i=
nterpolation"><span class=3D"token punctuation">{</span>NUM_EPOCHS<span cla=
ss=3D"token punctuation">}</span></span><span class=3D"token string">] Batc=
h </span><span class=3D"token interpolation"><span class=3D"token punctuati=
on">{</span>batch_idx<span class=3D"token punctuation">}</span></span><span=
 class=3D"token string">/</span><span class=3D"token interpolation"><span c=
lass=3D"token punctuation">{</span><span class=3D"token builtin">len</span>=
<span class=3D"token punctuation">(</span>train_loader<span class=3D"token =
punctuation">)</span><span class=3D"token punctuation">}</span></span><span=
 class=3D"token string"> Loss: </span><span class=3D"token interpolation"><=
span class=3D"token punctuation">{</span>loss<span class=3D"token punctuati=
on">.</span>item<span class=3D"token punctuation">(</span><span class=3D"to=
ken punctuation">)</span><span class=3D"token punctuation">:</span><span cl=
ass=3D"token format-spec">.4f</span><span class=3D"token punctuation">}</sp=
an></span><span class=3D"token string">"</span></span><span class=3D"token =
punctuation">)</span>
   =20
    <span class=3D"token comment"># Save model checkpoint</span>
    torch<span class=3D"token punctuation">.</span>save<span class=3D"token=
 punctuation">(</span>model<span class=3D"token punctuation">.</span>state_=
dict<span class=3D"token punctuation">(</span><span class=3D"token punctuat=
ion">)</span><span class=3D"token punctuation">,</span> <span class=3D"toke=
n string-interpolation"><span class=3D"token string">f"unet_epoch_</span><s=
pan class=3D"token interpolation"><span class=3D"token punctuation">{</span=
>epoch<span class=3D"token punctuation">}</span></span><span class=3D"token=
 string">.pth"</span></span><span class=3D"token punctuation">)</span></pre=
></div><h3>Explanation of the Fix:</h3><ol start=3D"1"><li><p><strong>Targe=
t Shape Issue</strong>:</p><ul><li><p>The U-Net model outputs a tensor of s=
hape <code>[batch_size, 1, height, width]</code> because it has 1 output ch=
annel (for binary segmentation).</p></li><li><p>The target mask, however, h=
as a shape of <code>[batch_size, height, width]</code> because it is a 2D g=
rayscale image.</p></li></ul></li><li><p><strong>Adding an Extra Dimension<=
/strong>:</p><ul><li><p>Using <code>targets.unsqueeze(1)</code>, we add a c=
hannel dimension to the target mask, making its shape <code>[batch_size, 1,=
 height, width]</code>.</p></li><li><p>This ensures that the input and targ=
et shapes match for <code>nn.BCELoss</code>.</p></li></ul></li></ol><h3>Upd=
ated Full Code:</h3><div class=3D"md-code-block"><div class=3D"md-code-bloc=
k-banner-wrap"><div class=3D"md-code-block-banner"><div class=3D"md-code-bl=
ock-infostring">python</div><div class=3D"md-code-block-action"><div class=
=3D"ds-markdown-code-copy-button">Copy</div></div></div></div><pre><span cl=
ass=3D"token keyword">import</span> os
<span class=3D"token keyword">import</span> torch
<span class=3D"token keyword">import</span> torch<span class=3D"token punct=
uation">.</span>nn <span class=3D"token keyword">as</span> nn
<span class=3D"token keyword">import</span> torch<span class=3D"token punct=
uation">.</span>optim <span class=3D"token keyword">as</span> optim
<span class=3D"token keyword">from</span> torch<span class=3D"token punctua=
tion">.</span>utils<span class=3D"token punctuation">.</span>data <span cla=
ss=3D"token keyword">import</span> DataLoader<span class=3D"token punctuati=
on">,</span> Dataset
<span class=3D"token keyword">from</span> torchvision <span class=3D"token =
keyword">import</span> transforms
<span class=3D"token keyword">from</span> PIL <span class=3D"token keyword"=
>import</span> Image
<span class=3D"token keyword">import</span> numpy <span class=3D"token keyw=
ord">as</span> np
<span class=3D"token keyword">import</span> matplotlib<span class=3D"token =
punctuation">.</span>pyplot <span class=3D"token keyword">as</span> plt

<span class=3D"token comment"># Define the U-Net model</span>
<span class=3D"token keyword">class</span> <span class=3D"token class-name"=
>UNet</span><span class=3D"token punctuation">(</span>nn<span class=3D"toke=
n punctuation">.</span>Module<span class=3D"token punctuation">)</span><spa=
n class=3D"token punctuation">:</span>
    <span class=3D"token keyword">def</span> <span class=3D"token function"=
>__init__</span><span class=3D"token punctuation">(</span>self<span class=
=3D"token punctuation">,</span> in_channels<span class=3D"token operator">=
=3D</span><span class=3D"token number">3</span><span class=3D"token punctua=
tion">,</span> out_channels<span class=3D"token operator">=3D</span><span c=
lass=3D"token number">1</span><span class=3D"token punctuation">,</span> in=
it_features<span class=3D"token operator">=3D</span><span class=3D"token nu=
mber">32</span><span class=3D"token punctuation">)</span><span class=3D"tok=
en punctuation">:</span>
        <span class=3D"token builtin">super</span><span class=3D"token punc=
tuation">(</span>UNet<span class=3D"token punctuation">,</span> self<span c=
lass=3D"token punctuation">)</span><span class=3D"token punctuation">.</spa=
n>__init__<span class=3D"token punctuation">(</span><span class=3D"token pu=
nctuation">)</span>
       =20
        features <span class=3D"token operator">=3D</span> init_features
        self<span class=3D"token punctuation">.</span>encoder1 <span class=
=3D"token operator">=3D</span> UNet<span class=3D"token punctuation">.</spa=
n>_block<span class=3D"token punctuation">(</span>in_channels<span class=3D=
"token punctuation">,</span> features<span class=3D"token punctuation">,</s=
pan> name<span class=3D"token operator">=3D</span><span class=3D"token stri=
ng">"enc1"</span><span class=3D"token punctuation">)</span>
        self<span class=3D"token punctuation">.</span>pool1 <span class=3D"=
token operator">=3D</span> nn<span class=3D"token punctuation">.</span>MaxP=
ool2d<span class=3D"token punctuation">(</span>kernel_size<span class=3D"to=
ken operator">=3D</span><span class=3D"token number">2</span><span class=3D=
"token punctuation">,</span> stride<span class=3D"token operator">=3D</span=
><span class=3D"token number">2</span><span class=3D"token punctuation">)</=
span>
        self<span class=3D"token punctuation">.</span>encoder2 <span class=
=3D"token operator">=3D</span> UNet<span class=3D"token punctuation">.</spa=
n>_block<span class=3D"token punctuation">(</span>features<span class=3D"to=
ken punctuation">,</span> features <span class=3D"token operator">*</span> =
<span class=3D"token number">2</span><span class=3D"token punctuation">,</s=
pan> name<span class=3D"token operator">=3D</span><span class=3D"token stri=
ng">"enc2"</span><span class=3D"token punctuation">)</span>
        self<span class=3D"token punctuation">.</span>pool2 <span class=3D"=
token operator">=3D</span> nn<span class=3D"token punctuation">.</span>MaxP=
ool2d<span class=3D"token punctuation">(</span>kernel_size<span class=3D"to=
ken operator">=3D</span><span class=3D"token number">2</span><span class=3D=
"token punctuation">,</span> stride<span class=3D"token operator">=3D</span=
><span class=3D"token number">2</span><span class=3D"token punctuation">)</=
span>
        self<span class=3D"token punctuation">.</span>encoder3 <span class=
=3D"token operator">=3D</span> UNet<span class=3D"token punctuation">.</spa=
n>_block<span class=3D"token punctuation">(</span>features <span class=3D"t=
oken operator">*</span> <span class=3D"token number">2</span><span class=3D=
"token punctuation">,</span> features <span class=3D"token operator">*</spa=
n> <span class=3D"token number">4</span><span class=3D"token punctuation">,=
</span> name<span class=3D"token operator">=3D</span><span class=3D"token s=
tring">"enc3"</span><span class=3D"token punctuation">)</span>
        self<span class=3D"token punctuation">.</span>pool3 <span class=3D"=
token operator">=3D</span> nn<span class=3D"token punctuation">.</span>MaxP=
ool2d<span class=3D"token punctuation">(</span>kernel_size<span class=3D"to=
ken operator">=3D</span><span class=3D"token number">2</span><span class=3D=
"token punctuation">,</span> stride<span class=3D"token operator">=3D</span=
><span class=3D"token number">2</span><span class=3D"token punctuation">)</=
span>
        self<span class=3D"token punctuation">.</span>encoder4 <span class=
=3D"token operator">=3D</span> UNet<span class=3D"token punctuation">.</spa=
n>_block<span class=3D"token punctuation">(</span>features <span class=3D"t=
oken operator">*</span> <span class=3D"token number">4</span><span class=3D=
"token punctuation">,</span> features <span class=3D"token operator">*</spa=
n> <span class=3D"token number">8</span><span class=3D"token punctuation">,=
</span> name<span class=3D"token operator">=3D</span><span class=3D"token s=
tring">"enc4"</span><span class=3D"token punctuation">)</span>
        self<span class=3D"token punctuation">.</span>pool4 <span class=3D"=
token operator">=3D</span> nn<span class=3D"token punctuation">.</span>MaxP=
ool2d<span class=3D"token punctuation">(</span>kernel_size<span class=3D"to=
ken operator">=3D</span><span class=3D"token number">2</span><span class=3D=
"token punctuation">,</span> stride<span class=3D"token operator">=3D</span=
><span class=3D"token number">2</span><span class=3D"token punctuation">)</=
span>
       =20
        self<span class=3D"token punctuation">.</span>bottleneck <span clas=
s=3D"token operator">=3D</span> UNet<span class=3D"token punctuation">.</sp=
an>_block<span class=3D"token punctuation">(</span>features <span class=3D"=
token operator">*</span> <span class=3D"token number">8</span><span class=
=3D"token punctuation">,</span> features <span class=3D"token operator">*</=
span> <span class=3D"token number">16</span><span class=3D"token punctuatio=
n">,</span> name<span class=3D"token operator">=3D</span><span class=3D"tok=
en string">"bottleneck"</span><span class=3D"token punctuation">)</span>
       =20
        self<span class=3D"token punctuation">.</span>upconv4 <span class=
=3D"token operator">=3D</span> nn<span class=3D"token punctuation">.</span>=
ConvTranspose2d<span class=3D"token punctuation">(</span>features <span cla=
ss=3D"token operator">*</span> <span class=3D"token number">16</span><span =
class=3D"token punctuation">,</span> features <span class=3D"token operator=
">*</span> <span class=3D"token number">8</span><span class=3D"token punctu=
ation">,</span> kernel_size<span class=3D"token operator">=3D</span><span c=
lass=3D"token number">2</span><span class=3D"token punctuation">,</span> st=
ride<span class=3D"token operator">=3D</span><span class=3D"token number">2=
</span><span class=3D"token punctuation">)</span>
        self<span class=3D"token punctuation">.</span>decoder4 <span class=
=3D"token operator">=3D</span> UNet<span class=3D"token punctuation">.</spa=
n>_block<span class=3D"token punctuation">(</span><span class=3D"token punc=
tuation">(</span>features <span class=3D"token operator">*</span> <span cla=
ss=3D"token number">8</span><span class=3D"token punctuation">)</span> <spa=
n class=3D"token operator">*</span> <span class=3D"token number">2</span><s=
pan class=3D"token punctuation">,</span> features <span class=3D"token oper=
ator">*</span> <span class=3D"token number">8</span><span class=3D"token pu=
nctuation">,</span> name<span class=3D"token operator">=3D</span><span clas=
s=3D"token string">"dec4"</span><span class=3D"token punctuation">)</span>
        self<span class=3D"token punctuation">.</span>upconv3 <span class=
=3D"token operator">=3D</span> nn<span class=3D"token punctuation">.</span>=
ConvTranspose2d<span class=3D"token punctuation">(</span>features <span cla=
ss=3D"token operator">*</span> <span class=3D"token number">8</span><span c=
lass=3D"token punctuation">,</span> features <span class=3D"token operator"=
>*</span> <span class=3D"token number">4</span><span class=3D"token punctua=
tion">,</span> kernel_size<span class=3D"token operator">=3D</span><span cl=
ass=3D"token number">2</span><span class=3D"token punctuation">,</span> str=
ide<span class=3D"token operator">=3D</span><span class=3D"token number">2<=
/span><span class=3D"token punctuation">)</span>
        self<span class=3D"token punctuation">.</span>decoder3 <span class=
=3D"token operator">=3D</span> UNet<span class=3D"token punctuation">.</spa=
n>_block<span class=3D"token punctuation">(</span><span class=3D"token punc=
tuation">(</span>features <span class=3D"token operator">*</span> <span cla=
ss=3D"token number">4</span><span class=3D"token punctuation">)</span> <spa=
n class=3D"token operator">*</span> <span class=3D"token number">2</span><s=
pan class=3D"token punctuation">,</span> features <span class=3D"token oper=
ator">*</span> <span class=3D"token number">4</span><span class=3D"token pu=
nctuation">,</span> name<span class=3D"token operator">=3D</span><span clas=
s=3D"token string">"dec3"</span><span class=3D"token punctuation">)</span>
        self<span class=3D"token punctuation">.</span>upconv2 <span class=
=3D"token operator">=3D</span> nn<span class=3D"token punctuation">.</span>=
ConvTranspose2d<span class=3D"token punctuation">(</span>features <span cla=
ss=3D"token operator">*</span> <span class=3D"token number">4</span><span c=
lass=3D"token punctuation">,</span> features <span class=3D"token operator"=
>*</span> <span class=3D"token number">2</span><span class=3D"token punctua=
tion">,</span> kernel_size<span class=3D"token operator">=3D</span><span cl=
ass=3D"token number">2</span><span class=3D"token punctuation">,</span> str=
ide<span class=3D"token operator">=3D</span><span class=3D"token number">2<=
/span><span class=3D"token punctuation">)</span>
        self<span class=3D"token punctuation">.</span>decoder2 <span class=
=3D"token operator">=3D</span> UNet<span class=3D"token punctuation">.</spa=
n>_block<span class=3D"token punctuation">(</span><span class=3D"token punc=
tuation">(</span>features <span class=3D"token operator">*</span> <span cla=
ss=3D"token number">2</span><span class=3D"token punctuation">)</span> <spa=
n class=3D"token operator">*</span> <span class=3D"token number">2</span><s=
pan class=3D"token punctuation">,</span> features <span class=3D"token oper=
ator">*</span> <span class=3D"token number">2</span><span class=3D"token pu=
nctuation">,</span> name<span class=3D"token operator">=3D</span><span clas=
s=3D"token string">"dec2"</span><span class=3D"token punctuation">)</span>
        self<span class=3D"token punctuation">.</span>upconv1 <span class=
=3D"token operator">=3D</span> nn<span class=3D"token punctuation">.</span>=
ConvTranspose2d<span class=3D"token punctuation">(</span>features <span cla=
ss=3D"token operator">*</span> <span class=3D"token number">2</span><span c=
lass=3D"token punctuation">,</span> features<span class=3D"token punctuatio=
n">,</span> kernel_size<span class=3D"token operator">=3D</span><span class=
=3D"token number">2</span><span class=3D"token punctuation">,</span> stride=
<span class=3D"token operator">=3D</span><span class=3D"token number">2</sp=
an><span class=3D"token punctuation">)</span>
        self<span class=3D"token punctuation">.</span>decoder1 <span class=
=3D"token operator">=3D</span> UNet<span class=3D"token punctuation">.</spa=
n>_block<span class=3D"token punctuation">(</span>features <span class=3D"t=
oken operator">*</span> <span class=3D"token number">2</span><span class=3D=
"token punctuation">,</span> features<span class=3D"token punctuation">,</s=
pan> name<span class=3D"token operator">=3D</span><span class=3D"token stri=
ng">"dec1"</span><span class=3D"token punctuation">)</span>
       =20
        self<span class=3D"token punctuation">.</span>conv <span class=3D"t=
oken operator">=3D</span> nn<span class=3D"token punctuation">.</span>Conv2=
d<span class=3D"token punctuation">(</span>in_channels<span class=3D"token =
operator">=3D</span>features<span class=3D"token punctuation">,</span> out_=
channels<span class=3D"token operator">=3D</span>out_channels<span class=3D=
"token punctuation">,</span> kernel_size<span class=3D"token operator">=3D<=
/span><span class=3D"token number">1</span><span class=3D"token punctuation=
">)</span>
   =20
    <span class=3D"token keyword">def</span> <span class=3D"token function"=
>forward</span><span class=3D"token punctuation">(</span>self<span class=3D=
"token punctuation">,</span> x<span class=3D"token punctuation">)</span><sp=
an class=3D"token punctuation">:</span>
        enc1 <span class=3D"token operator">=3D</span> self<span class=3D"t=
oken punctuation">.</span>encoder1<span class=3D"token punctuation">(</span=
>x<span class=3D"token punctuation">)</span>
        enc2 <span class=3D"token operator">=3D</span> self<span class=3D"t=
oken punctuation">.</span>encoder2<span class=3D"token punctuation">(</span=
>self<span class=3D"token punctuation">.</span>pool1<span class=3D"token pu=
nctuation">(</span>enc1<span class=3D"token punctuation">)</span><span clas=
s=3D"token punctuation">)</span>
        enc3 <span class=3D"token operator">=3D</span> self<span class=3D"t=
oken punctuation">.</span>encoder3<span class=3D"token punctuation">(</span=
>self<span class=3D"token punctuation">.</span>pool2<span class=3D"token pu=
nctuation">(</span>enc2<span class=3D"token punctuation">)</span><span clas=
s=3D"token punctuation">)</span>
        enc4 <span class=3D"token operator">=3D</span> self<span class=3D"t=
oken punctuation">.</span>encoder4<span class=3D"token punctuation">(</span=
>self<span class=3D"token punctuation">.</span>pool3<span class=3D"token pu=
nctuation">(</span>enc3<span class=3D"token punctuation">)</span><span clas=
s=3D"token punctuation">)</span>
       =20
        bottleneck <span class=3D"token operator">=3D</span> self<span clas=
s=3D"token punctuation">.</span>bottleneck<span class=3D"token punctuation"=
>(</span>self<span class=3D"token punctuation">.</span>pool4<span class=3D"=
token punctuation">(</span>enc4<span class=3D"token punctuation">)</span><s=
pan class=3D"token punctuation">)</span>
       =20
        dec4 <span class=3D"token operator">=3D</span> self<span class=3D"t=
oken punctuation">.</span>upconv4<span class=3D"token punctuation">(</span>=
bottleneck<span class=3D"token punctuation">)</span>
        dec4 <span class=3D"token operator">=3D</span> torch<span class=3D"=
token punctuation">.</span>cat<span class=3D"token punctuation">(</span><sp=
an class=3D"token punctuation">(</span>dec4<span class=3D"token punctuation=
">,</span> enc4<span class=3D"token punctuation">)</span><span class=3D"tok=
en punctuation">,</span> dim<span class=3D"token operator">=3D</span><span =
class=3D"token number">1</span><span class=3D"token punctuation">)</span>
        dec4 <span class=3D"token operator">=3D</span> self<span class=3D"t=
oken punctuation">.</span>decoder4<span class=3D"token punctuation">(</span=
>dec4<span class=3D"token punctuation">)</span>
       =20
        dec3 <span class=3D"token operator">=3D</span> self<span class=3D"t=
oken punctuation">.</span>upconv3<span class=3D"token punctuation">(</span>=
dec4<span class=3D"token punctuation">)</span>
        dec3 <span class=3D"token operator">=3D</span> torch<span class=3D"=
token punctuation">.</span>cat<span class=3D"token punctuation">(</span><sp=
an class=3D"token punctuation">(</span>dec3<span class=3D"token punctuation=
">,</span> enc3<span class=3D"token punctuation">)</span><span class=3D"tok=
en punctuation">,</span> dim<span class=3D"token operator">=3D</span><span =
class=3D"token number">1</span><span class=3D"token punctuation">)</span>
        dec3 <span class=3D"token operator">=3D</span> self<span class=3D"t=
oken punctuation">.</span>decoder3<span class=3D"token punctuation">(</span=
>dec3<span class=3D"token punctuation">)</span>
       =20
        dec2 <span class=3D"token operator">=3D</span> self<span class=3D"t=
oken punctuation">.</span>upconv2<span class=3D"token punctuation">(</span>=
dec3<span class=3D"token punctuation">)</span>
        dec2 <span class=3D"token operator">=3D</span> torch<span class=3D"=
token punctuation">.</span>cat<span class=3D"token punctuation">(</span><sp=
an class=3D"token punctuation">(</span>dec2<span class=3D"token punctuation=
">,</span> enc2<span class=3D"token punctuation">)</span><span class=3D"tok=
en punctuation">,</span> dim<span class=3D"token operator">=3D</span><span =
class=3D"token number">1</span><span class=3D"token punctuation">)</span>
        dec2 <span class=3D"token operator">=3D</span> self<span class=3D"t=
oken punctuation">.</span>decoder2<span class=3D"token punctuation">(</span=
>dec2<span class=3D"token punctuation">)</span>
       =20
        dec1 <span class=3D"token operator">=3D</span> self<span class=3D"t=
oken punctuation">.</span>upconv1<span class=3D"token punctuation">(</span>=
dec2<span class=3D"token punctuation">)</span>
        dec1 <span class=3D"token operator">=3D</span> torch<span class=3D"=
token punctuation">.</span>cat<span class=3D"token punctuation">(</span><sp=
an class=3D"token punctuation">(</span>dec1<span class=3D"token punctuation=
">,</span> enc1<span class=3D"token punctuation">)</span><span class=3D"tok=
en punctuation">,</span> dim<span class=3D"token operator">=3D</span><span =
class=3D"token number">1</span><span class=3D"token punctuation">)</span>
        dec1 <span class=3D"token operator">=3D</span> self<span class=3D"t=
oken punctuation">.</span>decoder1<span class=3D"token punctuation">(</span=
>dec1<span class=3D"token punctuation">)</span>
       =20
        <span class=3D"token keyword">return</span> torch<span class=3D"tok=
en punctuation">.</span>sigmoid<span class=3D"token punctuation">(</span>se=
lf<span class=3D"token punctuation">.</span>conv<span class=3D"token punctu=
ation">(</span>dec1<span class=3D"token punctuation">)</span><span class=3D=
"token punctuation">)</span>
   =20
    <span class=3D"token decorator annotation punctuation">@staticmethod</s=
pan>
    <span class=3D"token keyword">def</span> <span class=3D"token function"=
>_block</span><span class=3D"token punctuation">(</span>in_channels<span cl=
ass=3D"token punctuation">,</span> features<span class=3D"token punctuation=
">,</span> name<span class=3D"token punctuation">)</span><span class=3D"tok=
en punctuation">:</span>
        <span class=3D"token keyword">return</span> nn<span class=3D"token =
punctuation">.</span>Sequential<span class=3D"token punctuation">(</span>
            nn<span class=3D"token punctuation">.</span>Conv2d<span class=
=3D"token punctuation">(</span>in_channels<span class=3D"token operator">=
=3D</span>in_channels<span class=3D"token punctuation">,</span> out_channel=
s<span class=3D"token operator">=3D</span>features<span class=3D"token punc=
tuation">,</span> kernel_size<span class=3D"token operator">=3D</span><span=
 class=3D"token number">3</span><span class=3D"token punctuation">,</span> =
padding<span class=3D"token operator">=3D</span><span class=3D"token number=
">1</span><span class=3D"token punctuation">,</span> bias<span class=3D"tok=
en operator">=3D</span><span class=3D"token boolean">False</span><span clas=
s=3D"token punctuation">)</span><span class=3D"token punctuation">,</span>
            nn<span class=3D"token punctuation">.</span>BatchNorm2d<span cl=
ass=3D"token punctuation">(</span>num_features<span class=3D"token operator=
">=3D</span>features<span class=3D"token punctuation">)</span><span class=
=3D"token punctuation">,</span>
            nn<span class=3D"token punctuation">.</span>ReLU<span class=3D"=
token punctuation">(</span>inplace<span class=3D"token operator">=3D</span>=
<span class=3D"token boolean">True</span><span class=3D"token punctuation">=
)</span><span class=3D"token punctuation">,</span>
            nn<span class=3D"token punctuation">.</span>Conv2d<span class=
=3D"token punctuation">(</span>in_channels<span class=3D"token operator">=
=3D</span>features<span class=3D"token punctuation">,</span> out_channels<s=
pan class=3D"token operator">=3D</span>features<span class=3D"token punctua=
tion">,</span> kernel_size<span class=3D"token operator">=3D</span><span cl=
ass=3D"token number">3</span><span class=3D"token punctuation">,</span> pad=
ding<span class=3D"token operator">=3D</span><span class=3D"token number">1=
</span><span class=3D"token punctuation">,</span> bias<span class=3D"token =
operator">=3D</span><span class=3D"token boolean">False</span><span class=
=3D"token punctuation">)</span><span class=3D"token punctuation">,</span>
            nn<span class=3D"token punctuation">.</span>BatchNorm2d<span cl=
ass=3D"token punctuation">(</span>num_features<span class=3D"token operator=
">=3D</span>features<span class=3D"token punctuation">)</span><span class=
=3D"token punctuation">,</span>
            nn<span class=3D"token punctuation">.</span>ReLU<span class=3D"=
token punctuation">(</span>inplace<span class=3D"token operator">=3D</span>=
<span class=3D"token boolean">True</span><span class=3D"token punctuation">=
)</span><span class=3D"token punctuation">,</span>
        <span class=3D"token punctuation">)</span>

<span class=3D"token comment"># Custom Dataset Class</span>
<span class=3D"token keyword">class</span> <span class=3D"token class-name"=
>CustomDataset</span><span class=3D"token punctuation">(</span>Dataset<span=
 class=3D"token punctuation">)</span><span class=3D"token punctuation">:</s=
pan>
    <span class=3D"token keyword">def</span> <span class=3D"token function"=
>__init__</span><span class=3D"token punctuation">(</span>self<span class=
=3D"token punctuation">,</span> image_dir<span class=3D"token punctuation">=
,</span> mask_dir<span class=3D"token punctuation">,</span> transform<span =
class=3D"token operator">=3D</span><span class=3D"token boolean">None</span=
><span class=3D"token punctuation">)</span><span class=3D"token punctuation=
">:</span>
        self<span class=3D"token punctuation">.</span>image_dir <span class=
=3D"token operator">=3D</span> image_dir
        self<span class=3D"token punctuation">.</span>mask_dir <span class=
=3D"token operator">=3D</span> mask_dir
        self<span class=3D"token punctuation">.</span>transform <span class=
=3D"token operator">=3D</span> transform
        self<span class=3D"token punctuation">.</span>images <span class=3D=
"token operator">=3D</span> os<span class=3D"token punctuation">.</span>lis=
tdir<span class=3D"token punctuation">(</span>image_dir<span class=3D"token=
 punctuation">)</span>
   =20
    <span class=3D"token keyword">def</span> <span class=3D"token function"=
>__len__</span><span class=3D"token punctuation">(</span>self<span class=3D=
"token punctuation">)</span><span class=3D"token punctuation">:</span>
        <span class=3D"token keyword">return</span> <span class=3D"token bu=
iltin">len</span><span class=3D"token punctuation">(</span>self<span class=
=3D"token punctuation">.</span>images<span class=3D"token punctuation">)</s=
pan>
   =20
    <span class=3D"token keyword">def</span> <span class=3D"token function"=
>__getitem__</span><span class=3D"token punctuation">(</span>self<span clas=
s=3D"token punctuation">,</span> idx<span class=3D"token punctuation">)</sp=
an><span class=3D"token punctuation">:</span>
        img_path <span class=3D"token operator">=3D</span> os<span class=3D=
"token punctuation">.</span>path<span class=3D"token punctuation">.</span>j=
oin<span class=3D"token punctuation">(</span>self<span class=3D"token punct=
uation">.</span>image_dir<span class=3D"token punctuation">,</span> self<sp=
an class=3D"token punctuation">.</span>images<span class=3D"token punctuati=
on">[</span>idx<span class=3D"token punctuation">]</span><span class=3D"tok=
en punctuation">)</span>
        mask_path <span class=3D"token operator">=3D</span> os<span class=
=3D"token punctuation">.</span>path<span class=3D"token punctuation">.</spa=
n>join<span class=3D"token punctuation">(</span>self<span class=3D"token pu=
nctuation">.</span>mask_dir<span class=3D"token punctuation">,</span> self<=
span class=3D"token punctuation">.</span>images<span class=3D"token punctua=
tion">[</span>idx<span class=3D"token punctuation">]</span><span class=3D"t=
oken punctuation">)</span>
        image <span class=3D"token operator">=3D</span> np<span class=3D"to=
ken punctuation">.</span>array<span class=3D"token punctuation">(</span>Ima=
ge<span class=3D"token punctuation">.</span><span class=3D"token builtin">o=
pen</span><span class=3D"token punctuation">(</span>img_path<span class=3D"=
token punctuation">)</span><span class=3D"token punctuation">.</span>conver=
t<span class=3D"token punctuation">(</span><span class=3D"token string">"RG=
B"</span><span class=3D"token punctuation">)</span><span class=3D"token pun=
ctuation">)</span>
        mask <span class=3D"token operator">=3D</span> np<span class=3D"tok=
en punctuation">.</span>array<span class=3D"token punctuation">(</span>Imag=
e<span class=3D"token punctuation">.</span><span class=3D"token builtin">op=
en</span><span class=3D"token punctuation">(</span>mask_path<span class=3D"=
token punctuation">)</span><span class=3D"token punctuation">.</span>conver=
t<span class=3D"token punctuation">(</span><span class=3D"token string">"L"=
</span><span class=3D"token punctuation">)</span><span class=3D"token punct=
uation">,</span> dtype<span class=3D"token operator">=3D</span>np<span clas=
s=3D"token punctuation">.</span>float32<span class=3D"token punctuation">)<=
/span>
        mask<span class=3D"token punctuation">[</span>mask <span class=3D"t=
oken operator">=3D=3D</span> <span class=3D"token number">255.0</span><span=
 class=3D"token punctuation">]</span> <span class=3D"token operator">=3D</s=
pan> <span class=3D"token number">1.0</span>
       =20
        <span class=3D"token keyword">if</span> self<span class=3D"token pu=
nctuation">.</span>transform<span class=3D"token punctuation">:</span>
            augmentations <span class=3D"token operator">=3D</span> self<sp=
an class=3D"token punctuation">.</span>transform<span class=3D"token punctu=
ation">(</span>image<span class=3D"token operator">=3D</span>image<span cla=
ss=3D"token punctuation">,</span> mask<span class=3D"token operator">=3D</s=
pan>mask<span class=3D"token punctuation">)</span>
            image <span class=3D"token operator">=3D</span> augmentations<s=
pan class=3D"token punctuation">[</span><span class=3D"token string">"image=
"</span><span class=3D"token punctuation">]</span>
            mask <span class=3D"token operator">=3D</span> augmentations<sp=
an class=3D"token punctuation">[</span><span class=3D"token string">"mask"<=
/span><span class=3D"token punctuation">]</span>
       =20
        image <span class=3D"token operator">=3D</span> image<span class=3D=
"token punctuation">.</span>transpose<span class=3D"token punctuation">(</s=
pan><span class=3D"token punctuation">(</span><span class=3D"token number">=
2</span><span class=3D"token punctuation">,</span> <span class=3D"token num=
ber">0</span><span class=3D"token punctuation">,</span> <span class=3D"toke=
n number">1</span><span class=3D"token punctuation">)</span><span class=3D"=
token punctuation">)</span>  <span class=3D"token comment"># HWC to CHW</sp=
an>
        image <span class=3D"token operator">=3D</span> torch<span class=3D=
"token punctuation">.</span>tensor<span class=3D"token punctuation">(</span=
>image<span class=3D"token punctuation">,</span> dtype<span class=3D"token =
operator">=3D</span>torch<span class=3D"token punctuation">.</span><span cl=
ass=3D"token builtin">float</span><span class=3D"token punctuation">)</span=
>
        mask <span class=3D"token operator">=3D</span> torch<span class=3D"=
token punctuation">.</span>tensor<span class=3D"token punctuation">(</span>=
mask<span class=3D"token punctuation">,</span> dtype<span class=3D"token op=
erator">=3D</span>torch<span class=3D"token punctuation">.</span><span clas=
s=3D"token builtin">float</span><span class=3D"token punctuation">)</span>
       =20
        <span class=3D"token keyword">return</span> image<span class=3D"tok=
en punctuation">,</span> mask

<span class=3D"token comment"># Define transformations</span>
<span class=3D"token keyword">import</span> albumentations <span class=3D"t=
oken keyword">as</span> A
transform <span class=3D"token operator">=3D</span> A<span class=3D"token p=
unctuation">.</span>Compose<span class=3D"token punctuation">(</span><span =
class=3D"token punctuation">[</span>
    A<span class=3D"token punctuation">.</span>Resize<span class=3D"token p=
unctuation">(</span><span class=3D"token number">256</span><span class=3D"t=
oken punctuation">,</span> <span class=3D"token number">256</span><span cla=
ss=3D"token punctuation">)</span><span class=3D"token punctuation">,</span>
    A<span class=3D"token punctuation">.</span>HorizontalFlip<span class=3D=
"token punctuation">(</span>p<span class=3D"token operator">=3D</span><span=
 class=3D"token number">0.5</span><span class=3D"token punctuation">)</span=
><span class=3D"token punctuation">,</span>
    A<span class=3D"token punctuation">.</span>VerticalFlip<span class=3D"t=
oken punctuation">(</span>p<span class=3D"token operator">=3D</span><span c=
lass=3D"token number">0.5</span><span class=3D"token punctuation">)</span><=
span class=3D"token punctuation">,</span>
<span class=3D"token punctuation">]</span><span class=3D"token punctuation"=
>)</span>

<span class=3D"token comment"># Hyperparameters</span>
LEARNING_RATE <span class=3D"token operator">=3D</span> <span class=3D"toke=
n number">1e-4</span>
DEVICE <span class=3D"token operator">=3D</span> <span class=3D"token strin=
g">"cuda"</span> <span class=3D"token keyword">if</span> torch<span class=
=3D"token punctuation">.</span>cuda<span class=3D"token punctuation">.</spa=
n>is_available<span class=3D"token punctuation">(</span><span class=3D"toke=
n punctuation">)</span> <span class=3D"token keyword">else</span> <span cla=
ss=3D"token string">"cpu"</span>
BATCH_SIZE <span class=3D"token operator">=3D</span> <span class=3D"token n=
umber">16</span>
NUM_EPOCHS <span class=3D"token operator">=3D</span> <span class=3D"token n=
umber">10</span>
NUM_WORKERS <span class=3D"token operator">=3D</span> <span class=3D"token =
number">2</span>
IMAGE_HEIGHT <span class=3D"token operator">=3D</span> <span class=3D"token=
 number">256</span>
IMAGE_WIDTH <span class=3D"token operator">=3D</span> <span class=3D"token =
number">256</span>

<span class=3D"token comment"># Main block</span>
<span class=3D"token keyword">if</span> __name__ <span class=3D"token opera=
tor">=3D=3D</span> <span class=3D"token string">'__main__'</span><span clas=
s=3D"token punctuation">:</span>
    <span class=3D"token comment"># Initialize dataset and dataloader</span=
>
    train_dataset <span class=3D"token operator">=3D</span> CustomDataset<s=
pan class=3D"token punctuation">(</span>image_dir<span class=3D"token opera=
tor">=3D</span><span class=3D"token string">"my_dataset/images"</span><span=
 class=3D"token punctuation">,</span> mask_dir<span class=3D"token operator=
">=3D</span><span class=3D"token string">"my_dataset/masks"</span><span cla=
ss=3D"token punctuation">,</span> transform<span class=3D"token operator">=
=3D</span>transform<span class=3D"token punctuation">)</span>
    train_loader <span class=3D"token operator">=3D</span> DataLoader<span =
class=3D"token punctuation">(</span>train_dataset<span class=3D"token punct=
uation">,</span> batch_size<span class=3D"token operator">=3D</span>BATCH_S=
IZE<span class=3D"token punctuation">,</span> shuffle<span class=3D"token o=
perator">=3D</span><span class=3D"token boolean">True</span><span class=3D"=
token punctuation">,</span> num_workers<span class=3D"token operator">=3D</=
span>NUM_WORKERS<span class=3D"token punctuation">)</span>

    <span class=3D"token comment"># Initialize model, loss function, and op=
timizer</span>
    model <span class=3D"token operator">=3D</span> UNet<span class=3D"toke=
n punctuation">(</span><span class=3D"token punctuation">)</span><span clas=
s=3D"token punctuation">.</span>to<span class=3D"token punctuation">(</span=
>DEVICE<span class=3D"token punctuation">)</span>
    loss_fn <span class=3D"token operator">=3D</span> nn<span class=3D"toke=
n punctuation">.</span>BCELoss<span class=3D"token punctuation">(</span><sp=
an class=3D"token punctuation">)</span>
    optimizer <span class=3D"token operator">=3D</span> optim<span class=3D=
"token punctuation">.</span>Adam<span class=3D"token punctuation">(</span>m=
odel<span class=3D"token punctuation">.</span>parameters<span class=3D"toke=
n punctuation">(</span><span class=3D"token punctuation">)</span><span clas=
s=3D"token punctuation">,</span> lr<span class=3D"token operator">=3D</span=
>LEARNING_RATE<span class=3D"token punctuation">)</span>

    <span class=3D"token comment"># Training loop</span>
    <span class=3D"token keyword">for</span> epoch <span class=3D"token key=
word">in</span> <span class=3D"token builtin">range</span><span class=3D"to=
ken punctuation">(</span>NUM_EPOCHS<span class=3D"token punctuation">)</spa=
n><span class=3D"token punctuation">:</span>
        model<span class=3D"token punctuation">.</span>train<span class=3D"=
token punctuation">(</span><span class=3D"token punctuation">)</span>
        <span class=3D"token keyword">for</span> batch_idx<span class=3D"to=
ken punctuation">,</span> <span class=3D"token punctuation">(</span>data<sp=
an class=3D"token punctuation">,</span> targets<span class=3D"token punctua=
tion">)</span> <span class=3D"token keyword">in</span> <span class=3D"token=
 builtin">enumerate</span><span class=3D"token punctuation">(</span>train_l=
oader<span class=3D"token punctuation">)</span><span class=3D"token punctua=
tion">:</span>
            data <span class=3D"token operator">=3D</span> data<span class=
=3D"token punctuation">.</span>to<span class=3D"token punctuation">(</span>=
device<span class=3D"token operator">=3D</span>DEVICE<span class=3D"token p=
unctuation">)</span>
            targets <span class=3D"token operator">=3D</span> targets<span =
class=3D"token punctuation">.</span>to<span class=3D"token punctuation">(</=
span>device<span class=3D"token operator">=3D</span>DEVICE<span class=3D"to=
ken punctuation">)</span>
           =20
            <span class=3D"token comment"># Add an extra dimension to the t=
arget mask</span>
            targets <span class=3D"token operator">=3D</span> targets<span =
class=3D"token punctuation">.</span>unsqueeze<span class=3D"token punctuati=
on">(</span><span class=3D"token number">1</span><span class=3D"token punct=
uation">)</span>  <span class=3D"token comment"># Shape: [batch_size, 1, he=
ight, width]</span>
           =20
            <span class=3D"token comment"># Forward pass</span>
            predictions <span class=3D"token operator">=3D</span> model<spa=
n class=3D"token punctuation">(</span>data<span class=3D"token punctuation"=
>)</span>
            loss <span class=3D"token operator">=3D</span> loss_fn<span cla=
ss=3D"token punctuation">(</span>predictions<span class=3D"token punctuatio=
n">,</span> targets<span class=3D"token punctuation">)</span>
           =20
            <span class=3D"token comment"># Backward pass</span>
            optimizer<span class=3D"token punctuation">.</span>zero_grad<sp=
an class=3D"token punctuation">(</span><span class=3D"token punctuation">)<=
/span>
            loss<span class=3D"token punctuation">.</span>backward<span cla=
ss=3D"token punctuation">(</span><span class=3D"token punctuation">)</span>
            optimizer<span class=3D"token punctuation">.</span>step<span cl=
ass=3D"token punctuation">(</span><span class=3D"token punctuation">)</span=
>
           =20
            <span class=3D"token keyword">if</span> batch_idx <span class=
=3D"token operator">%</span> <span class=3D"token number">10</span> <span c=
lass=3D"token operator">=3D=3D</span> <span class=3D"token number">0</span>=
<span class=3D"token punctuation">:</span>
                <span class=3D"token keyword">print</span><span class=3D"to=
ken punctuation">(</span><span class=3D"token string-interpolation"><span c=
lass=3D"token string">f"Epoch [</span><span class=3D"token interpolation"><=
span class=3D"token punctuation">{</span>epoch<span class=3D"token punctuat=
ion">}</span></span><span class=3D"token string">/</span><span class=3D"tok=
en interpolation"><span class=3D"token punctuation">{</span>NUM_EPOCHS<span=
 class=3D"token punctuation">}</span></span><span class=3D"token string">] =
Batch </span><span class=3D"token interpolation"><span class=3D"token punct=
uation">{</span>batch_idx<span class=3D"token punctuation">}</span></span><=
span class=3D"token string">/</span><span class=3D"token interpolation"><sp=
an class=3D"token punctuation">{</span><span class=3D"token builtin">len</s=
pan><span class=3D"token punctuation">(</span>train_loader<span class=3D"to=
ken punctuation">)</span><span class=3D"token punctuation">}</span></span><=
span class=3D"token string"> Loss: </span><span class=3D"token interpolatio=
n"><span class=3D"token punctuation">{</span>loss<span class=3D"token punct=
uation">.</span>item<span class=3D"token punctuation">(</span><span class=
=3D"token punctuation">)</span><span class=3D"token punctuation">:</span><s=
pan class=3D"token format-spec">.4f</span><span class=3D"token punctuation"=
>}</span></span><span class=3D"token string">"</span></span><span class=3D"=
token punctuation">)</span>
       =20
        <span class=3D"token comment"># Save model checkpoint</span>
        torch<span class=3D"token punctuation">.</span>save<span class=3D"t=
oken punctuation">(</span>model<span class=3D"token punctuation">.</span>st=
ate_dict<span class=3D"token punctuation">(</span><span class=3D"token punc=
tuation">)</span><span class=3D"token punctuation">,</span> <span class=3D"=
token string-interpolation"><span class=3D"token string">f"unet_epoch_</spa=
n><span class=3D"token interpolation"><span class=3D"token punctuation">{</=
span>epoch<span class=3D"token punctuation">}</span></span><span class=3D"t=
oken string">.pth"</span></span><span class=3D"token punctuation">)</span>

    <span class=3D"token keyword">print</span><span class=3D"token punctuat=
ion">(</span><span class=3D"token string">"Training complete!"</span><span =
class=3D"token punctuation">)</span></pre></div><h3>Key Changes:</h3><ol st=
art=3D"1"><li><p>Added <code>targets =3D targets.unsqueeze(1)</code> to ens=
ure the target mask has the same shape as the model output.</p></li><li><p>=
This ensures compatibility with <code>nn.BCELoss</code>.</p></li></ol><p>Le=
t me know if you encounter any other issues!</p></div><div class=3D"ds-flex=
" style=3D"margin-top: 12px; height: 20px; align-items: center; gap: 12px;"=
><div class=3D"ds-flex abe97156" style=3D"align-items: center; gap: 12px;">=
<div class=3D"ds-icon-button" tabindex=3D"0" style=3D"--ds-icon-button-text=
-color: #909090; --ds-icon-button-size: 20px;"><div class=3D"ds-icon" style=
=3D"font-size: 20px; width: 20px; height: 20px;"><svg viewBox=3D"0 0 20 20"=
 fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" xmlns:xlink=3D"http://w=
ww.w3.org/1999/xlink"><defs><clipPath id=3D"clip1248_20193"><rect id=3D"=E9=
=8D=A5=E6=83=A7=E7=9C=B0_1" width=3D"17.052675" height=3D"17.052441" transf=
orm=3D"translate(1.000000 1.000000)" fill=3D"white" fill-opacity=3D"0"></re=
ct></clipPath><clipPath id=3D"clip1257_20794"><rect id=3D"=E5=A4=8D=E5=88=
=B6" width=3D"20.000000" height=3D"20.000000" fill=3D"white" fill-opacity=
=3D"0"></rect></clipPath></defs><g clip-path=3D"url(#clip1257_20794)"><g cl=
ip-path=3D"url(#clip1248_20193)"><path id=3D"path" d=3D"M5.03 14.64C4.77 14=
.64 4.5 14.62 4.24 14.56C3.98 14.51 3.73 14.43 3.49 14.33C3.24 14.23 3.01 1=
4.1 2.79 13.96C2.57 13.81 2.37 13.64 2.18 13.45C1.99 13.26 1.82 13.05 1.68 =
12.83C1.53 12.61 1.4 12.37 1.3 12.13C1.2 11.88 1.13 11.63 1.07 11.36C1.02 1=
1.1 1 10.84 1 10.57L1 5.07C1 4.8 1.02 4.54 1.07 4.27C1.13 4.01 1.2 3.76 1.3=
 3.51C1.4 3.26 1.53 3.03 1.68 2.81C1.82 2.58 1.99 2.38 2.18 2.19C2.37 2 2.5=
7 1.83 2.79 1.68C3.01 1.53 3.24 1.41 3.49 1.31C3.73 1.2 3.98 1.13 4.24 1.07=
C4.5 1.02 4.77 1 5.03 1L10.49 1C10.75 1 11.01 1.02 11.27 1.07C11.53 1.13 11=
.78 1.2 12.03 1.31C12.27 1.41 12.51 1.53 12.73 1.68C12.95 1.83 13.15 2 13.3=
4 2.19C13.53 2.38 13.69 2.58 13.84 2.81C13.99 3.03 14.11 3.26 14.21 3.51C14=
.31 3.76 14.39 4.01 14.44 4.27C14.5 4.54 14.52 4.8 14.52 5.07L12.94 5.07C12=
.94 4.91 12.92 4.75 12.89 4.58C12.86 4.43 12.81 4.27 12.75 4.12C12.69 3.97 =
12.61 3.83 12.52 3.69C12.43 3.56 12.33 3.43 12.22 3.32C12.1 3.2 11.98 3.1 1=
1.85 3.01C11.71 2.92 11.57 2.84 11.42 2.78C11.27 2.72 11.12 2.67 10.96 2.64=
C10.81 2.61 10.65 2.59 10.49 2.59L5.03 2.59C4.87 2.59 4.71 2.61 4.55 2.64C4=
.4 2.67 4.24 2.72 4.09 2.78C3.95 2.84 3.8 2.92 3.67 3.01C3.54 3.1 3.41 3.2 =
3.3 3.32C3.18 3.43 3.08 3.56 2.99 3.69C2.9 3.83 2.83 3.97 2.77 4.12C2.71 4.=
27 2.66 4.43 2.63 4.58C2.6 4.75 2.58 4.91 2.58 5.07L2.58 10.57C2.58 10.73 2=
.6 10.89 2.63 11.05C2.66 11.21 2.71 11.37 2.77 11.52C2.83 11.67 2.9 11.81 2=
.99 11.94C3.08 12.08 3.18 12.2 3.3 12.32C3.41 12.43 3.54 12.54 3.67 12.63C3=
.8 12.72 3.95 12.79 4.09 12.86C4.24 12.92 4.4 12.96 4.55 13C4.71 13.03 4.87=
 13.04 5.03 13.04L5.03 14.64Z" fill=3D"currentColor" fill-opacity=3D"1.0000=
00" fill-rule=3D"evenodd"></path></g><path id=3D"path" d=3D"M14.75 18.91L9.=
3 18.91C9.03 18.91 8.77 18.88 8.51 18.83C8.25 18.78 8 18.7 7.75 18.6C7.51 1=
8.49 7.27 18.37 7.05 18.22C6.83 18.07 6.63 17.9 6.44 17.71C6.25 17.52 6.09 =
17.32 5.94 17.1C5.79 16.87 5.67 16.64 5.57 16.39C5.47 16.14 5.39 15.89 5.34=
 15.63C5.28 15.37 5.26 15.1 5.26 14.83L5.26 9.33C5.26 9.06 5.28 8.8 5.34 8.=
54C5.39 8.28 5.47 8.02 5.57 7.77C5.67 7.53 5.79 7.29 5.94 7.07C6.09 6.85 6.=
25 6.64 6.44 6.45C6.63 6.26 6.83 6.09 7.05 5.95C7.27 5.8 7.51 5.67 7.75 5.5=
7C8 5.47 8.25 5.39 8.51 5.34C8.77 5.29 9.03 5.26 9.3 5.26L14.75 5.26C15.01 =
5.26 15.28 5.29 15.54 5.34C15.8 5.39 16.05 5.47 16.29 5.57C16.54 5.67 16.77=
 5.8 16.99 5.95C17.21 6.09 17.41 6.26 17.6 6.45C17.79 6.64 17.96 6.85 18.1 =
7.07C18.25 7.29 18.37 7.53 18.48 7.77C18.58 8.02 18.65 8.28 18.71 8.54C18.7=
6 8.8 18.78 9.06 18.78 9.33L18.78 14.83C18.78 15.1 18.76 15.37 18.71 15.63C=
18.65 15.89 18.58 16.14 18.48 16.39C18.37 16.64 18.25 16.87 18.1 17.1C17.96=
 17.32 17.79 17.52 17.6 17.71C17.41 17.9 17.21 18.07 16.99 18.22C16.77 18.3=
7 16.54 18.49 16.29 18.6C16.05 18.7 15.8 18.78 15.54 18.83C15.28 18.88 15.0=
1 18.91 14.75 18.91ZM9.3 6.86C9.13 6.86 8.97 6.87 8.82 6.91C8.66 6.94 8.51 =
6.98 8.36 7.05C8.21 7.11 8.07 7.18 7.93 7.28C7.8 7.37 7.68 7.47 7.56 7.58C7=
.45 7.7 7.35 7.82 7.26 7.96C7.17 8.09 7.09 8.24 7.03 8.38C6.97 8.54 6.92 8.=
69 6.89 8.85C6.86 9.01 6.84 9.17 6.84 9.33L6.84 14.83C6.84 15 6.86 15.16 6.=
89 15.32C6.92 15.48 6.97 15.63 7.03 15.78C7.09 15.93 7.17 16.07 7.26 16.21C=
7.35 16.34 7.45 16.47 7.56 16.58C7.68 16.7 7.8 16.8 7.93 16.89C8.07 16.98 8=
.21 17.06 8.36 17.12C8.51 17.18 8.66 17.23 8.82 17.26C8.97 17.29 9.13 17.31=
 9.3 17.31L14.75 17.31C14.91 17.31 15.07 17.29 15.23 17.26C15.38 17.23 15.5=
4 17.18 15.69 17.12C15.83 17.06 15.98 16.98 16.11 16.89C16.24 16.8 16.37 16=
.7 16.48 16.58C16.59 16.47 16.7 16.34 16.79 16.21C16.87 16.07 16.95 15.93 1=
7.01 15.78C17.07 15.63 17.12 15.48 17.15 15.32C17.18 15.16 17.2 15 17.2 14.=
83L17.2 9.33C17.2 9.17 17.18 9.01 17.15 8.85C17.12 8.69 17.07 8.54 17.01 8.=
38C16.95 8.24 16.87 8.09 16.79 7.96C16.7 7.82 16.59 7.7 16.48 7.58C16.37 7.=
47 16.24 7.37 16.11 7.28C15.98 7.19 15.83 7.11 15.69 7.05C15.54 6.98 15.38 =
6.94 15.23 6.91C15.07 6.87 14.91 6.86 14.75 6.86L9.3 6.86Z" fill=3D"current=
Color" fill-opacity=3D"1.000000" fill-rule=3D"nonzero"></path></g></svg></d=
iv></div><div class=3D"ds-icon-button" tabindex=3D"0" style=3D"--ds-icon-bu=
tton-text-color: #909090; --ds-icon-button-size: 20px;"><div class=3D"ds-ic=
on" style=3D"font-size: 20px; width: 20px; height: 20px;"><svg viewBox=3D"0=
 0 20 20" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" xmlns:xlink=3D=
"http://www.w3.org/1999/xlink"><defs><clipPath id=3D"clip1258_20811"><rect =
id=3D"=E9=87=8D=E6=96=B0=E7=94=9F=E6=88=90" width=3D"20.000000" height=3D"2=
0.000000" fill=3D"white" fill-opacity=3D"0"></rect></clipPath></defs><rect =
id=3D"=E9=87=8D=E6=96=B0=E7=94=9F=E6=88=90" width=3D"20.000000" height=3D"2=
0.000000" fill=3D"#FFFFFF" fill-opacity=3D"0"></rect><g clip-path=3D"url(#c=
lip1258_20811)"><path id=3D"path" d=3D"M17.01 7.63L13.98 7.62C13.88 7.62 13=
.79 7.6 13.7 7.56C13.62 7.52 13.54 7.47 13.47 7.4C13.4 7.33 13.35 7.25 13.3=
2 7.16C13.28 7.07 13.26 6.98 13.26 6.88C13.26 6.79 13.28 6.69 13.32 6.6C13.=
35 6.51 13.4 6.43 13.47 6.36C13.54 6.3 13.62 6.24 13.7 6.21C13.79 6.17 13.8=
8 6.15 13.98 6.15L15.57 6.16C15.67 6.16 15.76 6.14 15.85 6.1C15.94 6.06 16.=
01 6.01 16.08 5.94C16.15 5.87 16.2 5.79 16.23 5.7C16.27 5.61 16.29 5.52 16.=
29 5.42L16.3 3.89C16.3 3.79 16.32 3.7 16.36 3.61C16.39 3.52 16.44 3.44 16.5=
1 3.37C16.58 3.3 16.66 3.25 16.74 3.21C16.83 3.17 16.92 3.16 17.02 3.16C17.=
11 3.16 17.2 3.17 17.29 3.21C17.38 3.25 17.46 3.3 17.52 3.37C17.59 3.44 17.=
64 3.52 17.68 3.61C17.71 3.7 17.73 3.79 17.73 3.89L17.72 6.9C17.72 7 17.71 =
7.09 17.67 7.18C17.63 7.27 17.58 7.34 17.52 7.41C17.45 7.48 17.37 7.53 17.2=
9 7.57C17.2 7.61 17.11 7.63 17.01 7.63Z" fill=3D"currentColor" fill-opacity=
=3D"1.000000" fill-rule=3D"nonzero"></path><path id=3D"path" d=3D"M2.31 16.=
29L2.32 13.3C2.32 13.21 2.34 13.11 2.37 13.02C2.41 12.93 2.46 12.85 2.53 12=
.78C2.6 12.71 2.67 12.66 2.76 12.62C2.85 12.58 2.94 12.56 3.03 12.56L6.07 1=
2.57C6.16 12.57 6.25 12.59 6.34 12.63C6.43 12.67 6.51 12.72 6.57 12.79C6.64=
 12.86 6.69 12.94 6.73 13.03C6.76 13.12 6.78 13.22 6.78 13.32C6.78 13.41 6.=
76 13.51 6.73 13.6C6.69 13.69 6.64 13.77 6.57 13.84C6.51 13.91 6.43 13.96 6=
.34 14C6.25 14.04 6.16 14.06 6.07 14.06L4.47 14.05C4.38 14.05 4.29 14.07 4.=
2 14.11C4.11 14.15 4.03 14.2 3.97 14.27C3.9 14.34 3.85 14.42 3.81 14.51C3.7=
8 14.6 3.76 14.7 3.76 14.8L3.75 16.29C3.75 16.39 3.73 16.48 3.69 16.58C3.65=
 16.67 3.6 16.75 3.54 16.82C3.47 16.89 3.39 16.94 3.3 16.98C3.22 17.01 3.13=
 17.03 3.03 17.03C2.94 17.03 2.85 17.02 2.76 16.98C2.67 16.94 2.59 16.89 2.=
52 16.82C2.46 16.75 2.4 16.67 2.37 16.58C2.33 16.49 2.31 16.39 2.31 16.29Z"=
 fill=3D"currentColor" fill-opacity=3D"1.000000" fill-rule=3D"nonzero"></pa=
th><path id=3D"path" d=3D"M9.88 18.01C9.51 18.01 9.15 17.99 8.79 17.94C8.42=
 17.89 8.07 17.82 7.71 17.73C7.36 17.63 7.02 17.51 6.68 17.37C6.34 17.23 6.=
02 17.07 5.7 16.89C5.39 16.7 5.09 16.5 4.8 16.28C4.52 16.05 4.25 15.81 3.99=
 15.55C3.74 15.29 3.5 15.02 3.29 14.73C3.07 14.44 2.88 14.13 2.7 13.82L4.15=
 13.05C4.32 13.35 4.51 13.64 4.72 13.91C4.93 14.18 5.17 14.43 5.42 14.66C5.=
67 14.9 5.94 15.11 6.23 15.3C6.52 15.49 6.83 15.66 7.14 15.81C7.46 15.95 7.=
78 16.07 8.12 16.16C8.45 16.25 8.8 16.32 9.14 16.36C9.49 16.39 9.83 16.4 10=
.18 16.39C10.53 16.37 10.87 16.33 11.22 16.26C11.56 16.19 11.89 16.09 12.21=
 15.97C12.54 15.84 12.85 15.7 13.15 15.53C13.45 15.35 13.74 15.16 14.01 14.=
94C14.28 14.72 14.53 14.49 14.76 14.23C14.99 13.97 15.2 13.7 15.38 13.41C15=
.57 13.12 15.73 12.82 15.87 12.5C16 12.19 16.11 11.87 16.2 11.53C16.28 11.2=
 16.34 10.87 16.36 10.52C16.37 10.42 16.4 10.33 16.44 10.24C16.48 10.15 16.=
54 10.07 16.61 10C16.69 9.93 16.77 9.87 16.86 9.84C16.96 9.8 17.05 9.77 17.=
16 9.77C17.27 9.77 17.38 9.79 17.49 9.83C17.6 9.87 17.7 9.94 17.78 10.02C17=
.86 10.1 17.92 10.2 17.96 10.3C18 10.41 18.01 10.52 18 10.64C17.98 10.89 17=
.95 11.13 17.91 11.38C17.86 11.62 17.81 11.87 17.74 12.11C17.68 12.35 17.6 =
12.58 17.51 12.82C17.42 13.05 17.32 13.28 17.21 13.5C17.1 13.73 16.98 13.95=
 16.85 14.16C16.71 14.37 16.57 14.58 16.42 14.78C16.27 14.98 16.11 15.17 15=
.94 15.36C15.77 15.54 15.59 15.72 15.41 15.89C15.22 16.06 15.03 16.22 14.83=
 16.37C14.63 16.52 14.42 16.66 14.2 16.79C13.99 16.93 13.77 17.05 13.54 17.=
16C13.31 17.27 13.08 17.37 12.85 17.46C12.61 17.55 12.37 17.63 12.13 17.7C1=
1.88 17.77 11.64 17.83 11.39 17.87C11.14 17.92 10.89 17.96 10.63 17.98C10.3=
8 18 10.13 18.01 9.88 18.01Z" fill=3D"currentColor" fill-opacity=3D"1.00000=
0" fill-rule=3D"nonzero"></path><path id=3D"path" d=3D"M2.85 10.27C2.73 10.=
28 2.62 10.26 2.51 10.22C2.4 10.17 2.31 10.11 2.23 10.03C2.14 9.95 2.08 9.8=
5 2.04 9.74C2 9.63 1.99 9.52 2 9.41C2.03 8.98 2.1 8.56 2.2 8.15C2.3 7.73 2.=
43 7.33 2.6 6.94C2.76 6.54 2.96 6.16 3.19 5.8C3.41 5.44 3.67 5.1 3.95 4.77C=
4.24 4.45 4.54 4.15 4.88 3.88C5.21 3.6 5.56 3.35 5.93 3.13C6.3 2.91 6.69 2.=
73 7.09 2.57C7.5 2.41 7.91 2.28 8.33 2.19C8.75 2.09 9.18 2.03 9.62 2.01C10.=
05 1.98 10.48 1.99 10.91 2.03C11.35 2.07 11.77 2.14 12.19 2.25C12.61 2.36 1=
3.02 2.5 13.42 2.67C13.81 2.84 14.19 3.04 14.56 3.28C14.92 3.51 15.27 3.77 =
15.59 4.05C15.91 4.34 16.21 4.64 16.48 4.98C16.75 5.31 17 5.66 17.21 6.03L1=
5.78 6.83C15.61 6.54 15.42 6.25 15.2 5.99C14.98 5.73 14.74 5.48 14.49 5.25C=
14.23 5.02 13.96 4.82 13.66 4.63C13.37 4.45 13.07 4.29 12.75 4.15C12.44 4.0=
1 12.11 3.9 11.77 3.82C11.44 3.73 11.1 3.67 10.76 3.64C10.41 3.61 10.07 3.6=
 9.72 3.62C9.37 3.64 9.03 3.69 8.69 3.77C8.36 3.84 8.03 3.94 7.71 4.07C7.38=
 4.2 7.08 4.35 6.78 4.52C6.48 4.7 6.2 4.89 5.94 5.11C5.67 5.33 5.43 5.57 5.=
2 5.83C4.97 6.08 4.77 6.36 4.59 6.65C4.41 6.94 4.25 7.24 4.12 7.55C3.98 7.8=
7 3.88 8.19 3.8 8.52C3.72 8.85 3.66 9.19 3.64 9.53C3.63 9.62 3.6 9.72 3.56 =
9.81C3.52 9.9 3.46 9.98 3.39 10.05C3.32 10.12 3.23 10.17 3.14 10.21C3.05 10=
.25 2.95 10.27 2.85 10.27Z" fill=3D"currentColor" fill-opacity=3D"1.000000"=
 fill-rule=3D"nonzero"></path></g></svg></div></div><div class=3D"ds-icon-b=
utton" tabindex=3D"0" style=3D"--ds-icon-button-text-color: #909090; --ds-i=
con-button-size: 20px;"><div class=3D"ds-icon" style=3D"font-size: 18px; wi=
dth: 18px; height: 18px;"><svg width=3D"18" height=3D"18" viewBox=3D"0 0 18=
 18" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"><path d=3D"M2.5 18c=
-.663 0-1.298-.294-1.767-.815A2.944 2.944 0 0 1 0 15.222V8.777c0-.737.263-1=
.443.732-1.964C1.202 6.293 1.837 6 2.5 6s1.299.293 1.768.813A2.94 2.94 0 0 =
1 5 8.777v6.445c0 .737-.264 1.443-.733 1.963-.469.521-1.104.814-1.767.815zm=
0-10.308a.934.934 0 0 0-.693.319c-.183.204-.287.48-.287.77v6.445c0 .288.103=
.565.287.77.184.204.433.319.693.32.26-.001.51-.116.693-.32.183-.205.287-.48=
2.287-.77V8.78c0-.143-.025-.285-.074-.417a1.105 1.105 0 0 0-.212-.354.981.9=
81 0 0 0-.318-.237.897.897 0 0 0-.376-.084v.004z" fill=3D"currentColor"></p=
ath><path d=3D"M10.352 18H7.564a3.539 3.539 0 0 1-2.519-1.062A3.658 3.658 0=
 0 1 4 14.378V8.281c0-.884.177-1.76.523-2.572l1.911-4.502c.142-.334.371-.62=
2.662-.834A1.949 1.949 0 0 1 9.122.21c.32.163.59.411.782.719l.171.271c.194.=
312.298.673.298 1.041v1.755c0 .341.134.669.371.91.238.242.56.378.896.378h2.=
691a3.64 3.64 0 0 1 2.594 1.092A3.76 3.76 0 0 1 18 9.014a7.267 7.267 0 0 1-=
1.288 4.147l-1.602 2.325a5.84 5.84 0 0 1-2.076 1.848 5.735 5.735 0 0 1-2.68=
2.666zM8.245 1.648h-.03a.331.331 0 0 0-.293.212L6.012 6.36a4.882 4.882 0 0 =
0-.39 1.92v6.095c0 .524.205 1.026.569 1.396.364.37.858.579 1.373.58h2.788c.=
672-.001 1.335-.166 1.931-.481a4.208 4.208 0 0 0 1.495-1.332l1.603-2.324a5.=
616 5.616 0 0 0 .994-3.201 2.1 2.1 0 0 0-.6-1.472 2.031 2.031 0 0 0-1.448-.=
61h-2.691c-.766-.001-1.5-.31-2.042-.861a2.964 2.964 0 0 1-.847-2.075V2.241a=
.297.297 0 0 0-.046-.16l-.17-.272a.334.334 0 0 0-.286-.16z" fill=3D"current=
Color"></path></svg></div></div><div class=3D"ds-icon-button" tabindex=3D"0=
" style=3D"--ds-icon-button-text-color: #909090; --ds-icon-button-size: 20p=
x;"><div class=3D"ds-icon" style=3D"font-size: 20px; width: 20px; height: 2=
0px;"><svg viewBox=3D"0 0 20 20" fill=3D"none" xmlns=3D"http://www.w3.org/2=
000/svg" xmlns:xlink=3D"http://www.w3.org/1999/xlink"><defs><clipPath id=3D=
"clip1348_20218"><rect id=3D"=E7=82=B9=E8=B8=A90718" width=3D"20.000000" he=
ight=3D"20.000000" fill=3D"white" fill-opacity=3D"0"></rect></clipPath></de=
fs><rect id=3D"=E7=82=B9=E8=B8=A90718" width=3D"20.000000" height=3D"20.000=
000" fill=3D"#FFFFFF" fill-opacity=3D"0"></rect><g clip-path=3D"url(#clip13=
48_20218)"><path id=3D"path" d=3D"M3.71 13.17C3.53 13.17 3.36 13.16 3.18 13=
.12C3.01 13.09 2.84 13.04 2.67 12.97C2.51 12.9 2.35 12.82 2.2 12.72C2.05 12=
.62 1.92 12.51 1.79 12.38C1.66 12.25 1.55 12.12 1.45 11.97C1.35 11.82 1.27 =
11.67 1.2 11.5C1.13 11.34 1.08 11.17 1.05 11C1.01 10.82 1 10.65 1 10.47L1 4=
.19C1 4.02 1.02 3.84 1.06 3.67C1.09 3.5 1.15 3.33 1.22 3.17C1.29 3.01 1.37 =
2.86 1.47 2.71C1.57 2.57 1.68 2.43 1.81 2.31C1.93 2.19 2.07 2.08 2.22 1.98C=
2.36 1.88 2.52 1.8 2.68 1.74C2.84 1.67 3.01 1.62 3.19 1.59C3.36 1.55 3.53 1=
.54 3.71 1.54C3.89 1.54 4.06 1.55 4.23 1.59C4.41 1.62 4.57 1.67 4.74 1.74C4=
.9 1.8 5.06 1.88 5.2 1.98C5.35 2.08 5.49 2.19 5.61 2.31C5.74 2.43 5.85 2.57=
 5.95 2.71C6.05 2.86 6.13 3.01 6.2 3.17C6.27 3.33 6.33 3.5 6.36 3.67C6.4 3.=
84 6.42 4.02 6.42 4.19L6.42 10.47C6.42 10.65 6.41 10.82 6.37 11C6.34 11.17 =
6.28 11.34 6.22 11.5C6.15 11.67 6.06 11.82 5.97 11.97C5.87 12.12 5.75 12.25=
 5.63 12.38C5.5 12.51 5.36 12.62 5.22 12.72C5.07 12.82 4.91 12.9 4.75 12.97=
C4.58 13.04 4.41 13.09 4.24 13.12C4.06 13.16 3.89 13.17 3.71 13.17ZM3.71 3.=
14C3.57 3.14 3.43 3.16 3.3 3.22C3.17 3.27 3.06 3.35 2.96 3.45C2.86 3.54 2.7=
8 3.66 2.73 3.79C2.67 3.92 2.65 4.05 2.64 4.2L2.64 10.47C2.64 10.62 2.66 10=
.75 2.72 10.89C2.77 11.02 2.85 11.14 2.95 11.24C3.05 11.34 3.16 11.42 3.29 =
11.48C3.43 11.54 3.57 11.56 3.71 11.56C3.85 11.56 3.99 11.54 4.12 11.48C4.2=
6 11.42 4.37 11.34 4.47 11.24C4.57 11.14 4.65 11.02 4.7 10.89C4.75 10.75 4.=
78 10.62 4.77 10.47L4.77 4.2C4.77 4.05 4.75 3.92 4.69 3.79C4.64 3.66 4.56 3=
.54 4.46 3.44C4.36 3.34 4.25 3.27 4.12 3.21C3.99 3.16 3.85 3.14 3.71 3.14Z"=
 fill=3D"currentColor" fill-opacity=3D"1.000000" fill-rule=3D"nonzero"></pa=
th><path id=3D"path" d=3D"M9.09 18.95C9.04 18.95 8.99 18.95 8.93 18.95C8.75=
 18.93 8.57 18.89 8.4 18.83C8.23 18.77 8.07 18.69 7.92 18.58C7.78 18.48 7.6=
4 18.35 7.53 18.21C7.42 18.07 7.32 17.92 7.25 17.75L5.31 13.26C4.95 12.44 4=
.77 11.58 4.77 10.69L4.77 4.61C4.77 4.37 4.8 4.14 4.84 3.9C4.89 3.67 4.96 3=
.45 5.05 3.23C5.14 3.01 5.25 2.8 5.39 2.6C5.52 2.4 5.67 2.22 5.84 2.05C6.01=
 1.89 6.19 1.74 6.39 1.61C6.58 1.47 6.79 1.36 7.01 1.27C7.23 1.18 7.46 1.11=
 7.69 1.07C7.93 1.02 8.16 1 8.4 1L11.24 1C11.71 1 12.18 1.05 12.64 1.16C13.=
1 1.28 13.54 1.44 13.97 1.66C14.39 1.88 14.78 2.14 15.13 2.46C15.49 2.77 15=
.8 3.12 16.08 3.5L17.71 5.82C18.13 6.43 18.46 7.08 18.68 7.79C18.91 8.5 19.=
02 9.22 19.02 9.96C19.02 10.21 18.99 10.45 18.95 10.69C18.9 10.93 18.83 11.=
16 18.73 11.38C18.64 11.61 18.53 11.82 18.39 12.03C18.25 12.23 18.1 12.42 1=
7.92 12.59C17.75 12.76 17.56 12.92 17.36 13.05C17.15 13.19 16.94 13.3 16.71=
 13.4C16.49 13.49 16.25 13.56 16.01 13.61C15.77 13.66 15.53 13.68 15.28 13.=
68L12.54 13.68C12.37 13.68 12.21 13.71 12.05 13.78C11.89 13.84 11.75 13.94 =
11.63 14.06C11.51 14.18 11.42 14.32 11.35 14.48C11.29 14.63 11.26 14.8 11.2=
6 14.97L11.26 16.71C11.25 17.09 11.15 17.43 10.95 17.75L10.78 18.02C10.6 18=
.31 10.36 18.54 10.06 18.7C9.76 18.87 9.43 18.95 9.09 18.95ZM8.4 2.64C8.27 =
2.64 8.14 2.65 8.01 2.68C7.88 2.7 7.76 2.74 7.64 2.79C7.52 2.84 7.41 2.9 7.=
3 2.97C7.19 3.04 7.09 3.12 7 3.21C6.91 3.31 6.83 3.41 6.75 3.51C6.68 3.62 6=
.62 3.73 6.57 3.85C6.52 3.97 6.48 4.1 6.46 4.22C6.43 4.35 6.42 4.48 6.42 4.=
61L6.42 10.69C6.42 11.35 6.55 11.99 6.82 12.6L8.76 17.1C8.82 17.23 8.92 17.=
3 9.06 17.31C9.2 17.32 9.31 17.26 9.39 17.14L9.56 16.87C9.59 16.83 9.61 16.=
77 9.61 16.71L9.61 14.96C9.61 14.77 9.63 14.58 9.66 14.39C9.7 14.2 9.76 14.=
02 9.83 13.84C9.9 13.66 10 13.5 10.1 13.34C10.21 13.18 10.33 13.03 10.47 12=
.89C10.6 12.76 10.75 12.63 10.91 12.53C11.07 12.42 11.24 12.33 11.42 12.26C=
11.6 12.18 11.78 12.13 11.97 12.09C12.16 12.05 12.35 12.03 12.55 12.03L15.2=
8 12.03C15.42 12.03 15.56 12.02 15.69 11.99C15.82 11.97 15.96 11.93 16.08 1=
1.87C16.21 11.82 16.33 11.76 16.44 11.68C16.56 11.61 16.66 11.52 16.76 11.4=
2C16.85 11.33 16.94 11.22 17.02 11.11C17.09 11 17.16 10.88 17.21 10.75C17.2=
6 10.62 17.3 10.5 17.33 10.36C17.35 10.23 17.37 10.09 17.37 9.96C17.37 9.38=
 17.28 8.83 17.11 8.28C16.94 7.74 16.69 7.23 16.36 6.76L14.73 4.44C14.53 4.=
16 14.3 3.91 14.04 3.69C13.79 3.46 13.51 3.27 13.2 3.11C12.9 2.96 12.58 2.8=
4 12.25 2.76C11.92 2.68 11.58 2.63 11.24 2.63L8.4 2.64Z" fill=3D"currentCol=
or" fill-opacity=3D"1.000000" fill-rule=3D"nonzero"></path></g></svg></div>=
</div></div><div style=3D"flex: 1 1 0%;"></div></div></div><div class=3D"fa=
81"><div class=3D"fbb737a4">Pls fix below problem.
Traceback (most recent call last):
  File "c:\Users\RYZEN\UNet-PyTorch\train.py", line 146, in &lt;module&gt;
    loss =3D loss_fn(predictions, targets)
  File "C:\Users\RYZEN\.conda\envs\unet\lib\site-packages\torch\nn\modules\=
module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\RYZEN\.conda\envs\unet\lib\site-packages\torch\nn\modules\=
module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\RYZEN\.conda\envs\unet\lib\site-packages\torch\nn\modules\=
loss.py", line 699, in forward
    return F.binary_cross_entropy(
  File "C:\Users\RYZEN\.conda\envs\unet\lib\site-packages\torch\nn\function=
al.py", line 3569, in binary_cross_entropy
    return torch._C._nn.binary_cross_entropy(input, target, weight, reducti=
on_enum)
RuntimeError: all elements of target should be between 0 and 1<div class=3D=
"ds-flex e0558cb1" style=3D"position: absolute; right: calc(100% + 18px); t=
op: 12px; gap: 12px;"><div class=3D"ds-icon-button" tabindex=3D"0" style=3D=
"--ds-icon-button-text-color: #909090; --ds-icon-button-size: 20px;"><div c=
lass=3D"ds-icon" style=3D"font-size: 20px; width: 20px; height: 20px;"><svg=
 viewBox=3D"0 0 20 20" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" x=
mlns:xlink=3D"http://www.w3.org/1999/xlink"><defs><clipPath id=3D"clip1248_=
20193"><rect id=3D"=E9=8D=A5=E6=83=A7=E7=9C=B0_1" width=3D"17.052675" heigh=
t=3D"17.052441" transform=3D"translate(1.000000 1.000000)" fill=3D"white" f=
ill-opacity=3D"0"></rect></clipPath><clipPath id=3D"clip1257_20794"><rect i=
d=3D"=E5=A4=8D=E5=88=B6" width=3D"20.000000" height=3D"20.000000" fill=3D"w=
hite" fill-opacity=3D"0"></rect></clipPath></defs><g clip-path=3D"url(#clip=
1257_20794)"><g clip-path=3D"url(#clip1248_20193)"><path id=3D"path" d=3D"M=
5.03 14.64C4.77 14.64 4.5 14.62 4.24 14.56C3.98 14.51 3.73 14.43 3.49 14.33=
C3.24 14.23 3.01 14.1 2.79 13.96C2.57 13.81 2.37 13.64 2.18 13.45C1.99 13.2=
6 1.82 13.05 1.68 12.83C1.53 12.61 1.4 12.37 1.3 12.13C1.2 11.88 1.13 11.63=
 1.07 11.36C1.02 11.1 1 10.84 1 10.57L1 5.07C1 4.8 1.02 4.54 1.07 4.27C1.13=
 4.01 1.2 3.76 1.3 3.51C1.4 3.26 1.53 3.03 1.68 2.81C1.82 2.58 1.99 2.38 2.=
18 2.19C2.37 2 2.57 1.83 2.79 1.68C3.01 1.53 3.24 1.41 3.49 1.31C3.73 1.2 3=
.98 1.13 4.24 1.07C4.5 1.02 4.77 1 5.03 1L10.49 1C10.75 1 11.01 1.02 11.27 =
1.07C11.53 1.13 11.78 1.2 12.03 1.31C12.27 1.41 12.51 1.53 12.73 1.68C12.95=
 1.83 13.15 2 13.34 2.19C13.53 2.38 13.69 2.58 13.84 2.81C13.99 3.03 14.11 =
3.26 14.21 3.51C14.31 3.76 14.39 4.01 14.44 4.27C14.5 4.54 14.52 4.8 14.52 =
5.07L12.94 5.07C12.94 4.91 12.92 4.75 12.89 4.58C12.86 4.43 12.81 4.27 12.7=
5 4.12C12.69 3.97 12.61 3.83 12.52 3.69C12.43 3.56 12.33 3.43 12.22 3.32C12=
.1 3.2 11.98 3.1 11.85 3.01C11.71 2.92 11.57 2.84 11.42 2.78C11.27 2.72 11.=
12 2.67 10.96 2.64C10.81 2.61 10.65 2.59 10.49 2.59L5.03 2.59C4.87 2.59 4.7=
1 2.61 4.55 2.64C4.4 2.67 4.24 2.72 4.09 2.78C3.95 2.84 3.8 2.92 3.67 3.01C=
3.54 3.1 3.41 3.2 3.3 3.32C3.18 3.43 3.08 3.56 2.99 3.69C2.9 3.83 2.83 3.97=
 2.77 4.12C2.71 4.27 2.66 4.43 2.63 4.58C2.6 4.75 2.58 4.91 2.58 5.07L2.58 =
10.57C2.58 10.73 2.6 10.89 2.63 11.05C2.66 11.21 2.71 11.37 2.77 11.52C2.83=
 11.67 2.9 11.81 2.99 11.94C3.08 12.08 3.18 12.2 3.3 12.32C3.41 12.43 3.54 =
12.54 3.67 12.63C3.8 12.72 3.95 12.79 4.09 12.86C4.24 12.92 4.4 12.96 4.55 =
13C4.71 13.03 4.87 13.04 5.03 13.04L5.03 14.64Z" fill=3D"currentColor" fill=
-opacity=3D"1.000000" fill-rule=3D"evenodd"></path></g><path id=3D"path" d=
=3D"M14.75 18.91L9.3 18.91C9.03 18.91 8.77 18.88 8.51 18.83C8.25 18.78 8 18=
.7 7.75 18.6C7.51 18.49 7.27 18.37 7.05 18.22C6.83 18.07 6.63 17.9 6.44 17.=
71C6.25 17.52 6.09 17.32 5.94 17.1C5.79 16.87 5.67 16.64 5.57 16.39C5.47 16=
.14 5.39 15.89 5.34 15.63C5.28 15.37 5.26 15.1 5.26 14.83L5.26 9.33C5.26 9.=
06 5.28 8.8 5.34 8.54C5.39 8.28 5.47 8.02 5.57 7.77C5.67 7.53 5.79 7.29 5.9=
4 7.07C6.09 6.85 6.25 6.64 6.44 6.45C6.63 6.26 6.83 6.09 7.05 5.95C7.27 5.8=
 7.51 5.67 7.75 5.57C8 5.47 8.25 5.39 8.51 5.34C8.77 5.29 9.03 5.26 9.3 5.2=
6L14.75 5.26C15.01 5.26 15.28 5.29 15.54 5.34C15.8 5.39 16.05 5.47 16.29 5.=
57C16.54 5.67 16.77 5.8 16.99 5.95C17.21 6.09 17.41 6.26 17.6 6.45C17.79 6.=
64 17.96 6.85 18.1 7.07C18.25 7.29 18.37 7.53 18.48 7.77C18.58 8.02 18.65 8=
.28 18.71 8.54C18.76 8.8 18.78 9.06 18.78 9.33L18.78 14.83C18.78 15.1 18.76=
 15.37 18.71 15.63C18.65 15.89 18.58 16.14 18.48 16.39C18.37 16.64 18.25 16=
.87 18.1 17.1C17.96 17.32 17.79 17.52 17.6 17.71C17.41 17.9 17.21 18.07 16.=
99 18.22C16.77 18.37 16.54 18.49 16.29 18.6C16.05 18.7 15.8 18.78 15.54 18.=
83C15.28 18.88 15.01 18.91 14.75 18.91ZM9.3 6.86C9.13 6.86 8.97 6.87 8.82 6=
.91C8.66 6.94 8.51 6.98 8.36 7.05C8.21 7.11 8.07 7.18 7.93 7.28C7.8 7.37 7.=
68 7.47 7.56 7.58C7.45 7.7 7.35 7.82 7.26 7.96C7.17 8.09 7.09 8.24 7.03 8.3=
8C6.97 8.54 6.92 8.69 6.89 8.85C6.86 9.01 6.84 9.17 6.84 9.33L6.84 14.83C6.=
84 15 6.86 15.16 6.89 15.32C6.92 15.48 6.97 15.63 7.03 15.78C7.09 15.93 7.1=
7 16.07 7.26 16.21C7.35 16.34 7.45 16.47 7.56 16.58C7.68 16.7 7.8 16.8 7.93=
 16.89C8.07 16.98 8.21 17.06 8.36 17.12C8.51 17.18 8.66 17.23 8.82 17.26C8.=
97 17.29 9.13 17.31 9.3 17.31L14.75 17.31C14.91 17.31 15.07 17.29 15.23 17.=
26C15.38 17.23 15.54 17.18 15.69 17.12C15.83 17.06 15.98 16.98 16.11 16.89C=
16.24 16.8 16.37 16.7 16.48 16.58C16.59 16.47 16.7 16.34 16.79 16.21C16.87 =
16.07 16.95 15.93 17.01 15.78C17.07 15.63 17.12 15.48 17.15 15.32C17.18 15.=
16 17.2 15 17.2 14.83L17.2 9.33C17.2 9.17 17.18 9.01 17.15 8.85C17.12 8.69 =
17.07 8.54 17.01 8.38C16.95 8.24 16.87 8.09 16.79 7.96C16.7 7.82 16.59 7.7 =
16.48 7.58C16.37 7.47 16.24 7.37 16.11 7.28C15.98 7.19 15.83 7.11 15.69 7.0=
5C15.54 6.98 15.38 6.94 15.23 6.91C15.07 6.87 14.91 6.86 14.75 6.86L9.3 6.8=
6Z" fill=3D"currentColor" fill-opacity=3D"1.000000" fill-rule=3D"nonzero"><=
/path></g></svg></div></div><div class=3D"ds-icon-button" tabindex=3D"0" st=
yle=3D"--ds-icon-button-text-color: #909090; --ds-icon-button-size: 20px;">=
<div class=3D"ds-icon" style=3D"font-size: 20px; width: 20px; height: 20px;=
"><svg width=3D"20" height=3D"20" viewBox=3D"0 0 20 20" fill=3D"none" xmlns=
=3D"http://www.w3.org/2000/svg"><path d=3D"M18.2286 17.3545H1.77142C1.34538=
 17.3545 1 17.6999 1 18.1259C1 18.552 1.34538 18.8973 1.77142 18.8973H18.22=
86C18.6546 18.8973 19 18.552 19 18.1259C19 17.6999 18.6546 17.3545 18.2286 =
17.3545Z" fill=3D"currentColor"></path><mask id=3D"mask0_400_418" maskUnits=
=3D"userSpaceOnUse" x=3D"1" y=3D"1" width=3D"15" height=3D"15"><path d=3D"M=
15.1429 1.10254H1V15.2454H15.1429V1.10254Z" fill=3D"white"></path></mask><g=
 mask=3D"url(#mask0_400_418)"><path d=3D"M2.48999 15.2425C2.36999 15.2425 2=
.26002 15.2225 2.15002 15.2025C2.04002 15.1725 1.94003 15.1325 1.84003 15.0=
825C1.73003 15.0325 1.63999 14.9825 1.54999 14.9025C1.45999 14.8325 1.39001=
 14.7525 1.32001 14.6625C1.25001 14.5825 1.19001 14.4825 1.14001 14.3825C1.=
09001 14.2825 1.05003 14.1725 1.03003 14.0625C1.01003 13.9525 1 13.8425 1 1=
3.7225C1 13.6125 1.00998 13.5025 1.03998 13.3925L1.75 10.4325C1.9 9.81254 2=
.20001 9.28253 2.64001 8.83253L9.40002 2.08253C9.55002 1.92253 9.71997 1.78=
254 9.90997 1.66254C10.09 1.54254 10.28 1.44254 10.49 1.35254C10.69 1.27254=
 10.9 1.20254 11.12 1.16254C11.33 1.12254 11.55 1.10254 11.77 1.10254C12 1.=
10254 12.21 1.12254 12.43 1.16254C12.65 1.20254 12.86 1.27254 13.06 1.35254=
C13.27 1.44254 13.46 1.54254 13.64 1.66254C13.83 1.78254 14 1.92253 14.15 2=
.08253C14.31 2.24253 14.45 2.41254 14.57 2.59254C14.69 2.77254 14.79 2.9725=
5 14.88 3.17255C14.96 3.37255 15.03 3.59254 15.07 3.80254C15.11 4.02254 15.=
13 4.24254 15.13 4.46254C15.13 4.68254 15.11 4.90253 15.07 5.11253C15.03 5.=
33253 14.96 5.54254 14.88 5.74254C14.79 5.95254 14.69 6.14254 14.57 6.32254=
C14.45 6.51254 14.31 6.68253 14.15 6.83253L7.40002 13.5925C6.95002 14.0425 =
6.42 14.3325 5.81 14.4825L2.84003 15.1925C2.73003 15.2225 2.60999 15.2425 2=
.48999 15.2425ZM11.67 2.73254C11.22 2.76254 10.84 2.94254 10.52 3.26254L3.7=
8998 9.99254C3.55998 10.2225 3.41002 10.4925 3.33002 10.8125L2.66998 13.562=
5L5.42999 12.9025C5.73999 12.8225 6.02 12.6725 6.25 12.4425L13 5.68254C13.0=
8 5.60254 13.15 5.52255 13.22 5.42255C13.28 5.33255 13.33 5.23254 13.38 5.1=
2254C13.42 5.02254 13.45 4.91254 13.47 4.80254C13.5 4.68254 13.51 4.57254 1=
3.51 4.46254C13.51 4.34254 13.5 4.23254 13.47 4.12254C13.45 4.01254 13.42 3=
.90254 13.38 3.79254C13.33 3.69254 13.28 3.59254 13.22 3.49254C13.15 3.4025=
4 13.08 3.31254 13 3.23254C12.82 3.06254 12.62 2.92254 12.39 2.84254C12.16 =
2.75254 11.91 2.71254 11.67 2.73254Z" fill=3D"currentColor"></path></g></sv=
g></div></div></div></div></div><div class=3D"f9bf7997 d7dc56a8 c05b5566"><=
div class=3D"eb23581b dfa60d66"><svg viewBox=3D"0 0 30 30" fill=3D"none" xm=
lns=3D"http://www.w3.org/2000/svg" xmlns:xlink=3D"http://www.w3.org/1999/xl=
ink"><path id=3D"path" d=3D"M27.501 8.46875C27.249 8.3457 27.1406 8.58008 2=
6.9932 8.69922C26.9434 8.73828 26.9004 8.78906 26.8584 8.83398C26.4902 9.22=
852 26.0605 9.48633 25.5 9.45508C24.6787 9.41016 23.9785 9.66797 23.3594 10=
.2969C23.2275 9.52148 22.79 9.05859 22.125 8.76172C21.7764 8.60742 21.4238 =
8.45312 21.1807 8.11719C21.0098 7.87891 20.9639 7.61328 20.8779 7.35156C20.=
8242 7.19336 20.7695 7.03125 20.5879 7.00391C20.3906 6.97266 20.3135 7.1386=
7 20.2363 7.27734C19.9258 7.84375 19.8066 8.46875 19.8174 9.10156C19.8447 1=
0.5234 20.4453 11.6562 21.6367 12.4629C21.7725 12.5547 21.8076 12.6484 21.7=
646 12.7832C21.6836 13.0605 21.5869 13.3301 21.501 13.6074C21.4473 13.7852 =
21.3662 13.8242 21.1768 13.7461C20.5225 13.4727 19.957 13.0684 19.458 12.57=
81C18.6104 11.7578 17.8438 10.8516 16.8877 10.1426C16.6631 9.97656 16.4395 =
9.82227 16.207 9.67578C15.2314 8.72656 16.335 7.94727 16.5898 7.85547C16.85=
74 7.75977 16.6826 7.42773 15.8193 7.43164C14.957 7.43555 14.167 7.72461 13=
.1611 8.10938C13.0137 8.16797 12.8594 8.21094 12.7002 8.24414C11.7871 8.072=
27 10.8389 8.0332 9.84766 8.14453C7.98242 8.35352 6.49219 9.23633 5.39648 1=
0.7441C4.08105 12.5547 3.77148 14.6133 4.15039 16.7617C4.54883 19.0234 5.70=
215 20.8984 7.47559 22.3633C9.31348 23.8809 11.4307 24.625 13.8457 24.4824C=
15.3125 24.3984 16.9463 24.2012 18.7881 22.6406C19.2529 22.8711 19.7402 22.=
9629 20.5498 23.0332C21.1729 23.0918 21.7725 23.002 22.2373 22.9062C22.9648=
 22.752 22.9141 22.0781 22.6514 21.9531C20.5186 20.959 20.9863 21.3633 20.5=
605 21.0371C21.6445 19.752 23.2783 18.418 23.917 14.0977C23.9668 13.7539 23=
.9238 13.5391 23.917 13.2598C23.9131 13.0918 23.9512 13.0254 24.1445 13.005=
9C24.6787 12.9453 25.1973 12.7988 25.6738 12.5352C27.0557 11.7793 27.6123 1=
0.5391 27.7441 9.05078C27.7637 8.82422 27.7402 8.58789 27.501 8.46875ZM15.4=
6 21.8613C13.3926 20.2344 12.3906 19.6992 11.9766 19.7227C11.5898 19.7441 1=
1.6592 20.1875 11.7441 20.4766C11.833 20.7617 11.9492 20.959 12.1123 21.209=
C12.2246 21.375 12.3018 21.623 12 21.8066C11.334 22.2207 10.1768 21.668 10.=
1221 21.6406C8.77539 20.8477 7.64941 19.7988 6.85547 18.3652C6.08984 16.984=
4 5.64453 15.5039 5.57129 13.9238C5.55176 13.541 5.66406 13.4062 6.04297 13=
.3379C6.54199 13.2461 7.05762 13.2266 7.55664 13.2988C9.66602 13.6074 11.46=
19 14.5527 12.9668 16.0469C13.8262 16.9004 14.4766 17.918 15.1465 18.9121C1=
5.8584 19.9688 16.625 20.9746 17.6006 21.7988C17.9443 22.0879 18.2197 22.30=
86 18.4824 22.4707C17.6895 22.5586 16.3652 22.5781 15.46 21.8613ZM16.4502 1=
5.4805C16.4502 15.3105 16.5859 15.1758 16.7568 15.1758C16.7949 15.1758 16.8=
301 15.1836 16.8613 15.1953C16.9033 15.2109 16.9424 15.2344 16.9727 15.2695=
C17.0273 15.3223 17.0586 15.4004 17.0586 15.4805C17.0586 15.6504 16.9229 15=
.7852 16.7529 15.7852C16.582 15.7852 16.4502 15.6504 16.4502 15.4805ZM19.52=
73 17.0625C19.3301 17.1426 19.1328 17.2129 18.9434 17.2207C18.6494 17.2344 =
18.3281 17.1152 18.1533 16.9688C17.8828 16.7422 17.6895 16.6152 17.6074 16.=
2168C17.5732 16.0469 17.5928 15.7852 17.623 15.6348C17.6934 15.3105 17.6152=
 15.1035 17.3877 14.9141C17.2012 14.7598 16.9658 14.7188 16.7061 14.7188C16=
.6094 14.7188 16.5205 14.6758 16.4541 14.6406C16.3457 14.5859 16.2568 14.45=
12 16.3418 14.2852C16.3691 14.2324 16.501 14.1016 16.5322 14.0781C16.8838 1=
3.877 17.29 13.9434 17.666 14.0938C18.0146 14.2363 18.2773 14.498 18.6562 1=
4.8672C19.0439 15.3145 19.1133 15.4395 19.334 15.7734C19.5078 16.0371 19.66=
7 16.3066 19.7754 16.6152C19.8408 16.8066 19.7559 16.9648 19.5273 17.0625Z"=
 fill-rule=3D"nonzero" fill=3D"#4D6BFE"></path></svg></div><div class=3D"ds=
-markdown ds-markdown--block" style=3D"--ds-md-zoom: 1.143;"><p>The error o=
ccurs because the target mask contains values outside the range <code>[0, 1=
]</code>, but <code>nn.BCELoss</code> (Binary Cross-Entropy Loss) expects t=
he target values to be strictly between 0 and 1. This is likely happening b=
ecause your mask data is not properly normalized.</p><h3>Fix: Normalize the=
 Target Mask</h3><p>You need to ensure that the target mask values are norm=
alized to the range <code>[0, 1]</code>. If your mask images are grayscale =
with values <code>0</code> and <code>255</code>, you should divide them by =
<code>255</code> to normalize them.</p><p>Here=E2=80=99s how to fix the iss=
ue:</p><h4>Updated <code>CustomDataset</code> Class:</h4><div class=3D"md-c=
ode-block"><div class=3D"md-code-block-banner-wrap"><div class=3D"md-code-b=
lock-banner"><div class=3D"md-code-block-infostring">python</div><div class=
=3D"md-code-block-action"><div class=3D"ds-markdown-code-copy-button">Copy<=
/div></div></div></div><pre><span class=3D"token keyword">class</span> <spa=
n class=3D"token class-name">CustomDataset</span><span class=3D"token punct=
uation">(</span>Dataset<span class=3D"token punctuation">)</span><span clas=
s=3D"token punctuation">:</span>
    <span class=3D"token keyword">def</span> <span class=3D"token function"=
>__init__</span><span class=3D"token punctuation">(</span>self<span class=
=3D"token punctuation">,</span> image_dir<span class=3D"token punctuation">=
,</span> mask_dir<span class=3D"token punctuation">,</span> transform<span =
class=3D"token operator">=3D</span><span class=3D"token boolean">None</span=
><span class=3D"token punctuation">)</span><span class=3D"token punctuation=
">:</span>
        self<span class=3D"token punctuation">.</span>image_dir <span class=
=3D"token operator">=3D</span> image_dir
        self<span class=3D"token punctuation">.</span>mask_dir <span class=
=3D"token operator">=3D</span> mask_dir
        self<span class=3D"token punctuation">.</span>transform <span class=
=3D"token operator">=3D</span> transform
        self<span class=3D"token punctuation">.</span>images <span class=3D=
"token operator">=3D</span> os<span class=3D"token punctuation">.</span>lis=
tdir<span class=3D"token punctuation">(</span>image_dir<span class=3D"token=
 punctuation">)</span>
   =20
    <span class=3D"token keyword">def</span> <span class=3D"token function"=
>__len__</span><span class=3D"token punctuation">(</span>self<span class=3D=
"token punctuation">)</span><span class=3D"token punctuation">:</span>
        <span class=3D"token keyword">return</span> <span class=3D"token bu=
iltin">len</span><span class=3D"token punctuation">(</span>self<span class=
=3D"token punctuation">.</span>images<span class=3D"token punctuation">)</s=
pan>
   =20
    <span class=3D"token keyword">def</span> <span class=3D"token function"=
>__getitem__</span><span class=3D"token punctuation">(</span>self<span clas=
s=3D"token punctuation">,</span> idx<span class=3D"token punctuation">)</sp=
an><span class=3D"token punctuation">:</span>
        img_path <span class=3D"token operator">=3D</span> os<span class=3D=
"token punctuation">.</span>path<span class=3D"token punctuation">.</span>j=
oin<span class=3D"token punctuation">(</span>self<span class=3D"token punct=
uation">.</span>image_dir<span class=3D"token punctuation">,</span> self<sp=
an class=3D"token punctuation">.</span>images<span class=3D"token punctuati=
on">[</span>idx<span class=3D"token punctuation">]</span><span class=3D"tok=
en punctuation">)</span>
        mask_path <span class=3D"token operator">=3D</span> os<span class=
=3D"token punctuation">.</span>path<span class=3D"token punctuation">.</spa=
n>join<span class=3D"token punctuation">(</span>self<span class=3D"token pu=
nctuation">.</span>mask_dir<span class=3D"token punctuation">,</span> self<=
span class=3D"token punctuation">.</span>images<span class=3D"token punctua=
tion">[</span>idx<span class=3D"token punctuation">]</span><span class=3D"t=
oken punctuation">)</span>
        image <span class=3D"token operator">=3D</span> np<span class=3D"to=
ken punctuation">.</span>array<span class=3D"token punctuation">(</span>Ima=
ge<span class=3D"token punctuation">.</span><span class=3D"token builtin">o=
pen</span><span class=3D"token punctuation">(</span>img_path<span class=3D"=
token punctuation">)</span><span class=3D"token punctuation">.</span>conver=
t<span class=3D"token punctuation">(</span><span class=3D"token string">"RG=
B"</span><span class=3D"token punctuation">)</span><span class=3D"token pun=
ctuation">)</span>
        mask <span class=3D"token operator">=3D</span> np<span class=3D"tok=
en punctuation">.</span>array<span class=3D"token punctuation">(</span>Imag=
e<span class=3D"token punctuation">.</span><span class=3D"token builtin">op=
en</span><span class=3D"token punctuation">(</span>mask_path<span class=3D"=
token punctuation">)</span><span class=3D"token punctuation">.</span>conver=
t<span class=3D"token punctuation">(</span><span class=3D"token string">"L"=
</span><span class=3D"token punctuation">)</span><span class=3D"token punct=
uation">,</span> dtype<span class=3D"token operator">=3D</span>np<span clas=
s=3D"token punctuation">.</span>float32<span class=3D"token punctuation">)<=
/span>
       =20
        <span class=3D"token comment"># Normalize the mask to [0, 1]</span>
        mask <span class=3D"token operator">=3D</span> mask <span class=3D"=
token operator">/</span> <span class=3D"token number">255.0</span>  <span c=
lass=3D"token comment"># Ensure mask values are between 0 and 1</span>
       =20
        <span class=3D"token keyword">if</span> self<span class=3D"token pu=
nctuation">.</span>transform<span class=3D"token punctuation">:</span>
            augmentations <span class=3D"token operator">=3D</span> self<sp=
an class=3D"token punctuation">.</span>transform<span class=3D"token punctu=
ation">(</span>image<span class=3D"token operator">=3D</span>image<span cla=
ss=3D"token punctuation">,</span> mask<span class=3D"token operator">=3D</s=
pan>mask<span class=3D"token punctuation">)</span>
            image <span class=3D"token operator">=3D</span> augmentations<s=
pan class=3D"token punctuation">[</span><span class=3D"token string">"image=
"</span><span class=3D"token punctuation">]</span>
            mask <span class=3D"token operator">=3D</span> augmentations<sp=
an class=3D"token punctuation">[</span><span class=3D"token string">"mask"<=
/span><span class=3D"token punctuation">]</span>
       =20
        image <span class=3D"token operator">=3D</span> image<span class=3D=
"token punctuation">.</span>transpose<span class=3D"token punctuation">(</s=
pan><span class=3D"token punctuation">(</span><span class=3D"token number">=
2</span><span class=3D"token punctuation">,</span> <span class=3D"token num=
ber">0</span><span class=3D"token punctuation">,</span> <span class=3D"toke=
n number">1</span><span class=3D"token punctuation">)</span><span class=3D"=
token punctuation">)</span>  <span class=3D"token comment"># HWC to CHW</sp=
an>
        image <span class=3D"token operator">=3D</span> torch<span class=3D=
"token punctuation">.</span>tensor<span class=3D"token punctuation">(</span=
>image<span class=3D"token punctuation">,</span> dtype<span class=3D"token =
operator">=3D</span>torch<span class=3D"token punctuation">.</span><span cl=
ass=3D"token builtin">float</span><span class=3D"token punctuation">)</span=
>
        mask <span class=3D"token operator">=3D</span> torch<span class=3D"=
token punctuation">.</span>tensor<span class=3D"token punctuation">(</span>=
mask<span class=3D"token punctuation">,</span> dtype<span class=3D"token op=
erator">=3D</span>torch<span class=3D"token punctuation">.</span><span clas=
s=3D"token builtin">float</span><span class=3D"token punctuation">)</span>
       =20
        <span class=3D"token keyword">return</span> image<span class=3D"tok=
en punctuation">,</span> mask</pre></div><h3>Explanation of the Fix:</h3><o=
l start=3D"1"><li><p><strong>Normalization</strong>:</p><ul><li><p>The mask=
 values are divided by <code>255.0</code> to ensure they are in the range <=
code>[0, 1]</code>.</p></li><li><p>This is necessary because <code>nn.BCELo=
ss</code> expects the target values to be probabilities (i.e., between 0 an=
d 1).</p></li></ul></li><li><p><strong>Why This Happens</strong>:</p><ul><l=
i><p>If your mask images are saved as grayscale images with pixel values <c=
ode>0</code> (background) and <code>255</code> (foreground), they need to b=
e normalized to <code>[0, 1]</code> before being used as targets.</p></li><=
/ul></li></ol><h3>Updated Full Code:</h3><div class=3D"md-code-block"><div =
class=3D"md-code-block-banner-wrap"><div class=3D"md-code-block-banner"><di=
v class=3D"md-code-block-infostring">python</div><div class=3D"md-code-bloc=
k-action"><div class=3D"ds-markdown-code-copy-button">Copy</div></div></div=
></div><pre><span class=3D"token keyword">import</span> os
<span class=3D"token keyword">import</span> torch
<span class=3D"token keyword">import</span> torch<span class=3D"token punct=
uation">.</span>nn <span class=3D"token keyword">as</span> nn
<span class=3D"token keyword">import</span> torch<span class=3D"token punct=
uation">.</span>optim <span class=3D"token keyword">as</span> optim
<span class=3D"token keyword">from</span> torch<span class=3D"token punctua=
tion">.</span>utils<span class=3D"token punctuation">.</span>data <span cla=
ss=3D"token keyword">import</span> DataLoader<span class=3D"token punctuati=
on">,</span> Dataset
<span class=3D"token keyword">from</span> torchvision <span class=3D"token =
keyword">import</span> transforms
<span class=3D"token keyword">from</span> PIL <span class=3D"token keyword"=
>import</span> Image
<span class=3D"token keyword">import</span> numpy <span class=3D"token keyw=
ord">as</span> np
<span class=3D"token keyword">import</span> matplotlib<span class=3D"token =
punctuation">.</span>pyplot <span class=3D"token keyword">as</span> plt

<span class=3D"token comment"># Define the U-Net model</span>
<span class=3D"token keyword">class</span> <span class=3D"token class-name"=
>UNet</span><span class=3D"token punctuation">(</span>nn<span class=3D"toke=
n punctuation">.</span>Module<span class=3D"token punctuation">)</span><spa=
n class=3D"token punctuation">:</span>
    <span class=3D"token keyword">def</span> <span class=3D"token function"=
>__init__</span><span class=3D"token punctuation">(</span>self<span class=
=3D"token punctuation">,</span> in_channels<span class=3D"token operator">=
=3D</span><span class=3D"token number">3</span><span class=3D"token punctua=
tion">,</span> out_channels<span class=3D"token operator">=3D</span><span c=
lass=3D"token number">1</span><span class=3D"token punctuation">,</span> in=
it_features<span class=3D"token operator">=3D</span><span class=3D"token nu=
mber">32</span><span class=3D"token punctuation">)</span><span class=3D"tok=
en punctuation">:</span>
        <span class=3D"token builtin">super</span><span class=3D"token punc=
tuation">(</span>UNet<span class=3D"token punctuation">,</span> self<span c=
lass=3D"token punctuation">)</span><span class=3D"token punctuation">.</spa=
n>__init__<span class=3D"token punctuation">(</span><span class=3D"token pu=
nctuation">)</span>
       =20
        features <span class=3D"token operator">=3D</span> init_features
        self<span class=3D"token punctuation">.</span>encoder1 <span class=
=3D"token operator">=3D</span> UNet<span class=3D"token punctuation">.</spa=
n>_block<span class=3D"token punctuation">(</span>in_channels<span class=3D=
"token punctuation">,</span> features<span class=3D"token punctuation">,</s=
pan> name<span class=3D"token operator">=3D</span><span class=3D"token stri=
ng">"enc1"</span><span class=3D"token punctuation">)</span>
        self<span class=3D"token punctuation">.</span>pool1 <span class=3D"=
token operator">=3D</span> nn<span class=3D"token punctuation">.</span>MaxP=
ool2d<span class=3D"token punctuation">(</span>kernel_size<span class=3D"to=
ken operator">=3D</span><span class=3D"token number">2</span><span class=3D=
"token punctuation">,</span> stride<span class=3D"token operator">=3D</span=
><span class=3D"token number">2</span><span class=3D"token punctuation">)</=
span>
        self<span class=3D"token punctuation">.</span>encoder2 <span class=
=3D"token operator">=3D</span> UNet<span class=3D"token punctuation">.</spa=
n>_block<span class=3D"token punctuation">(</span>features<span class=3D"to=
ken punctuation">,</span> features <span class=3D"token operator">*</span> =
<span class=3D"token number">2</span><span class=3D"token punctuation">,</s=
pan> name<span class=3D"token operator">=3D</span><span class=3D"token stri=
ng">"enc2"</span><span class=3D"token punctuation">)</span>
        self<span class=3D"token punctuation">.</span>pool2 <span class=3D"=
token operator">=3D</span> nn<span class=3D"token punctuation">.</span>MaxP=
ool2d<span class=3D"token punctuation">(</span>kernel_size<span class=3D"to=
ken operator">=3D</span><span class=3D"token number">2</span><span class=3D=
"token punctuation">,</span> stride<span class=3D"token operator">=3D</span=
><span class=3D"token number">2</span><span class=3D"token punctuation">)</=
span>
        self<span class=3D"token punctuation">.</span>encoder3 <span class=
=3D"token operator">=3D</span> UNet<span class=3D"token punctuation">.</spa=
n>_block<span class=3D"token punctuation">(</span>features <span class=3D"t=
oken operator">*</span> <span class=3D"token number">2</span><span class=3D=
"token punctuation">,</span> features <span class=3D"token operator">*</spa=
n> <span class=3D"token number">4</span><span class=3D"token punctuation">,=
</span> name<span class=3D"token operator">=3D</span><span class=3D"token s=
tring">"enc3"</span><span class=3D"token punctuation">)</span>
        self<span class=3D"token punctuation">.</span>pool3 <span class=3D"=
token operator">=3D</span> nn<span class=3D"token punctuation">.</span>MaxP=
ool2d<span class=3D"token punctuation">(</span>kernel_size<span class=3D"to=
ken operator">=3D</span><span class=3D"token number">2</span><span class=3D=
"token punctuation">,</span> stride<span class=3D"token operator">=3D</span=
><span class=3D"token number">2</span><span class=3D"token punctuation">)</=
span>
        self<span class=3D"token punctuation">.</span>encoder4 <span class=
=3D"token operator">=3D</span> UNet<span class=3D"token punctuation">.</spa=
n>_block<span class=3D"token punctuation">(</span>features <span class=3D"t=
oken operator">*</span> <span class=3D"token number">4</span><span class=3D=
"token punctuation">,</span> features <span class=3D"token operator">*</spa=
n> <span class=3D"token number">8</span><span class=3D"token punctuation">,=
</span> name<span class=3D"token operator">=3D</span><span class=3D"token s=
tring">"enc4"</span><span class=3D"token punctuation">)</span>
        self<span class=3D"token punctuation">.</span>pool4 <span class=3D"=
token operator">=3D</span> nn<span class=3D"token punctuation">.</span>MaxP=
ool2d<span class=3D"token punctuation">(</span>kernel_size<span class=3D"to=
ken operator">=3D</span><span class=3D"token number">2</span><span class=3D=
"token punctuation">,</span> stride<span class=3D"token operator">=3D</span=
><span class=3D"token number">2</span><span class=3D"token punctuation">)</=
span>
       =20
        self<span class=3D"token punctuation">.</span>bottleneck <span clas=
s=3D"token operator">=3D</span> UNet<span class=3D"token punctuation">.</sp=
an>_block<span class=3D"token punctuation">(</span>features <span class=3D"=
token operator">*</span> <span class=3D"token number">8</span><span class=
=3D"token punctuation">,</span> features <span class=3D"token operator">*</=
span> <span class=3D"token number">16</span><span class=3D"token punctuatio=
n">,</span> name<span class=3D"token operator">=3D</span><span class=3D"tok=
en string">"bottleneck"</span><span class=3D"token punctuation">)</span>
       =20
        self<span class=3D"token punctuation">.</span>upconv4 <span class=
=3D"token operator">=3D</span> nn<span class=3D"token punctuation">.</span>=
ConvTranspose2d<span class=3D"token punctuation">(</span>features <span cla=
ss=3D"token operator">*</span> <span class=3D"token number">16</span><span =
class=3D"token punctuation">,</span> features <span class=3D"token operator=
">*</span> <span class=3D"token number">8</span><span class=3D"token punctu=
ation">,</span> kernel_size<span class=3D"token operator">=3D</span><span c=
lass=3D"token number">2</span><span class=3D"token punctuation">,</span> st=
ride<span class=3D"token operator">=3D</span><span class=3D"token number">2=
</span><span class=3D"token punctuation">)</span>
        self<span class=3D"token punctuation">.</span>decoder4 <span class=
=3D"token operator">=3D</span> UNet<span class=3D"token punctuation">.</spa=
n>_block<span class=3D"token punctuation">(</span><span class=3D"token punc=
tuation">(</span>features <span class=3D"token operator">*</span> <span cla=
ss=3D"token number">8</span><span class=3D"token punctuation">)</span> <spa=
n class=3D"token operator">*</span> <span class=3D"token number">2</span><s=
pan class=3D"token punctuation">,</span> features <span class=3D"token oper=
ator">*</span> <span class=3D"token number">8</span><span class=3D"token pu=
nctuation">,</span> name<span class=3D"token operator">=3D</span><span clas=
s=3D"token string">"dec4"</span><span class=3D"token punctuation">)</span>
        self<span class=3D"token punctuation">.</span>upconv3 <span class=
=3D"token operator">=3D</span> nn<span class=3D"token punctuation">.</span>=
ConvTranspose2d<span class=3D"token punctuation">(</span>features <span cla=
ss=3D"token operator">*</span> <span class=3D"token number">8</span><span c=
lass=3D"token punctuation">,</span> features <span class=3D"token operator"=
>*</span> <span class=3D"token number">4</span><span class=3D"token punctua=
tion">,</span> kernel_size<span class=3D"token operator">=3D</span><span cl=
ass=3D"token number">2</span><span class=3D"token punctuation">,</span> str=
ide<span class=3D"token operator">=3D</span><span class=3D"token number">2<=
/span><span class=3D"token punctuation">)</span>
        self<span class=3D"token punctuation">.</span>decoder3 <span class=
=3D"token operator">=3D</span> UNet<span class=3D"token punctuation">.</spa=
n>_block<span class=3D"token punctuation">(</span><span class=3D"token punc=
tuation">(</span>features <span class=3D"token operator">*</span> <span cla=
ss=3D"token number">4</span><span class=3D"token punctuation">)</span> <spa=
n class=3D"token operator">*</span> <span class=3D"token number">2</span><s=
pan class=3D"token punctuation">,</span> features <span class=3D"token oper=
ator">*</span> <span class=3D"token number">4</span><span class=3D"token pu=
nctuation">,</span> name<span class=3D"token operator">=3D</span><span clas=
s=3D"token string">"dec3"</span><span class=3D"token punctuation">)</span>
        self<span class=3D"token punctuation">.</span>upconv2 <span class=
=3D"token operator">=3D</span> nn<span class=3D"token punctuation">.</span>=
ConvTranspose2d<span class=3D"token punctuation">(</span>features <span cla=
ss=3D"token operator">*</span> <span class=3D"token number">4</span><span c=
lass=3D"token punctuation">,</span> features <span class=3D"token operator"=
>*</span> <span class=3D"token number">2</span><span class=3D"token punctua=
tion">,</span> kernel_size<span class=3D"token operator">=3D</span><span cl=
ass=3D"token number">2</span><span class=3D"token punctuation">,</span> str=
ide<span class=3D"token operator">=3D</span><span class=3D"token number">2<=
/span><span class=3D"token punctuation">)</span>
        self<span class=3D"token punctuation">.</span>decoder2 <span class=
=3D"token operator">=3D</span> UNet<span class=3D"token punctuation">.</spa=
n>_block<span class=3D"token punctuation">(</span><span class=3D"token punc=
tuation">(</span>features <span class=3D"token operator">*</span> <span cla=
ss=3D"token number">2</span><span class=3D"token punctuation">)</span> <spa=
n class=3D"token operator">*</span> <span class=3D"token number">2</span><s=
pan class=3D"token punctuation">,</span> features <span class=3D"token oper=
ator">*</span> <span class=3D"token number">2</span><span class=3D"token pu=
nctuation">,</span> name<span class=3D"token operator">=3D</span><span clas=
s=3D"token string">"dec2"</span><span class=3D"token punctuation">)</span>
        self<span class=3D"token punctuation">.</span>upconv1 <span class=
=3D"token operator">=3D</span> nn<span class=3D"token punctuation">.</span>=
ConvTranspose2d<span class=3D"token punctuation">(</span>features <span cla=
ss=3D"token operator">*</span> <span class=3D"token number">2</span><span c=
lass=3D"token punctuation">,</span> features<span class=3D"token punctuatio=
n">,</span> kernel_size<span class=3D"token operator">=3D</span><span class=
=3D"token number">2</span><span class=3D"token punctuation">,</span> stride=
<span class=3D"token operator">=3D</span><span class=3D"token number">2</sp=
an><span class=3D"token punctuation">)</span>
        self<span class=3D"token punctuation">.</span>decoder1 <span class=
=3D"token operator">=3D</span> UNet<span class=3D"token punctuation">.</spa=
n>_block<span class=3D"token punctuation">(</span>features <span class=3D"t=
oken operator">*</span> <span class=3D"token number">2</span><span class=3D=
"token punctuation">,</span> features<span class=3D"token punctuation">,</s=
pan> name<span class=3D"token operator">=3D</span><span class=3D"token stri=
ng">"dec1"</span><span class=3D"token punctuation">)</span>
       =20
        self<span class=3D"token punctuation">.</span>conv <span class=3D"t=
oken operator">=3D</span> nn<span class=3D"token punctuation">.</span>Conv2=
d<span class=3D"token punctuation">(</span>in_channels<span class=3D"token =
operator">=3D</span>features<span class=3D"token punctuation">,</span> out_=
channels<span class=3D"token operator">=3D</span>out_channels<span class=3D=
"token punctuation">,</span> kernel_size<span class=3D"token operator">=3D<=
/span><span class=3D"token number">1</span><span class=3D"token punctuation=
">)</span>
   =20
    <span class=3D"token keyword">def</span> <span class=3D"token function"=
>forward</span><span class=3D"token punctuation">(</span>self<span class=3D=
"token punctuation">,</span> x<span class=3D"token punctuation">)</span><sp=
an class=3D"token punctuation">:</span>
        enc1 <span class=3D"token operator">=3D</span> self<span class=3D"t=
oken punctuation">.</span>encoder1<span class=3D"token punctuation">(</span=
>x<span class=3D"token punctuation">)</span>
        enc2 <span class=3D"token operator">=3D</span> self<span class=3D"t=
oken punctuation">.</span>encoder2<span class=3D"token punctuation">(</span=
>self<span class=3D"token punctuation">.</span>pool1<span class=3D"token pu=
nctuation">(</span>enc1<span class=3D"token punctuation">)</span><span clas=
s=3D"token punctuation">)</span>
        enc3 <span class=3D"token operator">=3D</span> self<span class=3D"t=
oken punctuation">.</span>encoder3<span class=3D"token punctuation">(</span=
>self<span class=3D"token punctuation">.</span>pool2<span class=3D"token pu=
nctuation">(</span>enc2<span class=3D"token punctuation">)</span><span clas=
s=3D"token punctuation">)</span>
        enc4 <span class=3D"token operator">=3D</span> self<span class=3D"t=
oken punctuation">.</span>encoder4<span class=3D"token punctuation">(</span=
>self<span class=3D"token punctuation">.</span>pool3<span class=3D"token pu=
nctuation">(</span>enc3<span class=3D"token punctuation">)</span><span clas=
s=3D"token punctuation">)</span>
       =20
        bottleneck <span class=3D"token operator">=3D</span> self<span clas=
s=3D"token punctuation">.</span>bottleneck<span class=3D"token punctuation"=
>(</span>self<span class=3D"token punctuation">.</span>pool4<span class=3D"=
token punctuation">(</span>enc4<span class=3D"token punctuation">)</span><s=
pan class=3D"token punctuation">)</span>
       =20
        dec4 <span class=3D"token operator">=3D</span> self<span class=3D"t=
oken punctuation">.</span>upconv4<span class=3D"token punctuation">(</span>=
bottleneck<span class=3D"token punctuation">)</span>
        dec4 <span class=3D"token operator">=3D</span> torch<span class=3D"=
token punctuation">.</span>cat<span class=3D"token punctuation">(</span><sp=
an class=3D"token punctuation">(</span>dec4<span class=3D"token punctuation=
">,</span> enc4<span class=3D"token punctuation">)</span><span class=3D"tok=
en punctuation">,</span> dim<span class=3D"token operator">=3D</span><span =
class=3D"token number">1</span><span class=3D"token punctuation">)</span>
        dec4 <span class=3D"token operator">=3D</span> self<span class=3D"t=
oken punctuation">.</span>decoder4<span class=3D"token punctuation">(</span=
>dec4<span class=3D"token punctuation">)</span>
       =20
        dec3 <span class=3D"token operator">=3D</span> self<span class=3D"t=
oken punctuation">.</span>upconv3<span class=3D"token punctuation">(</span>=
dec4<span class=3D"token punctuation">)</span>
        dec3 <span class=3D"token operator">=3D</span> torch<span class=3D"=
token punctuation">.</span>cat<span class=3D"token punctuation">(</span><sp=
an class=3D"token punctuation">(</span>dec3<span class=3D"token punctuation=
">,</span> enc3<span class=3D"token punctuation">)</span><span class=3D"tok=
en punctuation">,</span> dim<span class=3D"token operator">=3D</span><span =
class=3D"token number">1</span><span class=3D"token punctuation">)</span>
        dec3 <span class=3D"token operator">=3D</span> self<span class=3D"t=
oken punctuation">.</span>decoder3<span class=3D"token punctuation">(</span=
>dec3<span class=3D"token punctuation">)</span>
       =20
        dec2 <span class=3D"token operator">=3D</span> self<span class=3D"t=
oken punctuation">.</span>upconv2<span class=3D"token punctuation">(</span>=
dec3<span class=3D"token punctuation">)</span>
        dec2 <span class=3D"token operator">=3D</span> torch<span class=3D"=
token punctuation">.</span>cat<span class=3D"token punctuation">(</span><sp=
an class=3D"token punctuation">(</span>dec2<span class=3D"token punctuation=
">,</span> enc2<span class=3D"token punctuation">)</span><span class=3D"tok=
en punctuation">,</span> dim<span class=3D"token operator">=3D</span><span =
class=3D"token number">1</span><span class=3D"token punctuation">)</span>
        dec2 <span class=3D"token operator">=3D</span> self<span class=3D"t=
oken punctuation">.</span>decoder2<span class=3D"token punctuation">(</span=
>dec2<span class=3D"token punctuation">)</span>
       =20
        dec1 <span class=3D"token operator">=3D</span> self<span class=3D"t=
oken punctuation">.</span>upconv1<span class=3D"token punctuation">(</span>=
dec2<span class=3D"token punctuation">)</span>
        dec1 <span class=3D"token operator">=3D</span> torch<span class=3D"=
token punctuation">.</span>cat<span class=3D"token punctuation">(</span><sp=
an class=3D"token punctuation">(</span>dec1<span class=3D"token punctuation=
">,</span> enc1<span class=3D"token punctuation">)</span><span class=3D"tok=
en punctuation">,</span> dim<span class=3D"token operator">=3D</span><span =
class=3D"token number">1</span><span class=3D"token punctuation">)</span>
        dec1 <span class=3D"token operator">=3D</span> self<span class=3D"t=
oken punctuation">.</span>decoder1<span class=3D"token punctuation">(</span=
>dec1<span class=3D"token punctuation">)</span>
       =20
        <span class=3D"token keyword">return</span> torch<span class=3D"tok=
en punctuation">.</span>sigmoid<span class=3D"token punctuation">(</span>se=
lf<span class=3D"token punctuation">.</span>conv<span class=3D"token punctu=
ation">(</span>dec1<span class=3D"token punctuation">)</span><span class=3D=
"token punctuation">)</span>
   =20
    <span class=3D"token decorator annotation punctuation">@staticmethod</s=
pan>
    <span class=3D"token keyword">def</span> <span class=3D"token function"=
>_block</span><span class=3D"token punctuation">(</span>in_channels<span cl=
ass=3D"token punctuation">,</span> features<span class=3D"token punctuation=
">,</span> name<span class=3D"token punctuation">)</span><span class=3D"tok=
en punctuation">:</span>
        <span class=3D"token keyword">return</span> nn<span class=3D"token =
punctuation">.</span>Sequential<span class=3D"token punctuation">(</span>
            nn<span class=3D"token punctuation">.</span>Conv2d<span class=
=3D"token punctuation">(</span>in_channels<span class=3D"token operator">=
=3D</span>in_channels<span class=3D"token punctuation">,</span> out_channel=
s<span class=3D"token operator">=3D</span>features<span class=3D"token punc=
tuation">,</span> kernel_size<span class=3D"token operator">=3D</span><span=
 class=3D"token number">3</span><span class=3D"token punctuation">,</span> =
padding<span class=3D"token operator">=3D</span><span class=3D"token number=
">1</span><span class=3D"token punctuation">,</span> bias<span class=3D"tok=
en operator">=3D</span><span class=3D"token boolean">False</span><span clas=
s=3D"token punctuation">)</span><span class=3D"token punctuation">,</span>
            nn<span class=3D"token punctuation">.</span>BatchNorm2d<span cl=
ass=3D"token punctuation">(</span>num_features<span class=3D"token operator=
">=3D</span>features<span class=3D"token punctuation">)</span><span class=
=3D"token punctuation">,</span>
            nn<span class=3D"token punctuation">.</span>ReLU<span class=3D"=
token punctuation">(</span>inplace<span class=3D"token operator">=3D</span>=
<span class=3D"token boolean">True</span><span class=3D"token punctuation">=
)</span><span class=3D"token punctuation">,</span>
            nn<span class=3D"token punctuation">.</span>Conv2d<span class=
=3D"token punctuation">(</span>in_channels<span class=3D"token operator">=
=3D</span>features<span class=3D"token punctuation">,</span> out_channels<s=
pan class=3D"token operator">=3D</span>features<span class=3D"token punctua=
tion">,</span> kernel_size<span class=3D"token operator">=3D</span><span cl=
ass=3D"token number">3</span><span class=3D"token punctuation">,</span> pad=
ding<span class=3D"token operator">=3D</span><span class=3D"token number">1=
</span><span class=3D"token punctuation">,</span> bias<span class=3D"token =
operator">=3D</span><span class=3D"token boolean">False</span><span class=
=3D"token punctuation">)</span><span class=3D"token punctuation">,</span>
            nn<span class=3D"token punctuation">.</span>BatchNorm2d<span cl=
ass=3D"token punctuation">(</span>num_features<span class=3D"token operator=
">=3D</span>features<span class=3D"token punctuation">)</span><span class=
=3D"token punctuation">,</span>
            nn<span class=3D"token punctuation">.</span>ReLU<span class=3D"=
token punctuation">(</span>inplace<span class=3D"token operator">=3D</span>=
<span class=3D"token boolean">True</span><span class=3D"token punctuation">=
)</span><span class=3D"token punctuation">,</span>
        <span class=3D"token punctuation">)</span>

<span class=3D"token comment"># Custom Dataset Class</span>
<span class=3D"token keyword">class</span> <span class=3D"token class-name"=
>CustomDataset</span><span class=3D"token punctuation">(</span>Dataset<span=
 class=3D"token punctuation">)</span><span class=3D"token punctuation">:</s=
pan>
    <span class=3D"token keyword">def</span> <span class=3D"token function"=
>__init__</span><span class=3D"token punctuation">(</span>self<span class=
=3D"token punctuation">,</span> image_dir<span class=3D"token punctuation">=
,</span> mask_dir<span class=3D"token punctuation">,</span> transform<span =
class=3D"token operator">=3D</span><span class=3D"token boolean">None</span=
><span class=3D"token punctuation">)</span><span class=3D"token punctuation=
">:</span>
        self<span class=3D"token punctuation">.</span>image_dir <span class=
=3D"token operator">=3D</span> image_dir
        self<span class=3D"token punctuation">.</span>mask_dir <span class=
=3D"token operator">=3D</span> mask_dir
        self<span class=3D"token punctuation">.</span>transform <span class=
=3D"token operator">=3D</span> transform
        self<span class=3D"token punctuation">.</span>images <span class=3D=
"token operator">=3D</span> os<span class=3D"token punctuation">.</span>lis=
tdir<span class=3D"token punctuation">(</span>image_dir<span class=3D"token=
 punctuation">)</span>
   =20
    <span class=3D"token keyword">def</span> <span class=3D"token function"=
>__len__</span><span class=3D"token punctuation">(</span>self<span class=3D=
"token punctuation">)</span><span class=3D"token punctuation">:</span>
        <span class=3D"token keyword">return</span> <span class=3D"token bu=
iltin">len</span><span class=3D"token punctuation">(</span>self<span class=
=3D"token punctuation">.</span>images<span class=3D"token punctuation">)</s=
pan>
   =20
    <span class=3D"token keyword">def</span> <span class=3D"token function"=
>__getitem__</span><span class=3D"token punctuation">(</span>self<span clas=
s=3D"token punctuation">,</span> idx<span class=3D"token punctuation">)</sp=
an><span class=3D"token punctuation">:</span>
        img_path <span class=3D"token operator">=3D</span> os<span class=3D=
"token punctuation">.</span>path<span class=3D"token punctuation">.</span>j=
oin<span class=3D"token punctuation">(</span>self<span class=3D"token punct=
uation">.</span>image_dir<span class=3D"token punctuation">,</span> self<sp=
an class=3D"token punctuation">.</span>images<span class=3D"token punctuati=
on">[</span>idx<span class=3D"token punctuation">]</span><span class=3D"tok=
en punctuation">)</span>
        mask_path <span class=3D"token operator">=3D</span> os<span class=
=3D"token punctuation">.</span>path<span class=3D"token punctuation">.</spa=
n>join<span class=3D"token punctuation">(</span>self<span class=3D"token pu=
nctuation">.</span>mask_dir<span class=3D"token punctuation">,</span> self<=
span class=3D"token punctuation">.</span>images<span class=3D"token punctua=
tion">[</span>idx<span class=3D"token punctuation">]</span><span class=3D"t=
oken punctuation">)</span>
        image <span class=3D"token operator">=3D</span> np<span class=3D"to=
ken punctuation">.</span>array<span class=3D"token punctuation">(</span>Ima=
ge<span class=3D"token punctuation">.</span><span class=3D"token builtin">o=
pen</span><span class=3D"token punctuation">(</span>img_path<span class=3D"=
token punctuation">)</span><span class=3D"token punctuation">.</span>conver=
t<span class=3D"token punctuation">(</span><span class=3D"token string">"RG=
B"</span><span class=3D"token punctuation">)</span><span class=3D"token pun=
ctuation">)</span>
        mask <span class=3D"token operator">=3D</span> np<span class=3D"tok=
en punctuation">.</span>array<span class=3D"token punctuation">(</span>Imag=
e<span class=3D"token punctuation">.</span><span class=3D"token builtin">op=
en</span><span class=3D"token punctuation">(</span>mask_path<span class=3D"=
token punctuation">)</span><span class=3D"token punctuation">.</span>conver=
t<span class=3D"token punctuation">(</span><span class=3D"token string">"L"=
</span><span class=3D"token punctuation">)</span><span class=3D"token punct=
uation">,</span> dtype<span class=3D"token operator">=3D</span>np<span clas=
s=3D"token punctuation">.</span>float32<span class=3D"token punctuation">)<=
/span>
       =20
        <span class=3D"token comment"># Normalize the mask to [0, 1]</span>
        mask <span class=3D"token operator">=3D</span> mask <span class=3D"=
token operator">/</span> <span class=3D"token number">255.0</span>  <span c=
lass=3D"token comment"># Ensure mask values are between 0 and 1</span>
       =20
        <span class=3D"token keyword">if</span> self<span class=3D"token pu=
nctuation">.</span>transform<span class=3D"token punctuation">:</span>
            augmentations <span class=3D"token operator">=3D</span> self<sp=
an class=3D"token punctuation">.</span>transform<span class=3D"token punctu=
ation">(</span>image<span class=3D"token operator">=3D</span>image<span cla=
ss=3D"token punctuation">,</span> mask<span class=3D"token operator">=3D</s=
pan>mask<span class=3D"token punctuation">)</span>
            image <span class=3D"token operator">=3D</span> augmentations<s=
pan class=3D"token punctuation">[</span><span class=3D"token string">"image=
"</span><span class=3D"token punctuation">]</span>
            mask <span class=3D"token operator">=3D</span> augmentations<sp=
an class=3D"token punctuation">[</span><span class=3D"token string">"mask"<=
/span><span class=3D"token punctuation">]</span>
       =20
        image <span class=3D"token operator">=3D</span> image<span class=3D=
"token punctuation">.</span>transpose<span class=3D"token punctuation">(</s=
pan><span class=3D"token punctuation">(</span><span class=3D"token number">=
2</span><span class=3D"token punctuation">,</span> <span class=3D"token num=
ber">0</span><span class=3D"token punctuation">,</span> <span class=3D"toke=
n number">1</span><span class=3D"token punctuation">)</span><span class=3D"=
token punctuation">)</span>  <span class=3D"token comment"># HWC to CHW</sp=
an>
        image <span class=3D"token operator">=3D</span> torch<span class=3D=
"token punctuation">.</span>tensor<span class=3D"token punctuation">(</span=
>image<span class=3D"token punctuation">,</span> dtype<span class=3D"token =
operator">=3D</span>torch<span class=3D"token punctuation">.</span><span cl=
ass=3D"token builtin">float</span><span class=3D"token punctuation">)</span=
>
        mask <span class=3D"token operator">=3D</span> torch<span class=3D"=
token punctuation">.</span>tensor<span class=3D"token punctuation">(</span>=
mask<span class=3D"token punctuation">,</span> dtype<span class=3D"token op=
erator">=3D</span>torch<span class=3D"token punctuation">.</span><span clas=
s=3D"token builtin">float</span><span class=3D"token punctuation">)</span>
       =20
        <span class=3D"token keyword">return</span> image<span class=3D"tok=
en punctuation">,</span> mask

<span class=3D"token comment"># Define transformations</span>
<span class=3D"token keyword">import</span> albumentations <span class=3D"t=
oken keyword">as</span> A
transform <span class=3D"token operator">=3D</span> A<span class=3D"token p=
unctuation">.</span>Compose<span class=3D"token punctuation">(</span><span =
class=3D"token punctuation">[</span>
    A<span class=3D"token punctuation">.</span>Resize<span class=3D"token p=
unctuation">(</span><span class=3D"token number">256</span><span class=3D"t=
oken punctuation">,</span> <span class=3D"token number">256</span><span cla=
ss=3D"token punctuation">)</span><span class=3D"token punctuation">,</span>
    A<span class=3D"token punctuation">.</span>HorizontalFlip<span class=3D=
"token punctuation">(</span>p<span class=3D"token operator">=3D</span><span=
 class=3D"token number">0.5</span><span class=3D"token punctuation">)</span=
><span class=3D"token punctuation">,</span>
    A<span class=3D"token punctuation">.</span>VerticalFlip<span class=3D"t=
oken punctuation">(</span>p<span class=3D"token operator">=3D</span><span c=
lass=3D"token number">0.5</span><span class=3D"token punctuation">)</span><=
span class=3D"token punctuation">,</span>
<span class=3D"token punctuation">]</span><span class=3D"token punctuation"=
>)</span>

<span class=3D"token comment"># Hyperparameters</span>
LEARNING_RATE <span class=3D"token operator">=3D</span> <span class=3D"toke=
n number">1e-4</span>
DEVICE <span class=3D"token operator">=3D</span> <span class=3D"token strin=
g">"cuda"</span> <span class=3D"token keyword">if</span> torch<span class=
=3D"token punctuation">.</span>cuda<span class=3D"token punctuation">.</spa=
n>is_available<span class=3D"token punctuation">(</span><span class=3D"toke=
n punctuation">)</span> <span class=3D"token keyword">else</span> <span cla=
ss=3D"token string">"cpu"</span>
BATCH_SIZE <span class=3D"token operator">=3D</span> <span class=3D"token n=
umber">16</span>
NUM_EPOCHS <span class=3D"token operator">=3D</span> <span class=3D"token n=
umber">10</span>
NUM_WORKERS <span class=3D"token operator">=3D</span> <span class=3D"token =
number">2</span>
IMAGE_HEIGHT <span class=3D"token operator">=3D</span> <span class=3D"token=
 number">256</span>
IMAGE_WIDTH <span class=3D"token operator">=3D</span> <span class=3D"token =
number">256</span>

<span class=3D"token comment"># Main block</span>
<span class=3D"token keyword">if</span> __name__ <span class=3D"token opera=
tor">=3D=3D</span> <span class=3D"token string">'__main__'</span><span clas=
s=3D"token punctuation">:</span>
    <span class=3D"token comment"># Initialize dataset and dataloader</span=
>
    train_dataset <span class=3D"token operator">=3D</span> CustomDataset<s=
pan class=3D"token punctuation">(</span>image_dir<span class=3D"token opera=
tor">=3D</span><span class=3D"token string">"my_dataset/images"</span><span=
 class=3D"token punctuation">,</span> mask_dir<span class=3D"token operator=
">=3D</span><span class=3D"token string">"my_dataset/masks"</span><span cla=
ss=3D"token punctuation">,</span> transform<span class=3D"token operator">=
=3D</span>transform<span class=3D"token punctuation">)</span>
    train_loader <span class=3D"token operator">=3D</span> DataLoader<span =
class=3D"token punctuation">(</span>train_dataset<span class=3D"token punct=
uation">,</span> batch_size<span class=3D"token operator">=3D</span>BATCH_S=
IZE<span class=3D"token punctuation">,</span> shuffle<span class=3D"token o=
perator">=3D</span><span class=3D"token boolean">True</span><span class=3D"=
token punctuation">,</span> num_workers<span class=3D"token operator">=3D</=
span>NUM_WORKERS<span class=3D"token punctuation">)</span>

    <span class=3D"token comment"># Initialize model, loss function, and op=
timizer</span>
    model <span class=3D"token operator">=3D</span> UNet<span class=3D"toke=
n punctuation">(</span><span class=3D"token punctuation">)</span><span clas=
s=3D"token punctuation">.</span>to<span class=3D"token punctuation">(</span=
>DEVICE<span class=3D"token punctuation">)</span>
    loss_fn <span class=3D"token operator">=3D</span> nn<span class=3D"toke=
n punctuation">.</span>BCELoss<span class=3D"token punctuation">(</span><sp=
an class=3D"token punctuation">)</span>
    optimizer <span class=3D"token operator">=3D</span> optim<span class=3D=
"token punctuation">.</span>Adam<span class=3D"token punctuation">(</span>m=
odel<span class=3D"token punctuation">.</span>parameters<span class=3D"toke=
n punctuation">(</span><span class=3D"token punctuation">)</span><span clas=
s=3D"token punctuation">,</span> lr<span class=3D"token operator">=3D</span=
>LEARNING_RATE<span class=3D"token punctuation">)</span>

    <span class=3D"token comment"># Training loop</span>
    <span class=3D"token keyword">for</span> epoch <span class=3D"token key=
word">in</span> <span class=3D"token builtin">range</span><span class=3D"to=
ken punctuation">(</span>NUM_EPOCHS<span class=3D"token punctuation">)</spa=
n><span class=3D"token punctuation">:</span>
        model<span class=3D"token punctuation">.</span>train<span class=3D"=
token punctuation">(</span><span class=3D"token punctuation">)</span>
        <span class=3D"token keyword">for</span> batch_idx<span class=3D"to=
ken punctuation">,</span> <span class=3D"token punctuation">(</span>data<sp=
an class=3D"token punctuation">,</span> targets<span class=3D"token punctua=
tion">)</span> <span class=3D"token keyword">in</span> <span class=3D"token=
 builtin">enumerate</span><span class=3D"token punctuation">(</span>train_l=
oader<span class=3D"token punctuation">)</span><span class=3D"token punctua=
tion">:</span>
            data <span class=3D"token operator">=3D</span> data<span class=
=3D"token punctuation">.</span>to<span class=3D"token punctuation">(</span>=
device<span class=3D"token operator">=3D</span>DEVICE<span class=3D"token p=
unctuation">)</span>
            targets <span class=3D"token operator">=3D</span> targets<span =
class=3D"token punctuation">.</span>to<span class=3D"token punctuation">(</=
span>device<span class=3D"token operator">=3D</span>DEVICE<span class=3D"to=
ken punctuation">)</span>
           =20
            <span class=3D"token comment"># Add an extra dimension to the t=
arget mask</span>
            targets <span class=3D"token operator">=3D</span> targets<span =
class=3D"token punctuation">.</span>unsqueeze<span class=3D"token punctuati=
on">(</span><span class=3D"token number">1</span><span class=3D"token punct=
uation">)</span>  <span class=3D"token comment"># Shape: [batch_size, 1, he=
ight, width]</span>
           =20
            <span class=3D"token comment"># Forward pass</span>
            predictions <span class=3D"token operator">=3D</span> model<spa=
n class=3D"token punctuation">(</span>data<span class=3D"token punctuation"=
>)</span>
            loss <span class=3D"token operator">=3D</span> loss_fn<span cla=
ss=3D"token punctuation">(</span>predictions<span class=3D"token punctuatio=
n">,</span> targets<span class=3D"token punctuation">)</span>
           =20
            <span class=3D"token comment"># Backward pass</span>
            optimizer<span class=3D"token punctuation">.</span>zero_grad<sp=
an class=3D"token punctuation">(</span><span class=3D"token punctuation">)<=
/span>
            loss<span class=3D"token punctuation">.</span>backward<span cla=
ss=3D"token punctuation">(</span><span class=3D"token punctuation">)</span>
            optimizer<span class=3D"token punctuation">.</span>step<span cl=
ass=3D"token punctuation">(</span><span class=3D"token punctuation">)</span=
>
           =20
            <span class=3D"token keyword">if</span> batch_idx <span class=
=3D"token operator">%</span> <span class=3D"token number">10</span> <span c=
lass=3D"token operator">=3D=3D</span> <span class=3D"token number">0</span>=
<span class=3D"token punctuation">:</span>
                <span class=3D"token keyword">print</span><span class=3D"to=
ken punctuation">(</span><span class=3D"token string-interpolation"><span c=
lass=3D"token string">f"Epoch [</span><span class=3D"token interpolation"><=
span class=3D"token punctuation">{</span>epoch<span class=3D"token punctuat=
ion">}</span></span><span class=3D"token string">/</span><span class=3D"tok=
en interpolation"><span class=3D"token punctuation">{</span>NUM_EPOCHS<span=
 class=3D"token punctuation">}</span></span><span class=3D"token string">] =
Batch </span><span class=3D"token interpolation"><span class=3D"token punct=
uation">{</span>batch_idx<span class=3D"token punctuation">}</span></span><=
span class=3D"token string">/</span><span class=3D"token interpolation"><sp=
an class=3D"token punctuation">{</span><span class=3D"token builtin">len</s=
pan><span class=3D"token punctuation">(</span>train_loader<span class=3D"to=
ken punctuation">)</span><span class=3D"token punctuation">}</span></span><=
span class=3D"token string"> Loss: </span><span class=3D"token interpolatio=
n"><span class=3D"token punctuation">{</span>loss<span class=3D"token punct=
uation">.</span>item<span class=3D"token punctuation">(</span><span class=
=3D"token punctuation">)</span><span class=3D"token punctuation">:</span><s=
pan class=3D"token format-spec">.4f</span><span class=3D"token punctuation"=
>}</span></span><span class=3D"token string">"</span></span><span class=3D"=
token punctuation">)</span>
       =20
        <span class=3D"token comment"># Save model checkpoint</span>
        torch<span class=3D"token punctuation">.</span>save<span class=3D"t=
oken punctuation">(</span>model<span class=3D"token punctuation">.</span>st=
ate_dict<span class=3D"token punctuation">(</span><span class=3D"token punc=
tuation">)</span><span class=3D"token punctuation">,</span> <span class=3D"=
token string-interpolation"><span class=3D"token string">f"unet_epoch_</spa=
n><span class=3D"token interpolation"><span class=3D"token punctuation">{</=
span>epoch<span class=3D"token punctuation">}</span></span><span class=3D"t=
oken string">.pth"</span></span><span class=3D"token punctuation">)</span>

    <span class=3D"token keyword">print</span><span class=3D"token punctuat=
ion">(</span><span class=3D"token string">"Training complete!"</span><span =
class=3D"token punctuation">)</span></pre></div><h3>Key Changes:</h3><ol st=
art=3D"1"><li><p>Added <code>mask =3D mask / 255.0</code> to normalize the =
mask values to <code>[0, 1]</code>.</p></li><li><p>This ensures compatibili=
ty with <code>nn.BCELoss</code>.</p></li></ol><p>Let me know if you encount=
er any other issues!</p></div><div class=3D"ds-flex" style=3D"margin-top: 1=
2px; height: 20px; align-items: center; gap: 12px;"><div class=3D"ds-flex a=
be97156" style=3D"align-items: center; gap: 12px;"><div class=3D"ds-icon-bu=
tton" tabindex=3D"0" style=3D"--ds-icon-button-text-color: #909090; --ds-ic=
on-button-size: 20px;"><div class=3D"ds-icon" style=3D"font-size: 20px; wid=
th: 20px; height: 20px;"><svg viewBox=3D"0 0 20 20" fill=3D"none" xmlns=3D"=
http://www.w3.org/2000/svg" xmlns:xlink=3D"http://www.w3.org/1999/xlink"><d=
efs><clipPath id=3D"clip1248_20193"><rect id=3D"=E9=8D=A5=E6=83=A7=E7=9C=B0=
_1" width=3D"17.052675" height=3D"17.052441" transform=3D"translate(1.00000=
0 1.000000)" fill=3D"white" fill-opacity=3D"0"></rect></clipPath><clipPath =
id=3D"clip1257_20794"><rect id=3D"=E5=A4=8D=E5=88=B6" width=3D"20.000000" h=
eight=3D"20.000000" fill=3D"white" fill-opacity=3D"0"></rect></clipPath></d=
efs><g clip-path=3D"url(#clip1257_20794)"><g clip-path=3D"url(#clip1248_201=
93)"><path id=3D"path" d=3D"M5.03 14.64C4.77 14.64 4.5 14.62 4.24 14.56C3.9=
8 14.51 3.73 14.43 3.49 14.33C3.24 14.23 3.01 14.1 2.79 13.96C2.57 13.81 2.=
37 13.64 2.18 13.45C1.99 13.26 1.82 13.05 1.68 12.83C1.53 12.61 1.4 12.37 1=
.3 12.13C1.2 11.88 1.13 11.63 1.07 11.36C1.02 11.1 1 10.84 1 10.57L1 5.07C1=
 4.8 1.02 4.54 1.07 4.27C1.13 4.01 1.2 3.76 1.3 3.51C1.4 3.26 1.53 3.03 1.6=
8 2.81C1.82 2.58 1.99 2.38 2.18 2.19C2.37 2 2.57 1.83 2.79 1.68C3.01 1.53 3=
.24 1.41 3.49 1.31C3.73 1.2 3.98 1.13 4.24 1.07C4.5 1.02 4.77 1 5.03 1L10.4=
9 1C10.75 1 11.01 1.02 11.27 1.07C11.53 1.13 11.78 1.2 12.03 1.31C12.27 1.4=
1 12.51 1.53 12.73 1.68C12.95 1.83 13.15 2 13.34 2.19C13.53 2.38 13.69 2.58=
 13.84 2.81C13.99 3.03 14.11 3.26 14.21 3.51C14.31 3.76 14.39 4.01 14.44 4.=
27C14.5 4.54 14.52 4.8 14.52 5.07L12.94 5.07C12.94 4.91 12.92 4.75 12.89 4.=
58C12.86 4.43 12.81 4.27 12.75 4.12C12.69 3.97 12.61 3.83 12.52 3.69C12.43 =
3.56 12.33 3.43 12.22 3.32C12.1 3.2 11.98 3.1 11.85 3.01C11.71 2.92 11.57 2=
.84 11.42 2.78C11.27 2.72 11.12 2.67 10.96 2.64C10.81 2.61 10.65 2.59 10.49=
 2.59L5.03 2.59C4.87 2.59 4.71 2.61 4.55 2.64C4.4 2.67 4.24 2.72 4.09 2.78C=
3.95 2.84 3.8 2.92 3.67 3.01C3.54 3.1 3.41 3.2 3.3 3.32C3.18 3.43 3.08 3.56=
 2.99 3.69C2.9 3.83 2.83 3.97 2.77 4.12C2.71 4.27 2.66 4.43 2.63 4.58C2.6 4=
.75 2.58 4.91 2.58 5.07L2.58 10.57C2.58 10.73 2.6 10.89 2.63 11.05C2.66 11.=
21 2.71 11.37 2.77 11.52C2.83 11.67 2.9 11.81 2.99 11.94C3.08 12.08 3.18 12=
.2 3.3 12.32C3.41 12.43 3.54 12.54 3.67 12.63C3.8 12.72 3.95 12.79 4.09 12.=
86C4.24 12.92 4.4 12.96 4.55 13C4.71 13.03 4.87 13.04 5.03 13.04L5.03 14.64=
Z" fill=3D"currentColor" fill-opacity=3D"1.000000" fill-rule=3D"evenodd"></=
path></g><path id=3D"path" d=3D"M14.75 18.91L9.3 18.91C9.03 18.91 8.77 18.8=
8 8.51 18.83C8.25 18.78 8 18.7 7.75 18.6C7.51 18.49 7.27 18.37 7.05 18.22C6=
.83 18.07 6.63 17.9 6.44 17.71C6.25 17.52 6.09 17.32 5.94 17.1C5.79 16.87 5=
.67 16.64 5.57 16.39C5.47 16.14 5.39 15.89 5.34 15.63C5.28 15.37 5.26 15.1 =
5.26 14.83L5.26 9.33C5.26 9.06 5.28 8.8 5.34 8.54C5.39 8.28 5.47 8.02 5.57 =
7.77C5.67 7.53 5.79 7.29 5.94 7.07C6.09 6.85 6.25 6.64 6.44 6.45C6.63 6.26 =
6.83 6.09 7.05 5.95C7.27 5.8 7.51 5.67 7.75 5.57C8 5.47 8.25 5.39 8.51 5.34=
C8.77 5.29 9.03 5.26 9.3 5.26L14.75 5.26C15.01 5.26 15.28 5.29 15.54 5.34C1=
5.8 5.39 16.05 5.47 16.29 5.57C16.54 5.67 16.77 5.8 16.99 5.95C17.21 6.09 1=
7.41 6.26 17.6 6.45C17.79 6.64 17.96 6.85 18.1 7.07C18.25 7.29 18.37 7.53 1=
8.48 7.77C18.58 8.02 18.65 8.28 18.71 8.54C18.76 8.8 18.78 9.06 18.78 9.33L=
18.78 14.83C18.78 15.1 18.76 15.37 18.71 15.63C18.65 15.89 18.58 16.14 18.4=
8 16.39C18.37 16.64 18.25 16.87 18.1 17.1C17.96 17.32 17.79 17.52 17.6 17.7=
1C17.41 17.9 17.21 18.07 16.99 18.22C16.77 18.37 16.54 18.49 16.29 18.6C16.=
05 18.7 15.8 18.78 15.54 18.83C15.28 18.88 15.01 18.91 14.75 18.91ZM9.3 6.8=
6C9.13 6.86 8.97 6.87 8.82 6.91C8.66 6.94 8.51 6.98 8.36 7.05C8.21 7.11 8.0=
7 7.18 7.93 7.28C7.8 7.37 7.68 7.47 7.56 7.58C7.45 7.7 7.35 7.82 7.26 7.96C=
7.17 8.09 7.09 8.24 7.03 8.38C6.97 8.54 6.92 8.69 6.89 8.85C6.86 9.01 6.84 =
9.17 6.84 9.33L6.84 14.83C6.84 15 6.86 15.16 6.89 15.32C6.92 15.48 6.97 15.=
63 7.03 15.78C7.09 15.93 7.17 16.07 7.26 16.21C7.35 16.34 7.45 16.47 7.56 1=
6.58C7.68 16.7 7.8 16.8 7.93 16.89C8.07 16.98 8.21 17.06 8.36 17.12C8.51 17=
.18 8.66 17.23 8.82 17.26C8.97 17.29 9.13 17.31 9.3 17.31L14.75 17.31C14.91=
 17.31 15.07 17.29 15.23 17.26C15.38 17.23 15.54 17.18 15.69 17.12C15.83 17=
.06 15.98 16.98 16.11 16.89C16.24 16.8 16.37 16.7 16.48 16.58C16.59 16.47 1=
6.7 16.34 16.79 16.21C16.87 16.07 16.95 15.93 17.01 15.78C17.07 15.63 17.12=
 15.48 17.15 15.32C17.18 15.16 17.2 15 17.2 14.83L17.2 9.33C17.2 9.17 17.18=
 9.01 17.15 8.85C17.12 8.69 17.07 8.54 17.01 8.38C16.95 8.24 16.87 8.09 16.=
79 7.96C16.7 7.82 16.59 7.7 16.48 7.58C16.37 7.47 16.24 7.37 16.11 7.28C15.=
98 7.19 15.83 7.11 15.69 7.05C15.54 6.98 15.38 6.94 15.23 6.91C15.07 6.87 1=
4.91 6.86 14.75 6.86L9.3 6.86Z" fill=3D"currentColor" fill-opacity=3D"1.000=
000" fill-rule=3D"nonzero"></path></g></svg></div></div><div class=3D"ds-ic=
on-button" tabindex=3D"0" style=3D"--ds-icon-button-text-color: #909090; --=
ds-icon-button-size: 20px;"><div class=3D"ds-icon" style=3D"font-size: 20px=
; width: 20px; height: 20px;"><svg viewBox=3D"0 0 20 20" fill=3D"none" xmln=
s=3D"http://www.w3.org/2000/svg" xmlns:xlink=3D"http://www.w3.org/1999/xlin=
k"><defs><clipPath id=3D"clip1258_20811"><rect id=3D"=E9=87=8D=E6=96=B0=E7=
=94=9F=E6=88=90" width=3D"20.000000" height=3D"20.000000" fill=3D"white" fi=
ll-opacity=3D"0"></rect></clipPath></defs><rect id=3D"=E9=87=8D=E6=96=B0=E7=
=94=9F=E6=88=90" width=3D"20.000000" height=3D"20.000000" fill=3D"#FFFFFF" =
fill-opacity=3D"0"></rect><g clip-path=3D"url(#clip1258_20811)"><path id=3D=
"path" d=3D"M17.01 7.63L13.98 7.62C13.88 7.62 13.79 7.6 13.7 7.56C13.62 7.5=
2 13.54 7.47 13.47 7.4C13.4 7.33 13.35 7.25 13.32 7.16C13.28 7.07 13.26 6.9=
8 13.26 6.88C13.26 6.79 13.28 6.69 13.32 6.6C13.35 6.51 13.4 6.43 13.47 6.3=
6C13.54 6.3 13.62 6.24 13.7 6.21C13.79 6.17 13.88 6.15 13.98 6.15L15.57 6.1=
6C15.67 6.16 15.76 6.14 15.85 6.1C15.94 6.06 16.01 6.01 16.08 5.94C16.15 5.=
87 16.2 5.79 16.23 5.7C16.27 5.61 16.29 5.52 16.29 5.42L16.3 3.89C16.3 3.79=
 16.32 3.7 16.36 3.61C16.39 3.52 16.44 3.44 16.51 3.37C16.58 3.3 16.66 3.25=
 16.74 3.21C16.83 3.17 16.92 3.16 17.02 3.16C17.11 3.16 17.2 3.17 17.29 3.2=
1C17.38 3.25 17.46 3.3 17.52 3.37C17.59 3.44 17.64 3.52 17.68 3.61C17.71 3.=
7 17.73 3.79 17.73 3.89L17.72 6.9C17.72 7 17.71 7.09 17.67 7.18C17.63 7.27 =
17.58 7.34 17.52 7.41C17.45 7.48 17.37 7.53 17.29 7.57C17.2 7.61 17.11 7.63=
 17.01 7.63Z" fill=3D"currentColor" fill-opacity=3D"1.000000" fill-rule=3D"=
nonzero"></path><path id=3D"path" d=3D"M2.31 16.29L2.32 13.3C2.32 13.21 2.3=
4 13.11 2.37 13.02C2.41 12.93 2.46 12.85 2.53 12.78C2.6 12.71 2.67 12.66 2.=
76 12.62C2.85 12.58 2.94 12.56 3.03 12.56L6.07 12.57C6.16 12.57 6.25 12.59 =
6.34 12.63C6.43 12.67 6.51 12.72 6.57 12.79C6.64 12.86 6.69 12.94 6.73 13.0=
3C6.76 13.12 6.78 13.22 6.78 13.32C6.78 13.41 6.76 13.51 6.73 13.6C6.69 13.=
69 6.64 13.77 6.57 13.84C6.51 13.91 6.43 13.96 6.34 14C6.25 14.04 6.16 14.0=
6 6.07 14.06L4.47 14.05C4.38 14.05 4.29 14.07 4.2 14.11C4.11 14.15 4.03 14.=
2 3.97 14.27C3.9 14.34 3.85 14.42 3.81 14.51C3.78 14.6 3.76 14.7 3.76 14.8L=
3.75 16.29C3.75 16.39 3.73 16.48 3.69 16.58C3.65 16.67 3.6 16.75 3.54 16.82=
C3.47 16.89 3.39 16.94 3.3 16.98C3.22 17.01 3.13 17.03 3.03 17.03C2.94 17.0=
3 2.85 17.02 2.76 16.98C2.67 16.94 2.59 16.89 2.52 16.82C2.46 16.75 2.4 16.=
67 2.37 16.58C2.33 16.49 2.31 16.39 2.31 16.29Z" fill=3D"currentColor" fill=
-opacity=3D"1.000000" fill-rule=3D"nonzero"></path><path id=3D"path" d=3D"M=
9.88 18.01C9.51 18.01 9.15 17.99 8.79 17.94C8.42 17.89 8.07 17.82 7.71 17.7=
3C7.36 17.63 7.02 17.51 6.68 17.37C6.34 17.23 6.02 17.07 5.7 16.89C5.39 16.=
7 5.09 16.5 4.8 16.28C4.52 16.05 4.25 15.81 3.99 15.55C3.74 15.29 3.5 15.02=
 3.29 14.73C3.07 14.44 2.88 14.13 2.7 13.82L4.15 13.05C4.32 13.35 4.51 13.6=
4 4.72 13.91C4.93 14.18 5.17 14.43 5.42 14.66C5.67 14.9 5.94 15.11 6.23 15.=
3C6.52 15.49 6.83 15.66 7.14 15.81C7.46 15.95 7.78 16.07 8.12 16.16C8.45 16=
.25 8.8 16.32 9.14 16.36C9.49 16.39 9.83 16.4 10.18 16.39C10.53 16.37 10.87=
 16.33 11.22 16.26C11.56 16.19 11.89 16.09 12.21 15.97C12.54 15.84 12.85 15=
.7 13.15 15.53C13.45 15.35 13.74 15.16 14.01 14.94C14.28 14.72 14.53 14.49 =
14.76 14.23C14.99 13.97 15.2 13.7 15.38 13.41C15.57 13.12 15.73 12.82 15.87=
 12.5C16 12.19 16.11 11.87 16.2 11.53C16.28 11.2 16.34 10.87 16.36 10.52C16=
.37 10.42 16.4 10.33 16.44 10.24C16.48 10.15 16.54 10.07 16.61 10C16.69 9.9=
3 16.77 9.87 16.86 9.84C16.96 9.8 17.05 9.77 17.16 9.77C17.27 9.77 17.38 9.=
79 17.49 9.83C17.6 9.87 17.7 9.94 17.78 10.02C17.86 10.1 17.92 10.2 17.96 1=
0.3C18 10.41 18.01 10.52 18 10.64C17.98 10.89 17.95 11.13 17.91 11.38C17.86=
 11.62 17.81 11.87 17.74 12.11C17.68 12.35 17.6 12.58 17.51 12.82C17.42 13.=
05 17.32 13.28 17.21 13.5C17.1 13.73 16.98 13.95 16.85 14.16C16.71 14.37 16=
.57 14.58 16.42 14.78C16.27 14.98 16.11 15.17 15.94 15.36C15.77 15.54 15.59=
 15.72 15.41 15.89C15.22 16.06 15.03 16.22 14.83 16.37C14.63 16.52 14.42 16=
.66 14.2 16.79C13.99 16.93 13.77 17.05 13.54 17.16C13.31 17.27 13.08 17.37 =
12.85 17.46C12.61 17.55 12.37 17.63 12.13 17.7C11.88 17.77 11.64 17.83 11.3=
9 17.87C11.14 17.92 10.89 17.96 10.63 17.98C10.38 18 10.13 18.01 9.88 18.01=
Z" fill=3D"currentColor" fill-opacity=3D"1.000000" fill-rule=3D"nonzero"></=
path><path id=3D"path" d=3D"M2.85 10.27C2.73 10.28 2.62 10.26 2.51 10.22C2.=
4 10.17 2.31 10.11 2.23 10.03C2.14 9.95 2.08 9.85 2.04 9.74C2 9.63 1.99 9.5=
2 2 9.41C2.03 8.98 2.1 8.56 2.2 8.15C2.3 7.73 2.43 7.33 2.6 6.94C2.76 6.54 =
2.96 6.16 3.19 5.8C3.41 5.44 3.67 5.1 3.95 4.77C4.24 4.45 4.54 4.15 4.88 3.=
88C5.21 3.6 5.56 3.35 5.93 3.13C6.3 2.91 6.69 2.73 7.09 2.57C7.5 2.41 7.91 =
2.28 8.33 2.19C8.75 2.09 9.18 2.03 9.62 2.01C10.05 1.98 10.48 1.99 10.91 2.=
03C11.35 2.07 11.77 2.14 12.19 2.25C12.61 2.36 13.02 2.5 13.42 2.67C13.81 2=
.84 14.19 3.04 14.56 3.28C14.92 3.51 15.27 3.77 15.59 4.05C15.91 4.34 16.21=
 4.64 16.48 4.98C16.75 5.31 17 5.66 17.21 6.03L15.78 6.83C15.61 6.54 15.42 =
6.25 15.2 5.99C14.98 5.73 14.74 5.48 14.49 5.25C14.23 5.02 13.96 4.82 13.66=
 4.63C13.37 4.45 13.07 4.29 12.75 4.15C12.44 4.01 12.11 3.9 11.77 3.82C11.4=
4 3.73 11.1 3.67 10.76 3.64C10.41 3.61 10.07 3.6 9.72 3.62C9.37 3.64 9.03 3=
.69 8.69 3.77C8.36 3.84 8.03 3.94 7.71 4.07C7.38 4.2 7.08 4.35 6.78 4.52C6.=
48 4.7 6.2 4.89 5.94 5.11C5.67 5.33 5.43 5.57 5.2 5.83C4.97 6.08 4.77 6.36 =
4.59 6.65C4.41 6.94 4.25 7.24 4.12 7.55C3.98 7.87 3.88 8.19 3.8 8.52C3.72 8=
.85 3.66 9.19 3.64 9.53C3.63 9.62 3.6 9.72 3.56 9.81C3.52 9.9 3.46 9.98 3.3=
9 10.05C3.32 10.12 3.23 10.17 3.14 10.21C3.05 10.25 2.95 10.27 2.85 10.27Z"=
 fill=3D"currentColor" fill-opacity=3D"1.000000" fill-rule=3D"nonzero"></pa=
th></g></svg></div></div><div class=3D"ds-icon-button" tabindex=3D"0" style=
=3D"--ds-icon-button-text-color: #909090; --ds-icon-button-size: 20px;"><di=
v class=3D"ds-icon" style=3D"font-size: 18px; width: 18px; height: 18px;"><=
svg width=3D"18" height=3D"18" viewBox=3D"0 0 18 18" fill=3D"none" xmlns=3D=
"http://www.w3.org/2000/svg"><path d=3D"M2.5 18c-.663 0-1.298-.294-1.767-.8=
15A2.944 2.944 0 0 1 0 15.222V8.777c0-.737.263-1.443.732-1.964C1.202 6.293 =
1.837 6 2.5 6s1.299.293 1.768.813A2.94 2.94 0 0 1 5 8.777v6.445c0 .737-.264=
 1.443-.733 1.963-.469.521-1.104.814-1.767.815zm0-10.308a.934.934 0 0 0-.69=
3.319c-.183.204-.287.48-.287.77v6.445c0 .288.103.565.287.77.184.204.433.319=
.693.32.26-.001.51-.116.693-.32.183-.205.287-.482.287-.77V8.78c0-.143-.025-=
.285-.074-.417a1.105 1.105 0 0 0-.212-.354.981.981 0 0 0-.318-.237.897.897 =
0 0 0-.376-.084v.004z" fill=3D"currentColor"></path><path d=3D"M10.352 18H7=
.564a3.539 3.539 0 0 1-2.519-1.062A3.658 3.658 0 0 1 4 14.378V8.281c0-.884.=
177-1.76.523-2.572l1.911-4.502c.142-.334.371-.622.662-.834A1.949 1.949 0 0 =
1 9.122.21c.32.163.59.411.782.719l.171.271c.194.312.298.673.298 1.041v1.755=
c0 .341.134.669.371.91.238.242.56.378.896.378h2.691a3.64 3.64 0 0 1 2.594 1=
.092A3.76 3.76 0 0 1 18 9.014a7.267 7.267 0 0 1-1.288 4.147l-1.602 2.325a5.=
84 5.84 0 0 1-2.076 1.848 5.735 5.735 0 0 1-2.682.666zM8.245 1.648h-.03a.33=
1.331 0 0 0-.293.212L6.012 6.36a4.882 4.882 0 0 0-.39 1.92v6.095c0 .524.205=
 1.026.569 1.396.364.37.858.579 1.373.58h2.788c.672-.001 1.335-.166 1.931-.=
481a4.208 4.208 0 0 0 1.495-1.332l1.603-2.324a5.616 5.616 0 0 0 .994-3.201 =
2.1 2.1 0 0 0-.6-1.472 2.031 2.031 0 0 0-1.448-.61h-2.691c-.766-.001-1.5-.3=
1-2.042-.861a2.964 2.964 0 0 1-.847-2.075V2.241a.297.297 0 0 0-.046-.16l-.1=
7-.272a.334.334 0 0 0-.286-.16z" fill=3D"currentColor"></path></svg></div><=
/div><div class=3D"ds-icon-button" tabindex=3D"0" style=3D"--ds-icon-button=
-text-color: #909090; --ds-icon-button-size: 20px;"><div class=3D"ds-icon" =
style=3D"font-size: 20px; width: 20px; height: 20px;"><svg viewBox=3D"0 0 2=
0 20" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" xmlns:xlink=3D"htt=
p://www.w3.org/1999/xlink"><defs><clipPath id=3D"clip1348_20218"><rect id=
=3D"=E7=82=B9=E8=B8=A90718" width=3D"20.000000" height=3D"20.000000" fill=
=3D"white" fill-opacity=3D"0"></rect></clipPath></defs><rect id=3D"=E7=82=
=B9=E8=B8=A90718" width=3D"20.000000" height=3D"20.000000" fill=3D"#FFFFFF"=
 fill-opacity=3D"0"></rect><g clip-path=3D"url(#clip1348_20218)"><path id=
=3D"path" d=3D"M3.71 13.17C3.53 13.17 3.36 13.16 3.18 13.12C3.01 13.09 2.84=
 13.04 2.67 12.97C2.51 12.9 2.35 12.82 2.2 12.72C2.05 12.62 1.92 12.51 1.79=
 12.38C1.66 12.25 1.55 12.12 1.45 11.97C1.35 11.82 1.27 11.67 1.2 11.5C1.13=
 11.34 1.08 11.17 1.05 11C1.01 10.82 1 10.65 1 10.47L1 4.19C1 4.02 1.02 3.8=
4 1.06 3.67C1.09 3.5 1.15 3.33 1.22 3.17C1.29 3.01 1.37 2.86 1.47 2.71C1.57=
 2.57 1.68 2.43 1.81 2.31C1.93 2.19 2.07 2.08 2.22 1.98C2.36 1.88 2.52 1.8 =
2.68 1.74C2.84 1.67 3.01 1.62 3.19 1.59C3.36 1.55 3.53 1.54 3.71 1.54C3.89 =
1.54 4.06 1.55 4.23 1.59C4.41 1.62 4.57 1.67 4.74 1.74C4.9 1.8 5.06 1.88 5.=
2 1.98C5.35 2.08 5.49 2.19 5.61 2.31C5.74 2.43 5.85 2.57 5.95 2.71C6.05 2.8=
6 6.13 3.01 6.2 3.17C6.27 3.33 6.33 3.5 6.36 3.67C6.4 3.84 6.42 4.02 6.42 4=
.19L6.42 10.47C6.42 10.65 6.41 10.82 6.37 11C6.34 11.17 6.28 11.34 6.22 11.=
5C6.15 11.67 6.06 11.82 5.97 11.97C5.87 12.12 5.75 12.25 5.63 12.38C5.5 12.=
51 5.36 12.62 5.22 12.72C5.07 12.82 4.91 12.9 4.75 12.97C4.58 13.04 4.41 13=
.09 4.24 13.12C4.06 13.16 3.89 13.17 3.71 13.17ZM3.71 3.14C3.57 3.14 3.43 3=
.16 3.3 3.22C3.17 3.27 3.06 3.35 2.96 3.45C2.86 3.54 2.78 3.66 2.73 3.79C2.=
67 3.92 2.65 4.05 2.64 4.2L2.64 10.47C2.64 10.62 2.66 10.75 2.72 10.89C2.77=
 11.02 2.85 11.14 2.95 11.24C3.05 11.34 3.16 11.42 3.29 11.48C3.43 11.54 3.=
57 11.56 3.71 11.56C3.85 11.56 3.99 11.54 4.12 11.48C4.26 11.42 4.37 11.34 =
4.47 11.24C4.57 11.14 4.65 11.02 4.7 10.89C4.75 10.75 4.78 10.62 4.77 10.47=
L4.77 4.2C4.77 4.05 4.75 3.92 4.69 3.79C4.64 3.66 4.56 3.54 4.46 3.44C4.36 =
3.34 4.25 3.27 4.12 3.21C3.99 3.16 3.85 3.14 3.71 3.14Z" fill=3D"currentCol=
or" fill-opacity=3D"1.000000" fill-rule=3D"nonzero"></path><path id=3D"path=
" d=3D"M9.09 18.95C9.04 18.95 8.99 18.95 8.93 18.95C8.75 18.93 8.57 18.89 8=
.4 18.83C8.23 18.77 8.07 18.69 7.92 18.58C7.78 18.48 7.64 18.35 7.53 18.21C=
7.42 18.07 7.32 17.92 7.25 17.75L5.31 13.26C4.95 12.44 4.77 11.58 4.77 10.6=
9L4.77 4.61C4.77 4.37 4.8 4.14 4.84 3.9C4.89 3.67 4.96 3.45 5.05 3.23C5.14 =
3.01 5.25 2.8 5.39 2.6C5.52 2.4 5.67 2.22 5.84 2.05C6.01 1.89 6.19 1.74 6.3=
9 1.61C6.58 1.47 6.79 1.36 7.01 1.27C7.23 1.18 7.46 1.11 7.69 1.07C7.93 1.0=
2 8.16 1 8.4 1L11.24 1C11.71 1 12.18 1.05 12.64 1.16C13.1 1.28 13.54 1.44 1=
3.97 1.66C14.39 1.88 14.78 2.14 15.13 2.46C15.49 2.77 15.8 3.12 16.08 3.5L1=
7.71 5.82C18.13 6.43 18.46 7.08 18.68 7.79C18.91 8.5 19.02 9.22 19.02 9.96C=
19.02 10.21 18.99 10.45 18.95 10.69C18.9 10.93 18.83 11.16 18.73 11.38C18.6=
4 11.61 18.53 11.82 18.39 12.03C18.25 12.23 18.1 12.42 17.92 12.59C17.75 12=
.76 17.56 12.92 17.36 13.05C17.15 13.19 16.94 13.3 16.71 13.4C16.49 13.49 1=
6.25 13.56 16.01 13.61C15.77 13.66 15.53 13.68 15.28 13.68L12.54 13.68C12.3=
7 13.68 12.21 13.71 12.05 13.78C11.89 13.84 11.75 13.94 11.63 14.06C11.51 1=
4.18 11.42 14.32 11.35 14.48C11.29 14.63 11.26 14.8 11.26 14.97L11.26 16.71=
C11.25 17.09 11.15 17.43 10.95 17.75L10.78 18.02C10.6 18.31 10.36 18.54 10.=
06 18.7C9.76 18.87 9.43 18.95 9.09 18.95ZM8.4 2.64C8.27 2.64 8.14 2.65 8.01=
 2.68C7.88 2.7 7.76 2.74 7.64 2.79C7.52 2.84 7.41 2.9 7.3 2.97C7.19 3.04 7.=
09 3.12 7 3.21C6.91 3.31 6.83 3.41 6.75 3.51C6.68 3.62 6.62 3.73 6.57 3.85C=
6.52 3.97 6.48 4.1 6.46 4.22C6.43 4.35 6.42 4.48 6.42 4.61L6.42 10.69C6.42 =
11.35 6.55 11.99 6.82 12.6L8.76 17.1C8.82 17.23 8.92 17.3 9.06 17.31C9.2 17=
.32 9.31 17.26 9.39 17.14L9.56 16.87C9.59 16.83 9.61 16.77 9.61 16.71L9.61 =
14.96C9.61 14.77 9.63 14.58 9.66 14.39C9.7 14.2 9.76 14.02 9.83 13.84C9.9 1=
3.66 10 13.5 10.1 13.34C10.21 13.18 10.33 13.03 10.47 12.89C10.6 12.76 10.7=
5 12.63 10.91 12.53C11.07 12.42 11.24 12.33 11.42 12.26C11.6 12.18 11.78 12=
.13 11.97 12.09C12.16 12.05 12.35 12.03 12.55 12.03L15.28 12.03C15.42 12.03=
 15.56 12.02 15.69 11.99C15.82 11.97 15.96 11.93 16.08 11.87C16.21 11.82 16=
.33 11.76 16.44 11.68C16.56 11.61 16.66 11.52 16.76 11.42C16.85 11.33 16.94=
 11.22 17.02 11.11C17.09 11 17.16 10.88 17.21 10.75C17.26 10.62 17.3 10.5 1=
7.33 10.36C17.35 10.23 17.37 10.09 17.37 9.96C17.37 9.38 17.28 8.83 17.11 8=
.28C16.94 7.74 16.69 7.23 16.36 6.76L14.73 4.44C14.53 4.16 14.3 3.91 14.04 =
3.69C13.79 3.46 13.51 3.27 13.2 3.11C12.9 2.96 12.58 2.84 12.25 2.76C11.92 =
2.68 11.58 2.63 11.24 2.63L8.4 2.64Z" fill=3D"currentColor" fill-opacity=3D=
"1.000000" fill-rule=3D"nonzero"></path></g></svg></div></div></div><div st=
yle=3D"flex: 1 1 0%;"></div></div></div></div><div class=3D"e886deb9"><div =
class=3D"e214291b"><svg width=3D"18" height=3D"18" viewBox=3D"0 0 18 18" fi=
ll=3D"none" xmlns=3D"http://www.w3.org/2000/svg"><path d=3D"M5.856 17.121a.=
979.979 0 0 1-.327-.06.839.839 0 0 1-.283-.177.739.739 0 0 1-.187-.255.724.=
724 0 0 1-.07-.303l-.02-1.609a4.663 4.663 0 0 1-1.446-.455 4.252 4.252 0 0 =
1-.637-.401c-.199-.146-.385-.31-.553-.492a4.442 4.442 0 0 1-.45-.577 4.303 =
4.303 0 0 1-.327-.637 3.823 3.823 0 0 1-.206-.686 3.729 3.729 0 0 1-.064-.7=
04V6.478c0-.261.025-.516.077-.771a4.43 4.43 0 0 1 .244-.747 4.062 4.062 0 0=
 1 .932-1.28c.2-.183.418-.347.65-.493.23-.145.482-.267.739-.364a4.21 4.21 0=
 0 1 .81-.225c.27-.054.553-.078.835-.078H8.55c.103 0 .2.018.29.054a.7.7 0 0=
 1 .411.376.667.667 0 0 1-.161.766.736.736 0 0 1-.25.151.764.764 0 0 1-.29.=
055H5.573c-.186 0-.366.012-.54.049-.18.03-.353.079-.52.145-.167.061-.328.14=
-.482.237-.148.091-.29.2-.418.316a2.897 2.897 0 0 0-.347.388c-.097.14-.187.=
286-.257.444a2.473 2.473 0 0 0-.206.977v4.287c0 .17.013.333.051.503a2.549 2=
.549 0 0 0 .772 1.33 2.721 2.721 0 0 0 .913.559c.167.066.347.115.527.152.18=
.03.36.048.546.048a.904.904 0 0 1 .61.23.848.848 0 0 1 .194.262.84.84 0 0 1=
 .07.303l.007.99 1.915-1.293a2.877 2.877 0 0 1 1.64-.492h2.372c.186 0 .366-=
.018.54-.048.18-.03.353-.08.52-.146.168-.067.329-.146.483-.237.148-.091.29-=
.2.418-.316.128-.121.244-.249.347-.388a2.8 2.8 0 0 0 .257-.444 2.47 2.47 0 =
0 0 .206-.977V8.585a.646.646 0 0 1 .225-.492.679.679 0 0 1 .244-.152.814.81=
4 0 0 1 .585 0c.09.03.174.085.244.152a.657.657 0 0 1 .225.492V10.8c0 .261-.=
032.516-.083.771a4.192 4.192 0 0 1-.245.74c-.109.244-.244.468-.398.687a3.73=
5 3.735 0 0 1-.534.6c-.2.183-.418.347-.65.493a4.134 4.134 0 0 1-.738.364 4.=
7 4.7 0 0 1-.81.225c-.27.054-.553.079-.836.079h-1.877c-.604 0-1.144.164-1.6=
33.491l-2.54 1.713a.913.913 0 0 1-.514.157z" fill=3D"currentColor"></path><=
path d=3D"M15.866 4.125h-4.174c-.41 0-.741.313-.741.7 0 .387.332.7.741.7h4.=
174c.41 0 .742-.313.742-.7 0-.387-.332-.7-.742-.7z" fill=3D"currentColor"><=
/path><path d=3D"M14.537 2.932c0-.396-.34-.717-.759-.717s-.758.32-.758.717v=
3.786c0 .396.34.717.758.717.42 0 .76-.321.76-.717V2.932z" fill=3D"currentCo=
lor"></path></svg><span>New chat</span></div></div><div class=3D"cbcaa82c">=
<div class=3D"aaff8b8f"><div class=3D"e98de67b"><svg xmlns=3D"http://www.w3=
.org/2000/svg" width=3D"16" height=3D"9" viewBox=3D"0 0 16 9" fill=3D"none"=
><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M1.00008 2.41429C0.=
609551 2.02376 0.609551 1.3906 1.00008 1.00008C1.3906 0.609551 2.02376 0.60=
9551 2.41429 1.00007L8.00008 6.58586L13.5859 1.00008C13.9764 0.609551 14.60=
96 0.609551 15.0001 1.00008C15.3906 1.3906 15.3906 2.02376 15.0001 2.41429L=
8.8486 8.56576C8.37997 9.03439 7.62018 9.03439 7.15155 8.56576L1.00008 2.41=
429Z" fill=3D"currentColor"></path></svg></div><div class=3D"cefa5c26"><div=
 class=3D"dd442025 b699646e"><div class=3D"fad49dec"><textarea id=3D"chat-i=
nput" class=3D"c92459f0" placeholder=3D"Message DeepSeek" rows=3D"2"></text=
area><div class=3D"b13855df">
</div></div><div class=3D"ec4f5d61"><div role=3D"button" class=3D"ds-button=
 ds-button--primary ds-button--filled ds-button--rect ds-button--m d9f56c96=
" tabindex=3D"0" style=3D"--ds-button-color: #fff; --button-text-color: #4c=
4c4c; --button-border-color: rgba(0, 0, 0, 0.12); --ds-button-hover-color: =
#E0E4ED;"><div class=3D"ds-button__icon"><span style=3D"transition: none; t=
ransform: rotate(0deg);"><div class=3D"ds-icon" style=3D"font-size: 19px; w=
idth: 19px; height: 19px; color: rgb(76, 76, 76);"><svg width=3D"20" height=
=3D"20" viewBox=3D"0 0 20 20" fill=3D"none" xmlns=3D"http://www.w3.org/2000=
/svg"><path d=3D"M2.656 17.344c-1.016-1.015-1.15-2.75-.313-4.925.325-.825.7=
3-1.617 1.205-2.365L3.582 10l-.033-.054c-.5-.799-.91-1.596-1.206-2.365-.836=
-2.175-.703-3.91.313-4.926.56-.56 1.364-.86 2.335-.86 1.425 0 3.168.636 4.9=
57 1.756l.053.034.053-.034c1.79-1.12 3.532-1.757 4.957-1.757.972 0 1.776.3 =
2.335.86 1.014 1.015 1.148 2.752.312 4.926a13.892 13.892 0 0 1-1.206 2.365l=
-.034.054.034.053c.5.8.91 1.596 1.205 2.365.837 2.175.704 3.911-.311 4.926-=
.56.56-1.364.861-2.335.861-1.425 0-3.168-.637-4.957-1.757L10 16.415l-.053.0=
33c-1.79 1.12-3.532 1.757-4.957 1.757-.972 0-1.776-.3-2.335-.86zm13.631-4.3=
99c-.187-.488-.429-.988-.71-1.492l-.075-.132-.092.12a22.075 22.075 0 0 1-3.=
968 3.968l-.12.093.132.074c1.308.734 2.559 1.162 3.556 1.162.563 0 1.006-.1=
38 1.298-.43.3-.3.436-.774.428-1.346-.008-.575-.159-1.264-.449-2.017zm-6.34=
5 1.65l.058.042.058-.042a19.881 19.881 0 0 0 4.551-4.537l.043-.058-.043-.05=
8a20.123 20.123 0 0 0-2.093-2.458 19.732 19.732 0 0 0-2.458-2.08L10 5.364l-=
.058.042A19.883 19.883 0 0 0 5.39 9.942L5.348 10l.042.059c.631.874 1.332 1.=
695 2.094 2.457a19.74 19.74 0 0 0 2.458 2.08zm6.366-10.902c-.293-.293-.736-=
.431-1.298-.431-.998 0-2.248.429-3.556 1.163l-.132.074.12.092a21.938 21.938=
 0 0 1 3.968 3.968l.092.12.074-.132c.282-.504.524-1.004.711-1.492.29-.753.4=
42-1.442.45-2.017.007-.572-.129-1.045-.429-1.345zM3.712 7.055c.202.514.44 1=
.013.712 1.493l.074.13.092-.119a21.94 21.94 0 0 1 3.968-3.968l.12-.092-.132=
-.074C7.238 3.69 5.987 3.262 4.99 3.262c-.563 0-1.006.138-1.298.43-.3.301-.=
436.774-.428 1.346.007.575.159 1.264.448 2.017zm0 5.89c-.29.753-.44 1.442-.=
448 2.017-.008.572.127 1.045.428 1.345.293.293.736.431 1.298.431.997 0 2.24=
7-.428 3.556-1.162l.131-.074-.12-.093a21.94 21.94 0 0 1-3.967-3.968l-.093-.=
12-.074.132a11.712 11.712 0 0 0-.71 1.492z" fill=3D"currentColor" stroke=3D=
"currentColor" stroke-width=3D".1"></path><path d=3D"M10.706 11.704A1.843 1=
.843 0 0 1 8.155 10a1.845 1.845 0 1 1 2.551 1.704z" fill=3D"currentColor" s=
troke=3D"currentColor" stroke-width=3D".2"></path></svg></div></span></div>=
<span class=3D"ad0c98fd">DeepThink (R1)</span></div><div role=3D"button" cl=
ass=3D"ds-button ds-button--primary ds-button--filled ds-button--rect ds-bu=
tton--m d9f56c96" tabindex=3D"0" style=3D"--ds-button-color: #fff; --button=
-text-color: #4c4c4c; --button-border-color: rgba(0, 0, 0, 0.12); --ds-butt=
on-hover-color: #E0E4ED;"><div class=3D"ds-button__icon"><span style=3D"tra=
nsition: none; transform: rotate(0deg);"><div class=3D"ds-icon" style=3D"fo=
nt-size: 17px; width: 17px; height: 17px; color: rgb(76, 76, 76);"><svg wid=
th=3D"20" height=3D"20" viewBox=3D"0 0 20 20" fill=3D"none" xmlns=3D"http:/=
/www.w3.org/2000/svg"><circle cx=3D"10" cy=3D"10" r=3D"9" stroke=3D"current=
Color" stroke-width=3D"1.8"></circle><path d=3D"M10 1c1.657 0 3 4.03 3 9s-1=
.343 9-3 9M10 19c-1.657 0-3-4.03-3-9s1.343-9 3-9M1 10h18" stroke=3D"current=
Color" stroke-width=3D"1.8"></path></svg></div></span></div><span class=3D"=
ad0c98fd">Search</span></div><div class=3D"bf38813a"><div class=3D"f02f0e25=
"><div class=3D"ds-icon" style=3D"font-size: 23px; width: 23px; height: 23p=
x;"><svg xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 14 20" fill=3D=
"none"><path d=3D"M7 20c-1.856-.002-3.635-.7-4.947-1.94C.74 16.819.003 15.1=
37 0 13.383V4.828a4.536 4.536 0 0 1 .365-1.843 4.75 4.75 0 0 1 1.087-1.567A=
5.065 5.065 0 0 1 3.096.368a5.293 5.293 0 0 1 3.888 0c.616.244 1.174.6 1.64=
3 1.05.469.45.839.982 1.088 1.567.25.586.373 1.212.364 1.843v8.555a2.837 2.=
837 0 0 1-.92 2.027A3.174 3.174 0 0 1 7 16.245c-.807 0-1.582-.3-2.158-.835a=
2.837 2.837 0 0 1-.92-2.027v-6.22a1.119 1.119 0 1 1 2.237 0v6.22a.777.777 0=
 0 0 .256.547.868.868 0 0 0 .585.224c.219 0 .429-.08.586-.224a.777.777 0 0 =
0 .256-.546V4.828A2.522 2.522 0 0 0 7.643 3.8a2.64 2.64 0 0 0-.604-.876 2.8=
16 2.816 0 0 0-.915-.587 2.943 2.943 0 0 0-2.168 0 2.816 2.816 0 0 0-.916.5=
87 2.64 2.64 0 0 0-.604.876 2.522 2.522 0 0 0-.198 1.028v8.555c0 1.194.501 =
2.339 1.394 3.183A4.906 4.906 0 0 0 7 17.885a4.906 4.906 0 0 0 3.367-1.319 =
4.382 4.382 0 0 0 1.395-3.183v-6.22a1.119 1.119 0 0 1 2.237 0v6.22c-.002 1.=
754-.74 3.436-2.052 4.677C10.635 19.3 8.856 19.998 7 20z" fill=3D"currentCo=
lor"></path></svg></div></div><input type=3D"file" multiple=3D"" accept=3D"=
.pdf,.png,.jpg,.jpeg,.svg,.svgz,.bmp,.gif,.webp,.ico,.xbm,.dib,.pjp,.tif,.p=
jpeg,.avif,.apng,.tiff,.jfif,.txt,.md,.csv,.tsv,.html,.json,.log,.dot,.go,.=
h,.c,.cpp,.cxx,.cc,.cs,.java,.js,.css,.jsp,.php,.py,.py3,.asp,.yaml,.yml,.i=
ni,.conf,.ts,.tsx,.doc,.docx,.ppt,.pptx,.xls,.xlsx,.abap,.asc,.ash,.ampl,.m=
od,.g4,.apib,.apl,.dyalog,.asax,.ascx,.ashx,.asmx,.aspx,.axd,.dats,.hats,.s=
ats,.as,.adb,.ada,.ads,.agda,.als,.apacheconf,.vhost,.cls,.applescript,.scp=
t,.arc,.ino,.asciidoc,.adoc,.aj,.asm,.a51,.inc,.nasm,.aug,.ahk,.ahkl,.au3,.=
awk,.auk,.gawk,.mawk,.nawk,.bat,.cmd,.befunge,.bison,.bb,.decls,.bmx,.bsv,.=
boo,.b,.bf,.brs,.bro,.cats,.idc,.w,.cake,.cshtml,.csx,.c++,.cp,.h++,.hh,.hp=
p,.hxx,.inl,.ipp,.tcc,.tpp,.c-objdump,.chs,.clp,.cmake,.in,.cob,.cbl,.ccp,.=
cobol,.cpy,.capnp,.mss,.ceylon,.chpl,.ch,.ck,.cirru,.clw,.icl,.dcl,.click,.=
clj,.boot,.cl2,.cljc,.cljs,.hl,.cljscm,.cljx,.hic,.coffee,._coffee,.cjsx,.c=
son,.iced,.cfm,.cfml,.cfc,.lisp,.asd,.cl,.l,.lsp,.ny,.podsl,.sexp,.cps,.coq=
,.v,.cppobjdump,.c++-objdump,.c++objdump,.cpp-objdump,.cxx-objdump,.creole,=
.cr,.feature,.cu,.cuh,.cy,.pyx,.pxd,.pxi,.d,.di,.d-objdump,.com,.dm,.zone,.=
arpa,.darcspatch,.dpatch,.dart,.diff,.patch,.dockerfile,.djs,.dylan,.dyl,.i=
ntr,.lid,.E,.ecl,.eclxml,.sch,.brd,.epj,.e,.ex,.exs,.elm,.el,.emacs,.deskto=
p,.em,.emberscript,.erl,.es,.escript,.hrl,.xrl,.yrl,.fs,.fsi,.fsx,.fx,.flux=
,.f90,.f,.f03,.f08,.f77,.f95,.for,.fpp,.factor,.fy,.fancypack,.fan,.fth,.4t=
h,.forth,.fr,.frt,.ftl,.g,.gco,.gcode,.gms,.gap,.gd,.gi,.tst,.s,.ms,.glsl,.=
fp,.frag,.frg,.fsh,.fshader,.geo,.geom,.glslv,.gshader,.shader,.vert,.vrx,.=
vsh,.vshader,.gml,.kid,.ebuild,.eclass,.po,.pot,.glf,.gp,.gnu,.gnuplot,.plo=
t,.plt,.golo,.gs,.gst,.gsx,.vark,.grace,.gradle,.gf,.graphql,.gv,.man,.1in,=
.1m,.1x,.3in,.3m,.3qt,.3x,.me,.n,.rno,.roff,.groovy,.grt,.gtpl,.gvy,.gsp,.h=
cl,.tf,.hlsl,.fxh,.hlsli,.htm,.st,.xht,.xhtml,.mustache,.jinja,.eex,.erb,.d=
eface,.phtml,.http,.haml,.handlebars,.hbs,.hb,.hs,.hsc,.hx,.hxsl,.hy,.pro,.=
dlm,.ipf,.cfg,.prefs,.properties,.irclog,.weechatlog,.idr,.lidr,.ni,.i7x,.i=
ss,.io,.ik,.thy,.ijs,.flex,.jflex,.geojson,.lock,.topojson,.json5,.jsonld,.=
jq,.jsx,.jade,.j,._js,.bones,.es6,.jake,.jsb,.jscad,.jsfl,.jsm,.jss,.njs,.p=
ac,.sjs,.ssjs,.sublime-build,.sublime-commands,.sublime-completions,.sublim=
e-keymap,.sublime-macro,.sublime-menu,.sublime-mousemap,.sublime-project,.s=
ublime-settings,.sublime-theme,.sublime-workspace,.sublime_metrics,.sublime=
_session,.xsjs,.xsjslib,.jl,.ipynb,.krl,.kicad_pcb,.kit,.kt,.ktm,.kts,.lfe,=
.ll,.lol,.lsl,.lslp,.lvproj,.lasso,.las,.lasso8,.lasso9,.ldml,.latte,.lean,=
.hlean,.less,.lex,.ly,.ily,.m,.ld,.lds,.liquid,.lagda,.litcoffee,.lhs,.ls,.=
_ls,.xm,.x,.xi,.lgt,.logtalk,.lookml,.lua,.fcgi,.nse,.pd_lua,.rbxs,.wlua,.m=
umps,.m4,.mcr,.mtml,.muf,.mak,.mk,.mkfile,.mako,.mao,.markdown,.mkd,.mkdn,.=
mkdown,.ron,.mask,.mathematica,.cdf,.ma,.map,.mt,.nb,.nbp,.wl,.wlt,.matlab,=
.maxpat,.maxhelp,.maxproj,.mxt,.pat,.mediawiki,.wiki,.moo,.metal,.minid,.dr=
uby,.duby,.mir,.mirah,.mo,.mms,.mmk,.monkey,.moon,.myt,.ncl,.nl,.nsi,.nsh,.=
axs,.axi,.nlogo,.nginxconf,.nim,.nimrod,.ninja,.nit,.nix,.nu,.numpy,.numpyw=
,.numsc,.ml,.eliom,.eliomi,.ml4,.mli,.mll,.mly,.objdump,.mm,.sj,.omgrofl,.o=
pa,.opal,.opencl,.p,.scad,.org,.ox,.oxh,.oxo,.oxygene,.oz,.pwn,.aw,.ctp,.ph=
p3,.php4,.php5,.php6,.php7,.php8,.phps,.phpt,.pls,.pck,.pkb,.pks,.plb,.plsq=
l,.sql,.pov,.pan,.psc,.parrot,.pasm,.pir,.pas,.dfm,.dpr,.lpr,.pp,.pl,.al,.c=
gi,.perl,.ph,.plx,.pm,.pod,.psgi,.t,.6pl,.6pm,.nqp,.p6,.p6l,.p6m,.pl6,.pm6,=
.pkl,.pig,.pike,.pmod,.pogo,.pony,.ps,.eps,.ps1,.psd1,.psm1,.pde,.prolog,.y=
ap,.spin,.proto,.pub,.pd,.pb,.pbi,.purs,.bzl,.gyp,.lmi,.pyde,.pyi,.pyp,.pyt=
,.pyw,.rpy,.tac,.wsgi,.xpy,.pytb,.qml,.qbs,.pri,.r,.rd,.rsx,.raml,.rdoc,.rb=
bas,.rbfrm,.rbmnu,.rbres,.rbtbar,.rbuistate,.rhtml,.rmd,.rkt,.rktd,.rktl,.s=
crbl,.rl,.raw,.reb,.r2,.r3,.rebol,.red,.reds,.cw,.rs,.rsh,.robot,.rg,.rb,.b=
uilder,.gemspec,.god,.irbrc,.jbuilder,.mspec,.pluginspec,.podspec,.rabl,.ra=
ke,.rbuild,.rbw,.rbx,.ru,.ruby,.thor,.watchr,.sas,.scss,.smt2,.smt,.sparql,=
.rq,.sqf,.hqf,.cql,.ddl,.prc,.tab,.udf,.viw,.db2,.ston,.sage,.sagews,.sls,.=
sass,.scala,.sbt,.sc,.scaml,.scm,.sld,.sps,.ss,.sci,.sce,.self,.sh,.bash,.b=
ats,.command,.ksh,.tmux,.tool,.zsh,.sh-session,.shen,.sl,.slim,.smali,.tpl,=
.sp,.sma,.nut,.stan,.ML,.fun,.sig,.sml,.do,.ado,.doh,.ihlp,.mata,.matah,.st=
hlp,.styl,.scd,.swift,.sv,.svh,.vh,.toml,.txl,.tcl,.adp,.tm,.tcsh,.csh,.tex=
,.aux,.bbx,.bib,.cbx,.dtx,.ins,.lbx,.ltx,.mkii,.mkiv,.mkvi,.sty,.toc,.tea,.=
no,.textile,.thrift,.tu,.ttl,.twig,.upc,.anim,.asset,.mat,.meta,.prefab,.un=
ity,.uno,.uc,.ur,.urs,.vcl,.vhdl,.vhd,.vhf,.vhi,.vho,.vhs,.vht,.vhw,.vala,.=
vapi,.veo,.vim,.vb,.bas,.frm,.frx,.vba,.vbhtml,.vbs,.volt,.vue,.owl,.webidl=
,.x10,.xc,.xml,.ant,.axml,.ccxml,.clixml,.cproject,.csl,.csproj,.ct,.dita,.=
ditamap,.ditaval,.config,.dotsettings,.filters,.fsproj,.fxml,.glade,.grxml,=
.iml,.ivy,.jelly,.jsproj,.kml,.launch,.mdpolicy,.mxml,.nproj,.nuspec,.odd,.=
osm,.plist,.props,.ps1xml,.psc1,.pt,.rdf,.rss,.scxml,.srdf,.storyboard,.stT=
heme,.sublime-snippet,.targets,.tmCommand,.tml,.tmLanguage,.tmPreferences,.=
tmSnippet,.tmTheme,.ui,.urdf,.ux,.vbproj,.vcxproj,.vssettings,.vxml,.wsdl,.=
wsf,.wxi,.wxl,.wxs,.x3d,.xacro,.xaml,.xib,.xlf,.xliff,.xmi,.dist,.xproj,.xs=
d,.xul,.zcml,.xsp-config,.metadata,.xpl,.xproc,.xquery,.xq,.xql,.xqm,.xqy,.=
xs,.xslt,.xsl,.xojo_code,.xojo_menu,.xojo_report,.xojo_script,.xojo_toolbar=
,.xojo_window,.xtend,.reek,.rviz,.sublime-syntax,.syntax,.yaml-tmlanguage,.=
yang,.y,.yacc,.yy,.zep,.zimpl,.zmpl,.zpl,.ec,.eh,.edn,.fish,.mu,.nc,.ooc,.r=
st,.rest,.wisp,.prg,.prw,.gitignore,.gitkeep,.gitmodules,.example,.avifs,.b=
lp,.bufr,.bw,.cur,.dcx,.dds,.emf,.fit,.fits,.flc,.fli,.ftc,.ftu,.gbr,.grib,=
.h5,.hdf,.hif,.icb,.icns,.iim,.im,.j2c,.j2k,.jp2,.jpc,.jpe,.jpf,.jpx,.mpeg,=
.mpg,.msp,.pbm,.pcd,.pcx,.pfm,.pgm,.pnm,.ppm,.psd,.pxr,.qoi,.ras,.rgb,.rgba=
,.sgi,.tga,.vda,.vst,.wmf,.xpm" style=3D"display: none;"><div role=3D"butto=
n" aria-disabled=3D"true" class=3D"f6d670 bcc55ca1"><div class=3D"f286936b"=
><div class=3D"ds-icon" style=3D"font-size: 16px; width: 16px; height: 16px=
;"><svg width=3D"14" height=3D"16" viewBox=3D"0 0 14 16" fill=3D"none" xmln=
s=3D"http://www.w3.org/2000/svg"><path fill-rule=3D"evenodd" clip-rule=3D"e=
venodd" d=3D"M7 16c-.595 0-1.077-.462-1.077-1.032V1.032C5.923.462 6.405 0 7=
 0s1.077.462 1.077 1.032v13.936C8.077 15.538 7.595 16 7 16z" fill=3D"curren=
tColor"></path><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M.315=
 7.44a1.002 1.002 0 0 1 0-1.46L6.238.302a1.11 1.11 0 0 1 1.523 0c.421.403.4=
21 1.057 0 1.46L1.838 7.44a1.11 1.11 0 0 1-1.523 0z" fill=3D"currentColor">=
</path><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M13.685 7.44a=
1.11 1.11 0 0 1-1.523 0L6.238 1.762a1.002 1.002 0 0 1 0-1.46 1.11 1.11 0 0 =
1 1.523 0l5.924 5.678c.42.403.42 1.056 0 1.46z" fill=3D"currentColor"></pat=
h></svg></div></div></div></div></div></div></div></div><div class=3D"fcaa6=
3f8">AI-generated, for reference only</div></div></div></div></div></div></=
div></div></div></div><div id=3D"cf-overlay" style=3D"position: fixed; inse=
t: 0px; background-color: rgba(0, 0, 0, 0.7); border: 1px solid grey; z-ind=
ex: 10000; display: none;"><p style=3D"color: white; text-align: center; ma=
rgin-top: 50vh;">One more step before you proceed...</p><div style=3D"displ=
ay: flex; flex-wrap: nowrap; align-items: center; justify-content: center;"=
 id=3D"cf-turnstile"></div></div><div class=3D"ds-notification-container ds=
-theme"></div><div></div><div id=3D"compose-ai-general-snackbar-root"></div=
><div id=3D"Chat-Plugin-Root" class=3D"compose-root-component"></div><ifram=
e id=3D"intercom-frame" style=3D"position: absolute !important; opacity: 0 =
!important; width: 1px !important; height: 1px !important; top: 0 !importan=
t; left: 0 !important; border: none !important; display: block !important; =
z-index: -1 !important; pointer-events: none;" aria-hidden=3D"true" tabinde=
x=3D"-1" title=3D"Intercom"></iframe><div class=3D"intercom-lightweight-app=
"></div><div id=3D"InlineText-Plugin-Root" class=3D"compose-root-component"=
><div class=3D"compose-root-component"></div></div><div id=3D"intellisense-=
root"></div></body></html>
------MultipartBoundary--fdOnjK2T5C2RpZV2JgMgfa0Io4YenUpag4Gm1ntYXL----
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: https://lh3.googleusercontent.com/a/ACg8ocJNVyVeFB5I8-pIjRqQmiRmHjWl5_shh7sWttP-wjA3I833VfXhHw=s96-c

/9j/4AAQSkZJRgABAQAAAQABAAD/4QAqRXhpZgAASUkqAAgAAAABADEBAgAHAAAAGgAAAAAAAABQ
aWNhc2EAAP/bAIQAAwICCAgICAgJCAoICgoICAoJCAgKCQgICQgICAgICAgICAgICQgQCAgIDQoL
FggICAsKDQoICQ0NFggNCAgJCAEDBAQGBQYKBgYKDg4KDg0NDQ8PDQ8ODg8NDQ8NDRAPDw4ODhAL
DQ4PDw4PDQ4NDQ0PDQ8PERALDw0PDw4PEA0Q/8AAEQgAYABgAwERAAIRAQMRAf/EAB0AAQADAAID
AQAAAAAAAAAAAAAGBwgFCQIDBAH/xAAyEAACAgEDAwMCBAUFAQAAAAABAgMEEQAFEgYTIQcIIhQx
IyQyQQkzQlFxFlKBgtEV/8QAGgEBAAMBAQEAAAAAAAAAAAAAAAMEBQIBBv/EADYRAAICAQIEAwYE
BAcAAAAAAAABAhEDITEEEkFRImFxMqGxwdHwE4GR4QVCcrIUIzNSYpKi/9oADAMBAAIRAxEAPwDt
T0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0BT3rN7uendgbt7jukMM5
44pxcrNw888PytZZJgr/ALPIioT++gM8br/Fh23gktXY90tRyW2qQn8nFLNZHLEcVUW5bZL4IHKB
SW+H6/hoCzqXvlgiVX3PZdz2lCB+JKtO4MkgBfp6FyfcCfOfhRYBQxbiBnQF2+m3q1tm8QGztt6C
9ECFdq8iuY3IDduZP5iS8SD2plVwCMgZ0BLdANANANANANANAYJ9y/uD6i3/AHKTpbpFO1hJBuG/
M/ajgVZXrypXnQO8apOkkJsxo07zRTLXA+mkl0BYftv/AIcGybGjS2uW9XZSzWLd1QY3aQDuqtf5
AxO3y42nnYsS2QTgAfR76W7C9F9pURR110/HxCJxWN/qwQgK4XwMckwcEgYBIIGotwnjVHaUqqBT
zMhAQL+/Mt8eP+fGvG0tWdRi5tRirb6LVmVvUb247RPdjv7DN/p7esTNBuFGu0NG4x/EkrbhD2lp
zw2G+Z4gzMYi4MnaKNGskW6+/wBS5Lgs0YPI0qVXqrV943a7O127k49sPuTfeDd2zca67fvm1ukW
50VJMTcwDFeouxJalaXDgFmePmoYurwTTylEvrQDQDQDQEC3z1ZiDS164E1pWdBFIezGrryHKR3w
TGCD/IWRyPIGMsK8sy2jv9/ehs4f4bNqOTN4cbSdrxOtNkuv9TivMp3169xFnZ9o3Se1IGkWClBV
+iheGw9vcJrMGK6Sz2QZ41QuqksOUfy4/iIjHKTk1Lsvn6nPGYMEMcMmFSVymqlJS0ShW0Yd30+p
zPoP0uvT+3wUFrxy7lNFFZ3HsYgqQzPEsccJm7ZK1KsaJUhhWKSbsV4yQcyynqWSnypW/h6kWDg+
eH4uSXLC6XVyelqMdLq7bbil3vQmlT1Ps9wqVhk+RUIqWYU5JnupFcdZK0sqAN+GgQgoyv2uLMsS
yyutPf8AHVMuz4DFyKXiWm7cZPXZuCalFPu73TV7FRe9Pf4bFPpyYHh2OtenDKshCvCy2WDLKASo
IVuXLkUZCHUurIzWIzTV/aMnLw88clCrvatpJ7V8K3T0aT0LTvbo9t4pD4aWQCnDKCEhjKlzZlQ4
JsLCGl88SmBXHbLTSTVrcqffby8/Wvp3NqONYFKC2ivG1vJ3XKn0jdR637etRSlfTi7asnCOeGax
92cyxSW3K/csVPPAOfggWNQSoCL8dSx5LpNX7zOz/wCJceaUZRh0VNRXy/N23u22Zm9+nTcu0z7Z
1xRHGxtMqQ7mich9bstl+EkEgRSWeOVgF54jQztKxHYRknM00zv/AKjRpDBJBwmNhEki5OUj7MnD
jM7LHI3BmdFCqhZ3kVR/UyQzycvqX+F4X8a27UVu0rd03SVrom3rSSbZ9HTXVM008kUkCRcYkcMk
plyWeRSPMMX2AB/7fvka9jNt00eZ+HhCCnCTdtrVVsk+77kp1KURoCCeoUKxmiFAHK+5OceSad6U
5/yR/wAD+2M6r5dOX1+TNfgvEsrfTGv78aMee4nb5L/WfR21OPypuruEy/1NY2yG7YqI32yqqk4I
OSVcDwPiGP2pei+Y4v8A0MX9WX3LF9fiacuTOkG4Oo/G724uPALM6PKsGcfciBYVCnz2wg+Q8NFq
oya3t/t7qLyUZZcMX7HLiXomlzf+nJvzslnVcEUdCDs44JJREBXyBG08MPx8jIaFmX7+VYg+CdTT
pQVeXxRn8O5T4if4m7WTmvuoyevo0mZH9700MQ2p5cJFZ3XbIpx/TI1W2JK7ffPhHsIQVyFOD+kK
KWa1bXWLv8mvlZ9N/C+XIoQnq4ZVKF9JTjJV/wB442td1aNMb102luetGSAMysH4pJhFVSeCSK0f
ePxAkZW4oZOI5FGSxKCk0jEwcRLBjySXkqtrXzap1vatW6vS0/du2wIkxpue9C0IkjWbBZO2/bZB
IADhcoyOfxUbnhiojEPrir5XtX6ffQ5hmk4LPHwyUuV1s7Vp1+qktmq0u74H1Bprd6Z3mlclOGqb
lSMpBaU8o5Iqz8fmzWOLRnwCWk84BOB3CdR8XRtfT8yDiuHU86WFUpRjLyVq5ekU79EVn7YumzN0
vtNqYORBR2yOHvqqyN9C0USSPHn4xwopRISRxd7EjdxpEkWCudOcvL79F0/N9TWeVcPkXDYn0knu
nTi1qukpaOadteGH8rT0H0pKfq3BGMVlGf38TSeDnz4JPg+RnH3BZrEfa/L5mLnX+Sn/AMn/AGom
+pzMGgKu6m2u/PYy8UjxQWDJWWD6eMODWMXKR5LQlLqzyADEceDlg/FRqpJSlLVaJ6VXb1N/Bl4f
FiqEkpSjUnLmdeO9Eo1Wke77NGV/WW/JW626XmerwtmvcSgk7KWlJq7jFYjHYmathhLBgS2Y3ByR
y4JFY4rIm5RT92tX531LKfCTgsWWcWk201+InHm5L/kcX7OzXdp60bN3jpJ2dpoWVXfiZY5ARHIy
qEDhk5MkvEKvcxIOKKMHBJsShraMbFxEaUMidK6a3Wt1Wlrd1pq3qVJ6iW49phSe3ZjpwV1Msixv
YtrBWj8BoUlCRRu5/LpFBVMshk4RceEmari4tL6vT4Ltt6G9izRzKcknK9LajHmk+9XKX+53KlXi
u0Yc9YaW69a0qu6yO22UZOpdlo7PG0ayODasSUrG42I+YV5MvCcRyCI9ntoXVDZnkhHmk72qvW9/
kVuJyrhsGOON1kclk21iop8v6tya8qa0kaW9JvXOzWuHYd4MdXd6b92r35CIdxqmKRS8UwRWeNou
7iysLEBAZ1WzWtRHjxQpPdbPo/pp9UTKOPiebJD2Zp80FXNB2n4U+XmjdcrVaeGXKy/am7z2ZWmW
AvI6KkaoJPpY40ywL3JIo0PJ2JZoVL8eKosvaZ5O03J3Wvu/UrTxY8UFByqKdu65m32gm2qS0t1u
21dKvPcXjbNt3GV2lIi2u1Osy5ih+tlDRuTJho07x4RcmJeOGYpGYw8jNxOFaa7Xp36+79i5wnEq
aU04LxqNTaXhS8NvRtJ6ut5JNptI8PRvpqxR2HaKdlbUIjrUI5UTt/TxzymIlAZMztCJ248pC8hz
kmXyrevRU7rTsRRalklOP4bnUpOnNt6NyacnJ3u7b9+pM99vTIztXewsv0sviKOF14RlcEmWNz4Z
h5TJGSDkBSqTafhu6fY8wQhJJZVHl51u5LV+jXRdS5azEquc5wM5xnOPOceM/wCNXUfMvdnt16eD
QGPP4kXQL/Q7Z1LBA09jp6+l3gjMjtUZo+/grnxDMlec8gR2YZgeIdjoC2fUT1gRKlbc4rv0+2y7
dNbkvRxLMEiIrSQSdyQSQgPG74zC55BVwxdV1WyuVpRuqeyvsbXAY8Esc5ZUnJShSlLlTT5ruqe6
jtJbszR0l6JzddTRblZsWa+wxT92pXdXWzurgMrXLMk55lG/QuIUijiBjg5o7yGKGOTu9F56t/Jf
dJGhn43BjSaanNLRRXLjhvprUpd3Sjb1lKVtF1+7SCChS6ZrQoscf+r+mYoowMjxuCzEDlklyqu3
NiWLZbPLzq5GKiqR81lyzyzeSbuT3+9kuiS0XQlnui9slbqSpEDI1O/TkE+2bnCSlmnaUqwKyKOX
ZkZVDJ5/SjjDxRsvRC1e5E/ar7m7F6WfYN8jWlv9BcWIfCxX4B+ncaJwFaORcMyRjCluQ4q3GMen
A+uu5Dqje6nS1VlmpUbMF7qWQFXQJXdZqGzupR1L3bIWR0ypEdd8EmOVABpPrjZJLEAjjCcu9Wf8
QkLiGxFMfsrHyF+2P/NR5IuSpd18S7wmaOHJzSuuWS038UWvLucXsfSdhbAklMRQQTRlU5lmMrwt
k8goAwh+2fv+2TriMGpW62JcvEY3i5IJ3zJ260pS+pNNTmafugGgPm3Lbo5o5IZUWSORGSSNwGR4
3Uq6Mp8FWUkEHwQToDrP6/8ARK90vdqw7q1vd+iqk0s9aGshnl2x3l5oNwjQCd6lQs7d6V5USNOU
XYn7UbBZ2F+mHqTtm6VI7G1269utxVUaqyskYCjETRrhkZFwOzIisuMELjGgKV96KO9jouJDgnrP
bXJGD+HDU3BpR5/3Rlhn7gE4wcaA0J1F1PXqRmaxNHAgIHKRgoLH7IufJdj4CKCxPgAk40BhH1+o
WOuNy25eno56Em3Wo5W6rAaOGOJTPFPVj4TRs8sZLMK2HlWUyQzDbUsTyygbH9GPRqnsVFKNQOwz
zns2HM1u5ZZVWS1cnb5PPIAoycKqKkaCOOONFAnegGgGgGgGgGgPwjQFO9Xe0Pp65Obf/wA9adok
k3drln2q4xb9RksbdLXkfPjxMXBIB+6qQBDN89jFaxLSkk6h6hZaNn6mpE+4pOIrGGXuCxYqS3T8
WK8XtMoRmUYVmVgJLtHsw2BLUV2xXn3W1ECI7G83Lm7MnIgkpFesS11JIHySEEY8Y0Bd8cYAAAAA
GAB4AA+wA/sP7aA8tANANANANANANANANANANANANANANANANANANANANANANANANANANANAf//Z

------MultipartBoundary--fdOnjK2T5C2RpZV2JgMgfa0Io4YenUpag4Gm1ntYXL----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://chat.deepseek.com/static/katex.b0999f1208.css

@charset "utf-8";

@font-face { font-family: KaTeX_AMS; font-style: normal; font-weight: 400; =
src: url("/static/KaTeX_AMS-Regular.a79f1c3119.woff2") format("woff2"), url=
("/static/KaTeX_AMS-Regular.1608a09b4a.woff") format("woff"), url("/static/=
KaTeX_AMS-Regular.4aafdb685c.ttf") format("truetype"); }

@font-face { font-family: KaTeX_Caligraphic; font-style: normal; font-weigh=
t: 700; src: url("/static/KaTeX_Caligraphic-Bold.ec17d13264.woff2") format(=
"woff2"), url("/static/KaTeX_Caligraphic-Bold.b67709187b.woff") format("wof=
f"), url("/static/KaTeX_Caligraphic-Bold.cce5b8ecea.ttf") format("truetype"=
); }

@font-face { font-family: KaTeX_Caligraphic; font-style: normal; font-weigh=
t: 400; src: url("/static/KaTeX_Caligraphic-Regular.55fac25845.woff2") form=
at("woff2"), url("/static/KaTeX_Caligraphic-Regular.dad44a7fc6.woff") forma=
t("woff"), url("/static/KaTeX_Caligraphic-Regular.07ef19e7b0.ttf") format("=
truetype"); }

@font-face { font-family: KaTeX_Fraktur; font-style: normal; font-weight: 7=
00; src: url("/static/KaTeX_Fraktur-Bold.d42a5579b0.woff2") format("woff2")=
, url("/static/KaTeX_Fraktur-Bold.9f256b8593.woff") format("woff"), url("/s=
tatic/KaTeX_Fraktur-Bold.b18f59e1d1.ttf") format("truetype"); }

@font-face { font-family: KaTeX_Fraktur; font-style: normal; font-weight: 4=
00; src: url("/static/KaTeX_Fraktur-Regular.d3c882a649.woff2") format("woff=
2"), url("/static/KaTeX_Fraktur-Regular.7c1871215e.woff") format("woff"), u=
rl("/static/KaTeX_Fraktur-Regular.ed38e79f57.ttf") format("truetype"); }

@font-face { font-family: KaTeX_Main; font-style: normal; font-weight: 700;=
 src: url("/static/KaTeX_Main-Bold.c3fb5ac22f.woff2") format("woff2"), url(=
"/static/KaTeX_Main-Bold.d181c4650d.woff") format("woff"), url("/static/KaT=
eX_Main-Bold.b74a1a8b2c.ttf") format("truetype"); }

@font-face { font-family: KaTeX_Main; font-style: italic; font-weight: 700;=
 src: url("/static/KaTeX_Main-BoldItalic.6f2bb1dff2.woff2") format("woff2")=
, url("/static/KaTeX_Main-BoldItalic.e3f82f9d27.woff") format("woff"), url(=
"/static/KaTeX_Main-BoldItalic.70d8b0a530.ttf") format("truetype"); }

@font-face { font-family: KaTeX_Main; font-style: italic; font-weight: 400;=
 src: url("/static/KaTeX_Main-Italic.8916142bec.woff2") format("woff2"), ur=
l("/static/KaTeX_Main-Italic.9024d815ba.woff") format("woff"), url("/static=
/KaTeX_Main-Italic.47373d1e51.ttf") format("truetype"); }

@font-face { font-family: KaTeX_Main; font-style: normal; font-weight: 400;=
 src: url("/static/KaTeX_Main-Regular.0462f03bdf.woff2") format("woff2"), u=
rl("/static/KaTeX_Main-Regular.7f51fe0340.woff") format("woff"), url("/stat=
ic/KaTeX_Main-Regular.b7f8fe9b5f.ttf") format("truetype"); }

@font-face { font-family: KaTeX_Math; font-style: italic; font-weight: 700;=
 src: url("/static/KaTeX_Math-BoldItalic.572d331f69.woff2") format("woff2")=
, url("/static/KaTeX_Math-BoldItalic.f1035d8d5d.woff") format("woff"), url(=
"/static/KaTeX_Math-BoldItalic.a879cf8383.ttf") format("truetype"); }

@font-face { font-family: KaTeX_Math; font-style: italic; font-weight: 400;=
 src: url("/static/KaTeX_Math-Italic.f28c23acad.woff2") format("woff2"), ur=
l("/static/KaTeX_Math-Italic.5295ba483a.woff") format("woff"), url("/static=
/KaTeX_Math-Italic.939bc64440.ttf") format("truetype"); }

@font-face { font-family: KaTeX_SansSerif; font-style: normal; font-weight:=
 700; src: url("/static/KaTeX_SansSerif-Bold.8c5b5494b6.woff2") format("wof=
f2"), url("/static/KaTeX_SansSerif-Bold.bf59d231c3.woff") format("woff"), u=
rl("/static/KaTeX_SansSerif-Bold.94e1e8dc5f.ttf") format("truetype"); }

@font-face { font-family: KaTeX_SansSerif; font-style: italic; font-weight:=
 400; src: url("/static/KaTeX_SansSerif-Italic.3b1e59b3ba.woff2") format("w=
off2"), url("/static/KaTeX_SansSerif-Italic.7c9bc82b17.woff") format("woff"=
), url("/static/KaTeX_SansSerif-Italic.b4c20c84d8.ttf") format("truetype");=
 }

@font-face { font-family: KaTeX_SansSerif; font-style: normal; font-weight:=
 400; src: url("/static/KaTeX_SansSerif-Regular.ba21ed5f84.woff2") format("=
woff2"), url("/static/KaTeX_SansSerif-Regular.740484788f.woff") format("wof=
f"), url("/static/KaTeX_SansSerif-Regular.d4d7ba4804.ttf") format("truetype=
"); }

@font-face { font-family: KaTeX_Script; font-style: normal; font-weight: 40=
0; src: url("/static/KaTeX_Script-Regular.03e9641d6f.woff2") format("woff2"=
), url("/static/KaTeX_Script-Regular.0750571032.woff") format("woff"), url(=
"/static/KaTeX_Script-Regular.fe9cbbe1a0.ttf") format("truetype"); }

@font-face { font-family: KaTeX_Size1; font-style: normal; font-weight: 400=
; src: url("/static/KaTeX_Size1-Regular.eae34984b3.woff2") format("woff2"),=
 url("/static/KaTeX_Size1-Regular.e1e279cbdd.woff") format("woff"), url("/s=
tatic/KaTeX_Size1-Regular.fabc004aab.ttf") format("truetype"); }

@font-face { font-family: KaTeX_Size2; font-style: normal; font-weight: 400=
; src: url("/static/KaTeX_Size2-Regular.5916a24fa3.woff2") format("woff2"),=
 url("/static/KaTeX_Size2-Regular.577270225e.woff") format("woff"), url("/s=
tatic/KaTeX_Size2-Regular.d6b476ecd3.ttf") format("truetype"); }

@font-face { font-family: KaTeX_Size3; font-style: normal; font-weight: 400=
; src: url("/static/KaTeX_Size3-Regular.b4230e7e83.woff2") format("woff2"),=
 url("/static/KaTeX_Size3-Regular.9acaf01c64.woff") format("woff"), url("/s=
tatic/KaTeX_Size3-Regular.a144ef5840.ttf") format("truetype"); }

@font-face { font-family: KaTeX_Size4; font-style: normal; font-weight: 400=
; src: url("/static/KaTeX_Size4-Regular.10d95fd3a2.woff2") format("woff2"),=
 url("/static/KaTeX_Size4-Regular.7a996c9da2.woff") format("woff"), url("/s=
tatic/KaTeX_Size4-Regular.fbccdabe0a.ttf") format("truetype"); }

@font-face { font-family: KaTeX_Typewriter; font-style: normal; font-weight=
: 400; src: url("/static/KaTeX_Typewriter-Regular.a8709e3622.woff2") format=
("woff2"), url("/static/KaTeX_Typewriter-Regular.6258592bdc.woff") format("=
woff"), url("/static/KaTeX_Typewriter-Regular.d97aaf4a1e.ttf") format("true=
type"); }

.katex { text-indent: 0px; text-rendering: auto; font: 1.21em / 1.2 KaTeX_M=
ain, "Times New Roman", serif; }

.katex * { border-color: currentcolor; }

.katex .katex-version::after { content: "0.16.11"; }

.katex .katex-mathml { clip: rect(1px, 1px, 1px, 1px); border: 0px; width: =
1px; height: 1px; padding: 0px; position: absolute; overflow: hidden; }

.katex .katex-html > .newline { display: block; }

.katex .base { white-space: nowrap; width: min-content; position: relative;=
 }

.katex .base, .katex .strut { display: inline-block; }

.katex .textbf { font-weight: 700; }

.katex .textit { font-style: italic; }

.katex .textrm { font-family: KaTeX_Main; }

.katex .textsf { font-family: KaTeX_SansSerif; }

.katex .texttt { font-family: KaTeX_Typewriter; }

.katex .mathnormal { font-family: KaTeX_Math; font-style: italic; }

.katex .mathit { font-family: KaTeX_Main; font-style: italic; }

.katex .mathrm { font-style: normal; }

.katex .mathbf { font-family: KaTeX_Main; font-weight: 700; }

.katex .boldsymbol { font-family: KaTeX_Math; font-style: italic; font-weig=
ht: 700; }

.katex .amsrm, .katex .mathbb, .katex .textbb { font-family: KaTeX_AMS; }

.katex .mathcal { font-family: KaTeX_Caligraphic; }

.katex .mathfrak, .katex .textfrak { font-family: KaTeX_Fraktur; }

.katex .mathboldfrak, .katex .textboldfrak { font-family: KaTeX_Fraktur; fo=
nt-weight: 700; }

.katex .mathtt { font-family: KaTeX_Typewriter; }

.katex .mathscr, .katex .textscr { font-family: KaTeX_Script; }

.katex .mathsf, .katex .textsf { font-family: KaTeX_SansSerif; }

.katex .mathboldsf, .katex .textboldsf { font-family: KaTeX_SansSerif; font=
-weight: 700; }

.katex .mathitsf, .katex .textitsf { font-family: KaTeX_SansSerif; font-sty=
le: italic; }

.katex .mainrm { font-family: KaTeX_Main; font-style: normal; }

.katex .vlist-t { border-collapse: collapse; table-layout: fixed; display: =
inline-table; }

.katex .vlist-r { display: table-row; }

.katex .vlist { vertical-align: bottom; display: table-cell; position: rela=
tive; }

.katex .vlist > span { height: 0px; display: block; position: relative; }

.katex .vlist > span > span { display: inline-block; }

.katex .vlist > span > .pstrut { width: 0px; overflow: hidden; }

.katex .vlist-t2 { margin-right: -2px; }

.katex .vlist-s { vertical-align: bottom; width: 2px; min-width: 2px; font-=
size: 1px; display: table-cell; }

.katex .vbox { flex-direction: column; align-items: baseline; display: inli=
ne-flex; }

.katex .hbox { width: 100%; }

.katex .hbox, .katex .thinbox { flex-direction: row; display: inline-flex; =
}

.katex .thinbox { width: 0px; max-width: 0px; }

.katex .msupsub { text-align: left; }

.katex .mfrac > span > span { text-align: center; }

.katex .mfrac .frac-line { border-bottom-style: solid; width: 100%; display=
: inline-block; }

.katex .hdashline, .katex .hline, .katex .mfrac .frac-line, .katex .overlin=
e .overline-line, .katex .rule, .katex .underline .underline-line { min-hei=
ght: 1px; }

.katex .mspace { display: inline-block; }

.katex .clap, .katex .llap, .katex .rlap { width: 0px; position: relative; =
}

.katex .clap > .inner, .katex .llap > .inner, .katex .rlap > .inner { posit=
ion: absolute; }

.katex .clap > .fix, .katex .llap > .fix, .katex .rlap > .fix { display: in=
line-block; }

.katex .llap > .inner { right: 0px; }

.katex .clap > .inner, .katex .rlap > .inner { left: 0px; }

.katex .clap > .inner > span { margin-left: -50%; margin-right: 50%; }

.katex .rule { border: 0px solid; display: inline-block; position: relative=
; }

.katex .hline, .katex .overline .overline-line, .katex .underline .underlin=
e-line { border-bottom-style: solid; width: 100%; display: inline-block; }

.katex .hdashline { border-bottom-style: dashed; width: 100%; display: inli=
ne-block; }

.katex .sqrt > .root { margin-left: 0.277778em; margin-right: -0.555556em; =
}

.katex .fontsize-ensurer.reset-size1.size1, .katex .sizing.reset-size1.size=
1 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size1.size2, .katex .sizing.reset-size1.size=
2 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size1.size3, .katex .sizing.reset-size1.size=
3 { font-size: 1.4em; }

.katex .fontsize-ensurer.reset-size1.size4, .katex .sizing.reset-size1.size=
4 { font-size: 1.6em; }

.katex .fontsize-ensurer.reset-size1.size5, .katex .sizing.reset-size1.size=
5 { font-size: 1.8em; }

.katex .fontsize-ensurer.reset-size1.size6, .katex .sizing.reset-size1.size=
6 { font-size: 2em; }

.katex .fontsize-ensurer.reset-size1.size7, .katex .sizing.reset-size1.size=
7 { font-size: 2.4em; }

.katex .fontsize-ensurer.reset-size1.size8, .katex .sizing.reset-size1.size=
8 { font-size: 2.88em; }

.katex .fontsize-ensurer.reset-size1.size9, .katex .sizing.reset-size1.size=
9 { font-size: 3.456em; }

.katex .fontsize-ensurer.reset-size1.size10, .katex .sizing.reset-size1.siz=
e10 { font-size: 4.148em; }

.katex .fontsize-ensurer.reset-size1.size11, .katex .sizing.reset-size1.siz=
e11 { font-size: 4.976em; }

.katex .fontsize-ensurer.reset-size2.size1, .katex .sizing.reset-size2.size=
1 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size2.size2, .katex .sizing.reset-size2.size=
2 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size2.size3, .katex .sizing.reset-size2.size=
3 { font-size: 1.16667em; }

.katex .fontsize-ensurer.reset-size2.size4, .katex .sizing.reset-size2.size=
4 { font-size: 1.33333em; }

.katex .fontsize-ensurer.reset-size2.size5, .katex .sizing.reset-size2.size=
5 { font-size: 1.5em; }

.katex .fontsize-ensurer.reset-size2.size6, .katex .sizing.reset-size2.size=
6 { font-size: 1.66667em; }

.katex .fontsize-ensurer.reset-size2.size7, .katex .sizing.reset-size2.size=
7 { font-size: 2em; }

.katex .fontsize-ensurer.reset-size2.size8, .katex .sizing.reset-size2.size=
8 { font-size: 2.4em; }

.katex .fontsize-ensurer.reset-size2.size9, .katex .sizing.reset-size2.size=
9 { font-size: 2.88em; }

.katex .fontsize-ensurer.reset-size2.size10, .katex .sizing.reset-size2.siz=
e10 { font-size: 3.45667em; }

.katex .fontsize-ensurer.reset-size2.size11, .katex .sizing.reset-size2.siz=
e11 { font-size: 4.14667em; }

.katex .fontsize-ensurer.reset-size3.size1, .katex .sizing.reset-size3.size=
1 { font-size: 0.714286em; }

.katex .fontsize-ensurer.reset-size3.size2, .katex .sizing.reset-size3.size=
2 { font-size: 0.857143em; }

.katex .fontsize-ensurer.reset-size3.size3, .katex .sizing.reset-size3.size=
3 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size3.size4, .katex .sizing.reset-size3.size=
4 { font-size: 1.14286em; }

.katex .fontsize-ensurer.reset-size3.size5, .katex .sizing.reset-size3.size=
5 { font-size: 1.28571em; }

.katex .fontsize-ensurer.reset-size3.size6, .katex .sizing.reset-size3.size=
6 { font-size: 1.42857em; }

.katex .fontsize-ensurer.reset-size3.size7, .katex .sizing.reset-size3.size=
7 { font-size: 1.71429em; }

.katex .fontsize-ensurer.reset-size3.size8, .katex .sizing.reset-size3.size=
8 { font-size: 2.05714em; }

.katex .fontsize-ensurer.reset-size3.size9, .katex .sizing.reset-size3.size=
9 { font-size: 2.46857em; }

.katex .fontsize-ensurer.reset-size3.size10, .katex .sizing.reset-size3.siz=
e10 { font-size: 2.96286em; }

.katex .fontsize-ensurer.reset-size3.size11, .katex .sizing.reset-size3.siz=
e11 { font-size: 3.55429em; }

.katex .fontsize-ensurer.reset-size4.size1, .katex .sizing.reset-size4.size=
1 { font-size: 0.625em; }

.katex .fontsize-ensurer.reset-size4.size2, .katex .sizing.reset-size4.size=
2 { font-size: 0.75em; }

.katex .fontsize-ensurer.reset-size4.size3, .katex .sizing.reset-size4.size=
3 { font-size: 0.875em; }

.katex .fontsize-ensurer.reset-size4.size4, .katex .sizing.reset-size4.size=
4 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size4.size5, .katex .sizing.reset-size4.size=
5 { font-size: 1.125em; }

.katex .fontsize-ensurer.reset-size4.size6, .katex .sizing.reset-size4.size=
6 { font-size: 1.25em; }

.katex .fontsize-ensurer.reset-size4.size7, .katex .sizing.reset-size4.size=
7 { font-size: 1.5em; }

.katex .fontsize-ensurer.reset-size4.size8, .katex .sizing.reset-size4.size=
8 { font-size: 1.8em; }

.katex .fontsize-ensurer.reset-size4.size9, .katex .sizing.reset-size4.size=
9 { font-size: 2.16em; }

.katex .fontsize-ensurer.reset-size4.size10, .katex .sizing.reset-size4.siz=
e10 { font-size: 2.5925em; }

.katex .fontsize-ensurer.reset-size4.size11, .katex .sizing.reset-size4.siz=
e11 { font-size: 3.11em; }

.katex .fontsize-ensurer.reset-size5.size1, .katex .sizing.reset-size5.size=
1 { font-size: 0.555556em; }

.katex .fontsize-ensurer.reset-size5.size2, .katex .sizing.reset-size5.size=
2 { font-size: 0.666667em; }

.katex .fontsize-ensurer.reset-size5.size3, .katex .sizing.reset-size5.size=
3 { font-size: 0.777778em; }

.katex .fontsize-ensurer.reset-size5.size4, .katex .sizing.reset-size5.size=
4 { font-size: 0.888889em; }

.katex .fontsize-ensurer.reset-size5.size5, .katex .sizing.reset-size5.size=
5 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size5.size6, .katex .sizing.reset-size5.size=
6 { font-size: 1.11111em; }

.katex .fontsize-ensurer.reset-size5.size7, .katex .sizing.reset-size5.size=
7 { font-size: 1.33333em; }

.katex .fontsize-ensurer.reset-size5.size8, .katex .sizing.reset-size5.size=
8 { font-size: 1.6em; }

.katex .fontsize-ensurer.reset-size5.size9, .katex .sizing.reset-size5.size=
9 { font-size: 1.92em; }

.katex .fontsize-ensurer.reset-size5.size10, .katex .sizing.reset-size5.siz=
e10 { font-size: 2.30444em; }

.katex .fontsize-ensurer.reset-size5.size11, .katex .sizing.reset-size5.siz=
e11 { font-size: 2.76444em; }

.katex .fontsize-ensurer.reset-size6.size1, .katex .sizing.reset-size6.size=
1 { font-size: 0.5em; }

.katex .fontsize-ensurer.reset-size6.size2, .katex .sizing.reset-size6.size=
2 { font-size: 0.6em; }

.katex .fontsize-ensurer.reset-size6.size3, .katex .sizing.reset-size6.size=
3 { font-size: 0.7em; }

.katex .fontsize-ensurer.reset-size6.size4, .katex .sizing.reset-size6.size=
4 { font-size: 0.8em; }

.katex .fontsize-ensurer.reset-size6.size5, .katex .sizing.reset-size6.size=
5 { font-size: 0.9em; }

.katex .fontsize-ensurer.reset-size6.size6, .katex .sizing.reset-size6.size=
6 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size6.size7, .katex .sizing.reset-size6.size=
7 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size6.size8, .katex .sizing.reset-size6.size=
8 { font-size: 1.44em; }

.katex .fontsize-ensurer.reset-size6.size9, .katex .sizing.reset-size6.size=
9 { font-size: 1.728em; }

.katex .fontsize-ensurer.reset-size6.size10, .katex .sizing.reset-size6.siz=
e10 { font-size: 2.074em; }

.katex .fontsize-ensurer.reset-size6.size11, .katex .sizing.reset-size6.siz=
e11 { font-size: 2.488em; }

.katex .fontsize-ensurer.reset-size7.size1, .katex .sizing.reset-size7.size=
1 { font-size: 0.416667em; }

.katex .fontsize-ensurer.reset-size7.size2, .katex .sizing.reset-size7.size=
2 { font-size: 0.5em; }

.katex .fontsize-ensurer.reset-size7.size3, .katex .sizing.reset-size7.size=
3 { font-size: 0.583333em; }

.katex .fontsize-ensurer.reset-size7.size4, .katex .sizing.reset-size7.size=
4 { font-size: 0.666667em; }

.katex .fontsize-ensurer.reset-size7.size5, .katex .sizing.reset-size7.size=
5 { font-size: 0.75em; }

.katex .fontsize-ensurer.reset-size7.size6, .katex .sizing.reset-size7.size=
6 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size7.size7, .katex .sizing.reset-size7.size=
7 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size7.size8, .katex .sizing.reset-size7.size=
8 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size7.size9, .katex .sizing.reset-size7.size=
9 { font-size: 1.44em; }

.katex .fontsize-ensurer.reset-size7.size10, .katex .sizing.reset-size7.siz=
e10 { font-size: 1.72833em; }

.katex .fontsize-ensurer.reset-size7.size11, .katex .sizing.reset-size7.siz=
e11 { font-size: 2.07333em; }

.katex .fontsize-ensurer.reset-size8.size1, .katex .sizing.reset-size8.size=
1 { font-size: 0.347222em; }

.katex .fontsize-ensurer.reset-size8.size2, .katex .sizing.reset-size8.size=
2 { font-size: 0.416667em; }

.katex .fontsize-ensurer.reset-size8.size3, .katex .sizing.reset-size8.size=
3 { font-size: 0.486111em; }

.katex .fontsize-ensurer.reset-size8.size4, .katex .sizing.reset-size8.size=
4 { font-size: 0.555556em; }

.katex .fontsize-ensurer.reset-size8.size5, .katex .sizing.reset-size8.size=
5 { font-size: 0.625em; }

.katex .fontsize-ensurer.reset-size8.size6, .katex .sizing.reset-size8.size=
6 { font-size: 0.694444em; }

.katex .fontsize-ensurer.reset-size8.size7, .katex .sizing.reset-size8.size=
7 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size8.size8, .katex .sizing.reset-size8.size=
8 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size8.size9, .katex .sizing.reset-size8.size=
9 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size8.size10, .katex .sizing.reset-size8.siz=
e10 { font-size: 1.44028em; }

.katex .fontsize-ensurer.reset-size8.size11, .katex .sizing.reset-size8.siz=
e11 { font-size: 1.72778em; }

.katex .fontsize-ensurer.reset-size9.size1, .katex .sizing.reset-size9.size=
1 { font-size: 0.289352em; }

.katex .fontsize-ensurer.reset-size9.size2, .katex .sizing.reset-size9.size=
2 { font-size: 0.347222em; }

.katex .fontsize-ensurer.reset-size9.size3, .katex .sizing.reset-size9.size=
3 { font-size: 0.405093em; }

.katex .fontsize-ensurer.reset-size9.size4, .katex .sizing.reset-size9.size=
4 { font-size: 0.462963em; }

.katex .fontsize-ensurer.reset-size9.size5, .katex .sizing.reset-size9.size=
5 { font-size: 0.520833em; }

.katex .fontsize-ensurer.reset-size9.size6, .katex .sizing.reset-size9.size=
6 { font-size: 0.578704em; }

.katex .fontsize-ensurer.reset-size9.size7, .katex .sizing.reset-size9.size=
7 { font-size: 0.694444em; }

.katex .fontsize-ensurer.reset-size9.size8, .katex .sizing.reset-size9.size=
8 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size9.size9, .katex .sizing.reset-size9.size=
9 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size9.size10, .katex .sizing.reset-size9.siz=
e10 { font-size: 1.20023em; }

.katex .fontsize-ensurer.reset-size9.size11, .katex .sizing.reset-size9.siz=
e11 { font-size: 1.43981em; }

.katex .fontsize-ensurer.reset-size10.size1, .katex .sizing.reset-size10.si=
ze1 { font-size: 0.24108em; }

.katex .fontsize-ensurer.reset-size10.size2, .katex .sizing.reset-size10.si=
ze2 { font-size: 0.289296em; }

.katex .fontsize-ensurer.reset-size10.size3, .katex .sizing.reset-size10.si=
ze3 { font-size: 0.337512em; }

.katex .fontsize-ensurer.reset-size10.size4, .katex .sizing.reset-size10.si=
ze4 { font-size: 0.385728em; }

.katex .fontsize-ensurer.reset-size10.size5, .katex .sizing.reset-size10.si=
ze5 { font-size: 0.433944em; }

.katex .fontsize-ensurer.reset-size10.size6, .katex .sizing.reset-size10.si=
ze6 { font-size: 0.48216em; }

.katex .fontsize-ensurer.reset-size10.size7, .katex .sizing.reset-size10.si=
ze7 { font-size: 0.578592em; }

.katex .fontsize-ensurer.reset-size10.size8, .katex .sizing.reset-size10.si=
ze8 { font-size: 0.694311em; }

.katex .fontsize-ensurer.reset-size10.size9, .katex .sizing.reset-size10.si=
ze9 { font-size: 0.833173em; }

.katex .fontsize-ensurer.reset-size10.size10, .katex .sizing.reset-size10.s=
ize10 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size10.size11, .katex .sizing.reset-size10.s=
ize11 { font-size: 1.19961em; }

.katex .fontsize-ensurer.reset-size11.size1, .katex .sizing.reset-size11.si=
ze1 { font-size: 0.200965em; }

.katex .fontsize-ensurer.reset-size11.size2, .katex .sizing.reset-size11.si=
ze2 { font-size: 0.241158em; }

.katex .fontsize-ensurer.reset-size11.size3, .katex .sizing.reset-size11.si=
ze3 { font-size: 0.281351em; }

.katex .fontsize-ensurer.reset-size11.size4, .katex .sizing.reset-size11.si=
ze4 { font-size: 0.321543em; }

.katex .fontsize-ensurer.reset-size11.size5, .katex .sizing.reset-size11.si=
ze5 { font-size: 0.361736em; }

.katex .fontsize-ensurer.reset-size11.size6, .katex .sizing.reset-size11.si=
ze6 { font-size: 0.401929em; }

.katex .fontsize-ensurer.reset-size11.size7, .katex .sizing.reset-size11.si=
ze7 { font-size: 0.482315em; }

.katex .fontsize-ensurer.reset-size11.size8, .katex .sizing.reset-size11.si=
ze8 { font-size: 0.578778em; }

.katex .fontsize-ensurer.reset-size11.size9, .katex .sizing.reset-size11.si=
ze9 { font-size: 0.694534em; }

.katex .fontsize-ensurer.reset-size11.size10, .katex .sizing.reset-size11.s=
ize10 { font-size: 0.833601em; }

.katex .fontsize-ensurer.reset-size11.size11, .katex .sizing.reset-size11.s=
ize11 { font-size: 1em; }

.katex .delimsizing.size1 { font-family: KaTeX_Size1; }

.katex .delimsizing.size2 { font-family: KaTeX_Size2; }

.katex .delimsizing.size3 { font-family: KaTeX_Size3; }

.katex .delimsizing.size4 { font-family: KaTeX_Size4; }

.katex .delimsizing.mult .delim-size1 > span { font-family: KaTeX_Size1; }

.katex .delimsizing.mult .delim-size4 > span { font-family: KaTeX_Size4; }

.katex .nulldelimiter { width: 0.12em; display: inline-block; }

.katex .delimcenter, .katex .op-symbol { position: relative; }

.katex .op-symbol.small-op { font-family: KaTeX_Size1; }

.katex .op-symbol.large-op { font-family: KaTeX_Size2; }

.katex .accent > .vlist-t, .katex .op-limits > .vlist-t { text-align: cente=
r; }

.katex .accent .accent-body { position: relative; }

.katex .accent .accent-body:not(.accent-full) { width: 0px; }

.katex .overlay { display: block; }

.katex .mtable .vertical-separator { min-width: 1px; display: inline-block;=
 }

.katex .mtable .arraycolsep { display: inline-block; }

.katex .mtable .col-align-c > .vlist-t { text-align: center; }

.katex .mtable .col-align-l > .vlist-t { text-align: left; }

.katex .mtable .col-align-r > .vlist-t { text-align: right; }

.katex .svg-align { text-align: left; }

.katex svg { fill: currentcolor; stroke: currentcolor; fill-rule: nonzero; =
fill-opacity: 1; stroke-width: 1px; stroke-linecap: butt; stroke-linejoin: =
miter; stroke-miterlimit: 4; stroke-dasharray: none; stroke-dashoffset: 0; =
stroke-opacity: 1; height: inherit; width: 100%; display: block; position: =
absolute; }

.katex svg path { stroke: none; }

.katex img { border-style: none; min-width: 0px; max-width: none; min-heigh=
t: 0px; max-height: none; }

.katex .stretchy { width: 100%; display: block; position: relative; overflo=
w: hidden; }

.katex .stretchy::after, .katex .stretchy::before { content: ""; }

.katex .hide-tail { width: 100%; position: relative; overflow: hidden; }

.katex .halfarrow-left { width: 50.2%; position: absolute; left: 0px; overf=
low: hidden; }

.katex .halfarrow-right { width: 50.2%; position: absolute; right: 0px; ove=
rflow: hidden; }

.katex .brace-left { width: 25.1%; position: absolute; left: 0px; overflow:=
 hidden; }

.katex .brace-center { width: 50%; position: absolute; left: 25%; overflow:=
 hidden; }

.katex .brace-right { width: 25.1%; position: absolute; right: 0px; overflo=
w: hidden; }

.katex .x-arrow-pad { padding: 0px 0.5em; }

.katex .cd-arrow-pad { padding: 0px 0.55556em 0px 0.27778em; }

.katex .mover, .katex .munder, .katex .x-arrow { text-align: center; }

.katex .boxpad { padding: 0px 0.3em; }

.katex .fbox, .katex .fcolorbox { box-sizing: border-box; border: 0.04em so=
lid; }

.katex .cancel-pad { padding: 0px 0.2em; }

.katex .cancel-lap { margin-left: -0.2em; margin-right: -0.2em; }

.katex .sout { border-bottom-style: solid; border-bottom-width: 0.08em; }

.katex .angl { box-sizing: border-box; border-top: 0.049em solid; border-ri=
ght: 0.049em solid; margin-right: 0.03889em; }

.katex .anglpad { padding: 0px 0.03889em; }

.katex .eqn-num::before { content: "(" counter(katexEqnNo) ")"; counter-inc=
rement: katexEqnNo 1; }

.katex .mml-eqn-num::before { content: "(" counter(mmlEqnNo) ")"; counter-i=
ncrement: mmlEqnNo 1; }

.katex .mtr-glue { width: 50%; }

.katex .cd-vert-arrow { display: inline-block; position: relative; }

.katex .cd-label-left { text-align: left; display: inline-block; position: =
absolute; right: calc(50% + 0.3em); }

.katex .cd-label-right { text-align: right; display: inline-block; position=
: absolute; left: calc(50% + 0.3em); }

.katex-display { text-align: center; margin: 1em 0px; display: block; }

.katex-display > .katex { text-align: center; white-space: nowrap; display:=
 block; }

.katex-display > .katex > .katex-html { display: block; position: relative;=
 }

.katex-display > .katex > .katex-html > .tag { position: absolute; right: 0=
px; }

.katex-display.leqno > .katex > .katex-html > .tag { left: 0px; right: auto=
; }

.katex-display.fleqn > .katex { text-align: left; padding-left: 2em; }

body { counter-reset: katexEqnNo 0 mmlEqnNo 0; }
------MultipartBoundary--fdOnjK2T5C2RpZV2JgMgfa0Io4YenUpag4Gm1ntYXL----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://chat.deepseek.com/static/main.b1b0d916f8.css

@charset "utf-8";

[data-transform-origin=3D"bottom"] .ds-fade-in-zoom-in-enter, [data-transfo=
rm-origin=3D"bottom"] .ds-fade-in-zoom-in-exit { transform-origin: center b=
ottom; }

[data-transform-origin=3D"bottom left"] .ds-fade-in-zoom-in-enter, [data-tr=
ansform-origin=3D"bottom left"] .ds-fade-in-zoom-in-exit { transform-origin=
: 0px 100%; }

[data-transform-origin=3D"bottom right"] .ds-fade-in-zoom-in-enter, [data-t=
ransform-origin=3D"bottom right"] .ds-fade-in-zoom-in-exit { transform-orig=
in: 100% 100%; }

[data-transform-origin=3D"top"] .ds-fade-in-zoom-in-enter, [data-transform-=
origin=3D"top"] .ds-fade-in-zoom-in-exit { transform-origin: center top; }

[data-transform-origin=3D"top left"] .ds-fade-in-zoom-in-enter, [data-trans=
form-origin=3D"top left"] .ds-fade-in-zoom-in-exit { transform-origin: 0px =
0px; }

[data-transform-origin=3D"top right"] .ds-fade-in-zoom-in-enter, [data-tran=
sform-origin=3D"top right"] .ds-fade-in-zoom-in-exit { transform-origin: 10=
0% 0px; }

[data-transform-origin=3D"left"] .ds-fade-in-zoom-in-enter, [data-transform=
-origin=3D"left"] .ds-fade-in-zoom-in-exit { transform-origin: 0px center; =
}

[data-transform-origin=3D"left top"] .ds-fade-in-zoom-in-enter, [data-trans=
form-origin=3D"left top"] .ds-fade-in-zoom-in-exit { transform-origin: 0px =
0px; }

[data-transform-origin=3D"left bottom"] .ds-fade-in-zoom-in-enter, [data-tr=
ansform-origin=3D"left bottom"] .ds-fade-in-zoom-in-exit { transform-origin=
: 0px 100%; }

[data-transform-origin=3D"right"] .ds-fade-in-zoom-in-enter, [data-transfor=
m-origin=3D"right"] .ds-fade-in-zoom-in-exit { transform-origin: 100% cente=
r; }

[data-transform-origin=3D"right top"] .ds-fade-in-zoom-in-enter, [data-tran=
sform-origin=3D"right top"] .ds-fade-in-zoom-in-exit { transform-origin: 10=
0% 0px; }

[data-transform-origin=3D"right bottom"] .ds-fade-in-zoom-in-enter, [data-t=
ransform-origin=3D"right bottom"] .ds-fade-in-zoom-in-exit { transform-orig=
in: 100% 100%; }

[data-transform-origin=3D"center"] .ds-fade-in-zoom-in-enter, [data-transfo=
rm-origin=3D"center"] .ds-fade-in-zoom-in-exit { transform-origin: 50% cent=
er; }

.ds-fade-in-zoom-in-enter { opacity: 0; transform: scale(0.96); }

.ds-fade-in-zoom-in-active { opacity: 1; transition: opacity var(--ds-ease-=
in)var(--ds-transition-duration-fast),transform var(--ds-ease-in)var(--ds-t=
ransition-duration-fast); transform: scale(1); }

.ds-fade-in-zoom-in-exit { opacity: 1; transform: scale(1); }

.ds-fade-in-zoom-in-exit-active { opacity: 0; transition: opacity var(--ds-=
ease-out)var(--ds-transition-duration-fast),transform var(--ds-ease-out)var=
(--ds-transition-duration-fast); transform: scale(0.96); }

.ds-form-item.ds-form-item--label-s { --ds-form-item-label-font-size: var(-=
-ds-font-size-s); --ds-form-item-label-line-height: var(--ds-line-height-s)=
; }

.ds-form-item.ds-form-item--label-m .ds-form-item__label { --ds-form-item-l=
abel-font-size: var(--ds-font-size-m); --ds-form-item-label-line-height: va=
r(--ds-line-height-m); }

.ds-form-item .ds-form-item__label { color: rgb(var(--ds-rgb-label-2)); fon=
t-size: var(--ds-form-item-label-font-size); line-height: var(--ds-form-ite=
m-label-line-height); margin-bottom: 6px; display: block; }

.ds-form-item .ds-form-item__content { color: rgb(var(--ds-rgb-label-1)); }

.ds-form-item .ds-form-item__description { color: rgb(var(--ds-rgb-label-2)=
); box-sizing: border-box; min-height: 21px; transition: color var(--ds-tra=
nsition-duration)var(--ds-ease-in-out); padding: 2px 0px; font-size: 12px; =
line-height: 17px; }

.ds-form-item .ds-form-item__feedback { box-sizing: border-box; min-height:=
 21px; transition: color var(--ds-transition-duration)var(--ds-ease-in-out)=
; padding: 2px 0px; font-size: 12px; line-height: 17px; }

.ds-form-item .ds-form-item__feedback-content { width: fit-content; }

.ds-form-item.ds-form-item--none .ds-form-item__feedback { color: rgb(var(-=
-ds-rgb-label-2)); }

.ds-form-item.ds-form-item--error .ds-form-item__feedback { color: rgb(var(=
--ds-rgb-error)); }

.ds-input { --ds-input-text-color: rgb(var(--ds-rgb-label-1)); --ds-input-p=
laceholder-color: rgb(var(--ds-rgb-label-3)); --ds-input-icon-color: rgb(va=
r(--ds-rgb-label-3)); --ds-input-prefix-text-color: rgb(var(--ds-rgb-label-=
1)); --ds-input-color: rgb(var(--ds-rgb-input)); --ds-input-font-weight: in=
itial; --ds-input-color-focus: rgb(var(--ds-rgb-input-focus)); }

.ds-input.ds-input--bordered { --ds-input-color: rgba(var(--ds-rgba-transpa=
rent)); }

.ds-input.ds-input--l { --ds-input-padding: 0 10px; --ds-input-border-radiu=
s: 10px; --ds-input-height: var(--ds-input-height-l); --ds-input-font-size:=
 var(--ds-font-size-m); --ds-input-line-height: var(--ds-line-height-m); --=
ds-input-prefix-margin: 0 8px 0 0; --ds-input-password-toggle-margin: 0 0 0=
 8px; --ds-input-icon-size: 18px; }

.ds-input.ds-input--m { --ds-input-padding: 0 10px; --ds-input-border-radiu=
s: 10px; --ds-input-height: var(--ds-input-height-m); --ds-input-font-size:=
 var(--ds-font-size-m); --ds-input-line-height: var(--ds-line-height-m); --=
ds-input-prefix-margin: 0 8px 0 0; --ds-input-password-toggle-margin: 0 0 0=
 8px; --ds-input-icon-size: 18px; }

.ds-input.ds-input--m .ds-input__password-toggle .ds-icon-button { --ds-ico=
n-button-size: 16px; }

.ds-input.ds-input--s { --ds-input-padding: 0 10px; --ds-input-border-radiu=
s: 10px; --ds-input-height: var(--ds-input-height-s); --ds-input-font-size:=
 var(--ds-font-size-s); --ds-input-line-height: var(--ds-line-height-s); --=
ds-input-prefix-margin: 0 8px 0 0; --ds-input-password-toggle-margin: 0 0 0=
 8px; --ds-input-icon-size: 18px; }

.ds-input.ds-input--s .ds-input__password-toggle .ds-icon-button { --ds-ico=
n-button-size: 15px; }

.ds-input.ds-input--xs { --ds-input-padding: 0 10px; --ds-input-border-radi=
us: 8px; --ds-input-height: var(--ds-input-height-xs); --ds-input-font-size=
: var(--ds-font-size-xs); --ds-input-line-height: var(--ds-line-height-xs);=
 --ds-input-prefix-margin: 0 7px 0 0; --ds-input-icon-size: 18px; --ds-inpu=
t-password-toggle-margin: 0 0 0 7px; }

.ds-input.ds-input--xs .ds-input__password-toggle .ds-icon-button { --ds-ic=
on-button-size: 14px; }

.ds-input { cursor: text; background-color: var(--ds-input-color); width: 1=
00%; color: var(--ds-input-text-color); box-sizing: border-box; border-radi=
us: var(--ds-input-border-radius); transition: background-color var(--ds-tr=
ansition-duration)var(--ds-ease-in-out),box-shadow var(--ds-transition-dura=
tion)var(--ds-ease-in-out),color var(--ds-transition-duration)var(--ds-ease=
-in-out); padding: var(--ds-input-padding); height: var(--ds-input-height);=
 font-size: var(--ds-input-font-size); line-height: var(--ds-input-line-hei=
ght); font-weight: var(--ds-input-font-weight); align-items: center; displa=
y: flex; position: relative; }

.ds-input.ds-input--disabled { opacity: 0.45; cursor: not-allowed; }

.ds-input.ds-input--disabled .ds-input__input { cursor: not-allowed; }

.ds-input .ds-input__mirror { padding: var(--ds-input-padding); pointer-eve=
nts: none; white-space: nowrap; visibility: hidden; height: 0px; position: =
absolute; top: 0px; left: 0px; }

.ds-input .ds-input__mirror, .ds-input .ds-input__input { font-size: inheri=
t; font-family: inherit; font-weight: inherit; border: none; display: block=
; }

.ds-input .ds-input__input { background-color: rgba(var(--ds-rgba-transpare=
nt)); color: inherit; caret-color: rgb(var(--ds-rgb-primary)); border: none=
; outline: none; flex: 1 1 0%; padding: 0px; font-family: inherit; }

.ds-input .ds-input__input::placeholder { color: var(--ds-input-placeholder=
-color); }

.ds-input .ds-input__input::placeholder { color: var(--ds-input-placeholder=
-color); }

.ds-input .ds-input__input::placeholder { color: var(--ds-input-placeholder=
-color); }

.ds-input .ds-input__icon { color: var(--ds-input-icon-color); font-size: v=
ar(--ds-input-icon-size); margin: var(--ds-input-prefix-margin); justify-co=
ntent: center; align-items: center; display: flex; }

.ds-input .ds-input__prefix { color: var(--ds-input-prefix-color); margin: =
var(--ds-input-prefix-margin); line-height: var(--ds-input-height); }

.ds-input .ds-input__password-toggle { margin: var(--ds-input-password-togg=
le-margin); }

.ds-input.ds-input--none:focus-within { background-color: var(--ds-input-fo=
cus-color,--ds-input-color-focus); box-shadow: inset 0 0 0 2px var(--ds-inp=
ut-focus-border-color,rgb(var(--ds-rgb-primary))); }

.ds-input.ds-input--filled.ds-input--error:focus-within { background-color:=
 var(--ds-input-focus-color,--ds-input-color-focus); }

.ds-input.ds-input--bordered.ds-input--error:focus-within { background-colo=
r: var(--ds-input-focus-color,--ds-input-color-focus); }

.ds-input.ds-input--filled.ds-input--error, .ds-input.ds-input--bordered.ds=
-input--error { background-color: rgba(var(--ds-rgb-error)/.06); box-shadow=
: inset 0 0 0 2px var(--ds-input-focus-border-color,rgb(var(--ds-rgb-error)=
)); }

.ds-input.ds-input--filled { background-color: var(--ds-input-color); }

.ds-input.ds-input--bordered { box-shadow: inset 0 0 0 1px rgb(var(--ds-rgb=
-separator-strong)); }

.ds-icon-button { --ds-icon-button-text-color: rgb(var(--ds-rgb-label-2)); =
--ds-icon-button-outline-color: rgb(var(--ds-rgb-primary)); --ds-icon-butto=
n-size: 18px; --ds-icon-button-background-inset: -4px; width: var(--ds-icon=
-button-size); height: var(--ds-icon-button-size); color: var(--ds-icon-but=
ton-text-color); cursor: pointer; justify-content: center; align-items: cen=
ter; display: flex; position: relative; }

.ds-icon-button svg { height: var(--ds-icon-button-size); width: var(--ds-i=
con-button-size); fill: currentcolor; position: relative; }

.ds-icon-button:hover::before { background-color: var(--ds-icon-button-hove=
r-color,rgb(var(--ds-rgb-hover))); }

.ds-icon-button::before { transition: background-color var(--ds-transition-=
duration)var(--ds-ease-in-out); content: ""; background-color: rgba(var(--d=
s-rgba-transparent)); top: var(--ds-icon-button-background-inset); right: v=
ar(--ds-icon-button-background-inset); bottom: var(--ds-icon-button-backgro=
und-inset); left: var(--ds-icon-button-background-inset); border-radius: 8p=
x; display: block; position: absolute; }

.ds-icon-button { outline: none; }

.ds-icon-button::after { transition: box-shadow var(--ds-transition-duratio=
n)var(--ds-ease-in-out); content: ""; top: calc(var(--ds-icon-button-backgr=
ound-inset) - 2px); right: calc(var(--ds-icon-button-background-inset) - 2p=
x); bottom: calc(var(--ds-icon-button-background-inset) - 2px); left: calc(=
var(--ds-icon-button-background-inset) - 2px); pointer-events: none; border=
-radius: 10px; display: block; position: absolute; }

.ds-icon-button:focus-visible::after { box-shadow: 0 0 0 2px var(--ds-icon-=
button-outline-color); }

.ds-icon { line-height: 0; display: inline-flex; }

.ds-icon > svg { width: inherit; height: inherit; }

.ds-a { --a-border-radius: 6px; --a-box-shadow-color-focus: rgb(var(--ds-rg=
b-link)); }

.ds-a.ds-a--link { --a-text-color: rgb(var(--ds-rgb-link)); --a-box-shadow-=
color-focus: rgb(var(--ds-rgb-link)); }

.ds-a.ds-a--primary { --a-text-color: rgb(var(--ds-rgb-primary)); --a-box-s=
hadow-color-focus: rgb(var(--ds-rgb-primary)); }

.ds-a.ds-a--secondary { --a-text-color: var(--a-text-color-secondary); --a-=
box-shadow-color-focus: rgb(var(--ds-rgb-link)); }

.ds-a:focus { outline: none; }

.ds-a:focus-visible { box-shadow: 0 0 0 2px var(--a-box-shadow-color-focus)=
; }

.ds-a { cursor: pointer; transition: color var(--ds-transition-duration)var=
(--ds-ease-in-out),box-shadow var(--ds-transition-duration)var(--ds-ease-in=
-out); border-radius: var(--a-border-radius); color: var(--a-text-color); b=
order-left: 3px solid rgba(var(--ds-rgba-transparent)); border-right: 3px s=
olid rgba(var(--ds-rgba-transparent)); border-top: 2px solid rgba(var(--ds-=
rgba-transparent)); border-bottom: 2px solid rgba(var(--ds-rgba-transparent=
)); margin: -2px -3px; text-decoration: none; position: relative; }

.ds-checkbox-wrapper { font-size: var(--font-size); line-height: var(--line=
-height); color: rgb(var(--ds-rgb-label-1)); }

.ds-checkbox-wrapper.disabled { opacity: 0.45; }

.ds-checkbox-wrapper.disabled .checkbox, .ds-checkbox-wrapper.disabled .lab=
el { cursor: not-allowed; }

.ds-checkbox-wrapper.ds-checkbox-wrapper--block { display: flex; }

.ds-checkbox-wrapper.ds-checkbox-wrapper--xs { --font-size: var(--ds-font-s=
ize-xs); --line-height: var(--ds-line-height-xs); }

.ds-checkbox-wrapper.ds-checkbox-wrapper--s { --font-size: var(--ds-font-si=
ze-s); --line-height: var(--ds-line-height-s); }

.ds-checkbox-wrapper.ds-checkbox-wrapper--m { --font-size: var(--ds-font-si=
ze-m); --line-height: var(--ds-line-height-m); }

.ds-checkbox-wrapper.ds-checkbox-wrapper--l { --font-size: var(--ds-font-si=
ze-l); --line-height: var(--ds-line-height-l); }

.ds-checkbox-align-wrapper { vertical-align: bottom; height: var(--line-hei=
ght); align-items: center; display: inline-flex; }

.ds-checkbox { transition: background-color var(--ds-transition-duration)va=
r(--ds-ease-in-out),box-shadow var(--ds-transition-duration)var(--ds-ease-i=
n-out); cursor: pointer; border-radius: 6px; flex-grow: 0; flex-shrink: 0; =
justify-content: center; align-items: center; width: 16px; height: 16px; ma=
rgin-right: 7px; display: inline-flex; position: relative; }

.ds-checkbox svg { width: 12px; height: 12px; color: rgb(var(--ds-rgb-prima=
ry-foreground)); opacity: 0; transition: opacity var(--ds-transition-durati=
on)var(--ds-ease-in-out),transform var(--ds-transition-duration)var(--ds-ea=
se-in-out),box-shadow var(--ds-transition-duration)var(--ds-ease-in-out); t=
ransform: scale(0.8); }

.ds-checkbox.ds-checkbox--filled.ds-checkbox--none { background-color: rgb(=
var(--ds-rgb-input-strong)); }

.ds-checkbox.ds-checkbox--filled.ds-checkbox--active { background-color: rg=
b(var(--ds-rgb-primary)); }

.ds-checkbox.ds-checkbox--bordered.ds-checkbox--none { box-shadow: inset 0 =
0 0 1px rgb(var(--ds-rgb-separator-strong)); }

.ds-checkbox.ds-checkbox--bordered.ds-checkbox--active { box-shadow: inset =
0 0 0 1px rgb(var(--ds-rgb-primary)); }

.ds-checkbox.ds-checkbox--error { background-color: rgba(var(--ds-rgb-error=
)/.06); box-shadow: inset 0 0 0 2px rgb(var(--ds-rgb-error)); }

.ds-checkbox.ds-checkbox--error:focus-visible::after { box-shadow: 0 0 0 2p=
x rgb(var(--ds-rgb-error)); }

.ds-checkbox.ds-checkbox--active { background-color: rgb(var(--ds-rgb-prima=
ry)); }

.ds-checkbox.ds-checkbox--active svg { color: rgb(var(--ds-rgb-primary-fore=
ground)); opacity: 1; transform: scale(1); }

.ds-checkbox { outline: none; }

.ds-checkbox::after { pointer-events: none; content: ""; transition: box-sh=
adow var(--ds-transition-duration)var(--ds-ease-in-out); border-radius: 8px=
; position: absolute; inset: -2px; }

.ds-checkbox:focus-visible::after { box-shadow: 0 0 0 2px rgb(var(--ds-rgb-=
primary)); }

.ds-checkbox-label { user-select: none; cursor: pointer; flex: 1 1 0%; disp=
lay: inline; }

.ds-fade-in-enter { opacity: 0; }

.ds-fade-in-active { opacity: 1; transition: opacity var(--ds-ease-in)var(-=
-ds-transition-duration-fast); }

.ds-fade-in-exit { opacity: 1; }

.ds-fade-in-exit-active { opacity: 0; transition: opacity var(--ds-ease-out=
)var(--ds-transition-duration-fast); }

.ds-modal-wrapper { padding: 16px 0px; display: flex; position: fixed; inse=
t: 0px; overflow: auto; }

.ds-modal-wrapper.ds-modal-wrapper--hide { pointer-events: none; }

.ds-modal-wrapper .ds-modal { box-sizing: border-box; margin: auto; positio=
n: relative; }

.ds-modal-overlay { pointer-events: none; background-color: rgba(0, 0, 0, 0=
.24); position: fixed; inset: 0px; }

.ds-modal-content { font-size: var(--ds-font-size-m); line-height: var(--ds=
-line-height-m); color: var(--ds-modal-content-text-color,rgb(var(--ds-rgb-=
label-1))); box-sizing: border-box; background-color: var(--ds-modal-conten=
t-color,rgb(var(--ds-rgb-elevated))); border-radius: 18px; outline: none; w=
idth: 525px; max-width: calc(-32px + 100vw); padding: 18px 21px 21px; box-s=
hadow: rgba(0, 0, 0, 0.12) 0px 8px 24px; }

.ds-modal-content.ds-modal-content--dialog { width: 420px; }

.ds-modal-content__header-wrapper { color: rgb(var(--ds-rgb-label-1)); just=
ify-content: space-between; margin-bottom: 14px; display: flex; }

.ds-modal-content__header-wrapper .ds-icon-button { margin-top: 4px; }

.ds-modal-content__title { font-weight: var(--ds-font-weight-strong); flex:=
 1 1 0%; min-height: 24px; font-size: 18px; line-height: 24px; }

.ds-modal-content__footer { margin-top: 21px; display: block; }

.ds-modal-content__button-group { justify-content: flex-end; display: flex;=
 }

.ds-modal-content__button-group > :not(:last-child) { margin-right: 14px; }

body.dark .ds-skeleton { --color-start: rgba(255,255,255,.12); --color-end:=
 rgba(255,255,255,.18); }

.ds-skeleton { --color-start: #eee; --color-end: #ddd; max-width: 100%; tra=
nsition: --color-start .3s var(--ds-ease-in-out),--color-end .3s var(--ds-e=
ase-in-out),background-color .3s var(--ds-ease-in-out); background-color: v=
ar(--color-start); user-select: none; animation: 2s cubic-bezier(0.36, 0, 0=
.64, 1) 0s infinite normal none running ds-skeleton-loading; }

.ds-skeleton * { visibility: hidden; }

.ds-skeleton.ds-skeleton--text { border-radius: 4px; }

.ds-skeleton.ds-skeleton--text.ds-skeleton--has-children { width: fit-conte=
nt; }

.ds-skeleton.ds-skeleton--text > span { visibility: hidden; }

.ds-skeleton.ds-skeleton--circle { border-radius: 4096px; }

.ds-skeleton.ds-skeleton--rect { border-radius: 10px; }

.ds-skeleton.ds-skeleton--sharp { border-radius: 0px; }

.ds-skeleton.ds-skeleton--circle.ds-skeleton--xs, .ds-skeleton.ds-skeleton-=
-rect.ds-skeleton--xs { height: var(--ds-input-height-xs); }

.ds-skeleton.ds-skeleton--circle.ds-skeleton--s, .ds-skeleton.ds-skeleton--=
rect.ds-skeleton--s { height: var(--ds-input-height-s); }

.ds-skeleton.ds-skeleton--circle.ds-skeleton--m, .ds-skeleton.ds-skeleton--=
rect.ds-skeleton--m { height: var(--ds-input-height-m); }

@keyframes ds-skeleton-loading {=20
  0% { background: var(--color-start); }
  40% { background: var(--color-end); }
  80% { background: var(--color-start); }
  100% { background: var(--color-start); }
}

.ds-fade-in-zoom-in-expand-enter { opacity: 0; transform: scale(0.8); }

.ds-fade-in-zoom-in-expand-enter-active { opacity: 1; transition: max-heigh=
t var(--ds-ease-in)var(--ds-transition-duration-fast),opacity var(--ds-ease=
-in)var(--ds-transition-duration-fast),transform var(--ds-ease-in)var(--ds-=
transition-duration-fast); transform: scale(1); }

.ds-fade-in-zoom-in-expand-exit { opacity: 1; transform: scale(1); }

.ds-fade-in-zoom-in-expand-exit-active { opacity: 0; transition: max-height=
 var(--ds-ease-out)var(--ds-transition-duration-fast),opacity var(--ds-ease=
-out)var(--ds-transition-duration-fast),transform var(--ds-ease-out)var(--d=
s-transition-duration-fast); transform: scale(0.8); }

.ds-fade-in-zoom-in-expand-top { align-items: flex-start; display: flex; }

.ds-fade-in-zoom-in-expand-center { align-items: center; display: flex; }

.ds-toast { --ds-toast-color: var(--ds-toast-custom-color,rgb(var(--ds-rgb-=
elevated))); --ds-toast-text-color: var(--ds-toast-custom-text-color,rgb(va=
r(--ds-rgb-label-1))); --ds-toast-border-radius: 12px; --ds-toast-font-size=
: var(--ds-toast-custom-font-size,var(--ds-font-size-m)); --ds-toast-line-h=
eight: var(--ds-line-height-m); --ds-toast-padding: 11px 14px; --ds-toast-i=
con-size: 20px; --ds-toast-close-size: 18px; --ds-toast-close-border-radius=
: 6px; --ds-toast-close-icon-size: 10px; }

.ds-toast.ds-toast--filled { --ds-toast-color: rgb(var(--ds-rgb-elevated));=
 --ds-toast-text-color: white; }

.ds-toast.ds-toast--filled.ds-toast--warning { --ds-toast-color: rgb(var(--=
ds-rgb-warning)); --ds-toast-icon-color: white; }

.ds-toast.ds-toast--filled.ds-toast--success { --ds-toast-color: rgb(var(--=
ds-rgb-success)); --ds-toast-icon-color: white; }

.ds-toast.ds-toast--filled.ds-toast--error { --ds-toast-color: rgb(var(--ds=
-rgb-error)); --ds-toast-icon-color: white; }

.ds-toast.ds-toast--warning { --ds-toast-icon-color: rgb(var(--ds-rgb-warni=
ng)); }

.ds-toast.ds-toast--success { --ds-toast-icon-color: rgb(var(--ds-rgb-succe=
ss)); }

.ds-toast.ds-toast--error { --ds-toast-icon-color: rgb(var(--ds-rgb-error))=
; }

.ds-toast-container { z-index: 2000; pointer-events: none; --ds-toast-top-d=
istance: 28px; position: fixed; right: 0px; }

.ds-toast-container.ds-toast-container--top { top: var(--ds-toast-top-dista=
nce); }

.ds-toast-container.ds-toast-container--center { width: 100%; top: 50%; lef=
t: 50%; transform: translateY(-50%) translate(-50%); }

.ds-toast-container.ds-toast-container--center .ds-toast-animation { margin=
-top: 16px; }

.ds-toast-container .ds-toast-animation { width: fit-content; margin-bottom=
: 16px; margin-left: auto; margin-right: auto; }

@supports (top:env(safe-area-inset-top)) {
  .ds-toast-container.ds-toast-container--top { top: calc(var(--ds-toast-to=
p-distance) + env(safe-area-inset-top)); bottom: calc(var(--ds-toast-top-di=
stance) + env(safe-area-inset-bottom)); left: calc(var(--ds-toast-top-dista=
nce) + env(safe-area-inset-left)); right: calc(var(--ds-toast-top-distance)=
 + env(safe-area-inset-right)); }
}

.ds-toast { text-align: center; word-break: break-word; box-sizing: border-=
box; pointer-events: all; background-color: var(--ds-toast-color); border-r=
adius: var(--ds-toast-border-radius); max-width: calc(-28px + 100vw); paddi=
ng: var(--ds-toast-padding); font-size: var(--ds-toast-font-size); color: v=
ar(--ds-toast-text-color); line-height: var(--ds-toast-line-height); box-sh=
adow: var(--ds-toast-custom-box-shadow,0px 4px 15px 0px rgba(191,196,213,.2=
5)); align-items: center; display: flex; }

.ds-toast .ds-toast__icon { width: var(--ds-toast-icon-size); height: var(-=
-ds-toast-icon-size); font-size: var(--ds-toast-icon-size); color: var(--ds=
-toast-icon-color); margin-bottom: auto; margin-right: 10px; display: flex;=
 position: relative; top: 2px; }

.ds-toast .ds-toast__icon svg { width: var(--ds-toast-icon-size); height: v=
ar(--ds-toast-icon-size); }

.ds-toast .ds-toast__close { width: var(--ds-toast-close-size); height: var=
(--ds-toast-close-size); color: var(--ds-toast-custom-close-text-color,#c2c=
2c2); border-radius: var(--ds-toast-close-border-radius); cursor: pointer; =
justify-content: center; align-items: center; margin-left: 10px; display: f=
lex; }

.ds-toast .ds-toast__close:hover { background-color: var(--ds-toast-custom-=
close-hover-color,#f5f5f5); }

.ds-toast .ds-toast__close svg { width: var(--ds-toast-close-icon-size); he=
ight: var(--ds-toast-close-icon-size); }

.ds-toast { color: var(--ds-toast-text-color); }

.ds-toast .ds-toast__content { white-space: pre-wrap; }

.ds-loading { width: 1em; height: 1em; color: inherit; display: inline-flex=
; }

.ds-loading svg { will-change: transform; width: 1em; height: 1em; animatio=
n: 0.6s linear 0s infinite normal none running ds-loading; }

@keyframes ds-loading {=20
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.ds-button { --ds-rgb-error-hover: 218 54 54; }

.ds-button:not(.ds-button--text).ds-button--l { --button-height: var(--ds-i=
nput-height-l); --button-font-size: var(--ds-font-size-m); --button-line-he=
ight: var(--ds-line-height-m); --button-border-radius: 10px; --button-paddi=
ng: 0 14px; --button-icon-size: 18px; --button-icon-margin: 0 8px 0 0; }

.ds-button:not(.ds-button--text).ds-button--m { --button-height: var(--ds-i=
nput-height-m); --button-font-size: var(--ds-font-size-m); --button-line-he=
ight: var(--ds-line-height-m); --button-border-radius: 10px; --button-paddi=
ng: 0 14px; --button-icon-size: 18px; --button-icon-margin: 0 8px 0 0; }

.ds-button:not(.ds-button--text).ds-button--s { --button-height: var(--ds-i=
nput-height-s); --button-font-size: var(--ds-font-size-s); --button-line-he=
ight: var(--ds-line-height-s); --button-border-radius: 10px; --button-paddi=
ng: 0 14px; --button-icon-size: 18px; --button-icon-margin: 0 8px 0 0; }

.ds-button:not(.ds-button--text).ds-button--xs { --button-height: var(--ds-=
input-height-xs); --button-font-size: var(--ds-font-size-xs); --button-line=
-height: var(--ds-line-height-xs); --button-border-radius: 8px; --button-pa=
dding: 0 10px; --button-icon-size: 18px; --button-icon-margin: 0 8px 0 0; }

.ds-button:not(.ds-button--text).ds-button--capsule, .ds-button:not(.ds-but=
ton--text).ds-button--circle { --button-border-radius: 4096px; }

.ds-button.ds-button--text.ds-button--l { --button-height: unset; --button-=
font-size: var(--ds-font-size-l); --button-line-height: var(--ds-line-heigh=
t-l); --button-border-radius: 8px; --button-padding: 0; --button-icon-size:=
 18px; --button-icon-margin: 0 4px 0 0; }

.ds-button.ds-button--text.ds-button--m { --button-height: unset; --button-=
font-size: var(--ds-font-size-m); --button-line-height: var(--ds-line-heigh=
t-m); --button-border-radius: 8px; --button-padding: 0; --button-icon-size:=
 18px; --button-icon-margin: 0 4px 0 0; }

.ds-button.ds-button--text.ds-button--s { --button-height: unset; --button-=
font-size: var(--ds-font-size-s); --button-line-height: var(--ds-line-heigh=
t-s); --button-border-radius: 8px; --button-padding: 0; --button-icon-size:=
 18px; --button-icon-margin: 0 2px 0 0; }

.ds-button.ds-button--text.ds-button--xs { --button-height: unset; --button=
-font-size: var(--ds-font-size-xs); --button-line-height: var(--ds-line-hei=
ght-xs); --button-border-radius: 6px; --button-padding: 0; --button-icon-si=
ze: 18px; --button-icon-margin: 0 2px 0 0; }

.ds-button.ds-button--text.ds-button--capsule { --button-border-radius: 409=
6px; }

.ds-button { --ds-button-color: transparent; }

.ds-button.ds-button--filled.ds-button--primary { --ds-button-color: rgb(va=
r(--ds-rgb-primary)); }

.ds-button.ds-button--filled.ds-button--error { --ds-button-color: rgb(var(=
--ds-rgb-error)); }

.ds-button.ds-button--filled.ds-button--error:hover { --ds-button-color: rg=
b(var(--ds-rgb-error-hover,var(--ds-rgb-error))); }

.ds-button.ds-button--filled.ds-button--secondary { background-color: var(-=
-ds-secondary-button-color,var(--ds-button-color,rgb(var(--ds-rgb-input))))=
; }

.ds-button.ds-button--filled.ds-button--secondary:hover { background-color:=
 var(--ds-secondary-button-hover-color,rgb(var(--ds-rgb-hover))); }

.ds-button.ds-button--filled.ds-button--success { --ds-button-color: rgb(va=
r(--ds-rgb-success)); }

.ds-button.ds-button--filled.ds-button--info { --ds-button-color: rgb(var(-=
-ds-rgb-info)); }

.ds-button.ds-button--filled.ds-button--warning { --ds-button-color: rgb(va=
r(--ds-rgb-warning)); }

.ds-button.ds-button--error { --button-ring-color: rgb(var(--ds-rgb-error))=
; }

.ds-button.ds-button--success { --button-ring-color: rgb(var(--ds-rgb-succe=
ss)); }

.ds-button.ds-button--info { --button-ring-color: rgb(var(--ds-rgb-info)); =
}

.ds-button.ds-button--warning { --button-ring-color: rgb(var(--ds-rgb-warni=
ng)); }

.ds-button { --button-ring-color: rgb(var(--ds-rgb-primary)); }

.ds-button.ds-button--filled.ds-button--primary { --button-text-color: rgb(=
var(--ds-rgb-primary-foreground)); --button-icon-color: rgb(var(--ds-rgb-pr=
imary-foreground)); }

.ds-button.ds-button--filled.ds-button--error { --button-text-color: white;=
 --button-icon-color: white; }

.ds-button.ds-button--filled.ds-button--secondary { --button-text-color: rg=
b(var(--ds-rgb-label-1)); --button-icon-color: rgb(var(--ds-rgb-label-1)); =
}

.ds-button.ds-button--filled.ds-button--success, .ds-button.ds-button--fill=
ed.ds-button--info, .ds-button.ds-button--filled.ds-button--warning { --but=
ton-text-color: white; --button-icon-color: white; }

.ds-button.ds-button--filled:hover { color: var(--ds-button-hover-text-colo=
r,var(--button-text-color)); background-color: var(--ds-button-hover-color,=
var(--ds-button-color,rgb(var(--ds-rgb-hover)))); }

.ds-button.ds-button--bordered.ds-button--secondary { --button-text-color: =
rgb(var(--ds-rgb-label-1)); --button-icon-color: rgb(var(--ds-rgb-label-2))=
; --button-border-color: rgb(var(--ds-rgb-separator-strong)); }

.ds-button.ds-button--bordered:hover { background-color: var(--ds-button-bo=
rdered-hover-color,rgb(var(--ds-rgb-hover))); }

.ds-button.ds-button--text.ds-button--primary { --button-text-color: rgb(va=
r(--ds-rgb-primary)); --button-icon-color: rgb(var(--ds-rgb-primary)); }

.ds-button.ds-button--text.ds-button--error { --button-text-color: rgb(var(=
--ds-rgb-error)); --button-icon-color: rgb(var(--ds-rgb-error)); }

.ds-button.ds-button--text.ds-button--success { --button-text-color: rgb(va=
r(--ds-rgb-success)); --button-icon-color: rgb(var(--ds-rgb-success)); }

.ds-button.ds-button--text.ds-button--info { --button-text-color: rgb(var(-=
-ds-rgb-info)); --button-icon-color: rgb(var(--ds-rgb-info)); }

.ds-button.ds-button--text.ds-button--warning { --button-text-color: rgb(va=
r(--ds-rgb-warning)); --button-icon-color: rgb(var(--ds-rgb-warning)); }

.ds-button.ds-button--text:hover::after { z-index: -1; }

.ds-button { height: var(--button-height); line-height: var(--button-line-h=
eight); font-size: var(--button-font-size); border-radius: var(--button-bor=
der-radius); padding: var(--button-padding); user-select: none; cursor: poi=
nter; white-space: nowrap; box-sizing: border-box; transition: opacity var(=
--ds-transition-duration)var(--ds-ease-in-out),background-color var(--ds-tr=
ansition-duration)var(--ds-ease-in-out); font-variant-numeric: tabular-nums=
; outline: none; align-items: center; text-decoration: none; display: inlin=
e-flex; position: relative; }

.ds-button > .ds-button__icon { line-height: 0; font-size: var(--button-ico=
n-size); width: var(--button-icon-size); height: var(--button-icon-size); m=
argin: var(--button-icon-margin); flex-grow: 0; flex-shrink: 0; justify-con=
tent: center; align-items: center; display: flex; }

.ds-button > .ds-button__icon.ds-button__icon--last-child { margin-right: 0=
px; }

.ds-button.ds-button--circle, .ds-button.ds-button--square { justify-conten=
t: center; align-items: center; }

.ds-button > .ds-button__icon { color: var(--button-icon-color); }

.ds-button { background-color: var(--ds-button-color); }

.ds-button.ds-button--filled { color: var(--button-text-color); }

.ds-button.ds-button--bordered.ds-button--secondary { color: var(--button-t=
ext-color); box-shadow: inset 0 0 0 1px var(--button-border-color); }

.ds-button.ds-button--text, .ds-button.ds-button--borderless { color: var(-=
-button-text-color); }

.ds-button.ds-button--borderless:not(.ds-button--disabled):hover { backgrou=
nd-color: var(--ds-button-hover-color); }

.ds-button::after { pointer-events: none; content: ""; border-radius: calc(=
var(--button-border-radius) + 2px); transition: box-shadow var(--ds-transit=
ion-duration)var(--ds-ease-in-out); position: absolute; inset: -2px; }

.ds-button:focus-visible::after { box-shadow: 0 0 0 2px var(--button-ring-c=
olor); }

.ds-button.ds-button--block { justify-content: center; display: flex; }

.ds-button.ds-button--disabled { opacity: 0.45; cursor: not-allowed; }

.ds-button:not(.ds-button--text).ds-button--circle, .ds-button:not(.ds-butt=
on--text).ds-button--square { width: var(--button-height); }

.ds-button.ds-button--text.ds-button--l::after { inset: -4px -8px; }

.ds-button.ds-button--text.ds-button--m::after, .ds-button.ds-button--text.=
ds-button--s::after { border-radius: 12px; inset: -4px -8px; }

.ds-button.ds-button--text.ds-button--xs::after, .ds-button.ds-button--text=
.ds-button--square::after { inset: -4px; }

.ds-sign-in-with-wechat-dialog__wrapper { justify-content: center; align-it=
ems: center; display: flex; overflow: hidden; }

.ds-sign-in-with-wechat-dialog__wrapper iframe { border: 1px solid rgb(var(=
--ds-rgb-separator-strong)); border-radius: 8px; width: 160px; height: 160p=
x; margin: 16px; padding: 4px; }

.ds-sign-in-with-wechat-dialog__description { flex-direction: row; justify-=
content: center; align-items: center; font-size: 20px; font-weight: 700; li=
ne-height: 24px; display: flex; }

.ds-sign-in-with-wechat-dialog__logo { color: rgb(0, 188, 12); margin-right=
: 8px; }

.ds-sign-in-with-wechat-dialog__agreement { text-align: center; font-size: =
var(--ds-font-size-sp); line-height: var(--ds-line-height-sp); color: rgb(v=
ar(--ds-rgb-label-2)); margin-top: 8px; padding-bottom: 30px; }

.ds-sign-in-with-wechat-dialog__agreement a { color: rgb(var(--ds-rgb-label=
-1)); }

.ds-sign-in-form__form-footer { justify-content: space-between; margin-top:=
 12px; display: flex; }

.ds-sign-up-form__tabs { font-weight: var(--ds-font-weight-strong); color: =
rgb(var(--ds-rgb-label-2)); justify-content: center; margin: 0px auto 20px;=
 }

.ds-sign-up-form__footer-placeholder { height: 10px; }

.ds-sign-up-form__tips { text-align: left; font-size: var(--ds-font-size-sp=
); line-height: var(--ds-line-height-sp); color: rgb(var(--ds-rgb-label-2))=
; margin-bottom: 4px; }

.ds-sign-up-form__register-button { margin-top: 21px; }

.ds-sign-up-form__icon { justify-content: center; align-items: center; marg=
in: auto auto 24px; line-height: 0; display: flex; }

.ds-sign-up-form__icon > svg { height: 44px; }

.ds-sign-up-form__description { font-size: var(--ds-font-size-sp); line-hei=
ght: var(--ds-line-height-sp); color: rgb(var(--ds-rgb-label-2)); margin-bo=
ttom: 16px; }

.ds-sign-up-form__form-footer { justify-content: space-between; margin-top:=
 14px; display: flex; }

.ds-tabs { font-size: var(--ds-font-size-m); line-height: var(--ds-line-hei=
ght-m); height: 32px; display: flex; }

.ds-tab { margin-right: var(--ds-tab-gap); cursor: pointer; align-items: ce=
nter; height: 100%; display: flex; position: relative; }

.ds-tab:last-child { margin-right: 0px; }

.ds-tab.ds-tab--active { color: rgb(var(--ds-rgb-primary)); }

.ds-tab .ds-tab__line { background-color: rgb(var(--ds-rgb-primary)); borde=
r-top-left-radius: 3px; border-top-right-radius: 3px; height: 3px; position=
: absolute; bottom: 0px; left: -3px; right: -3px; }

.ds-tab .ds-tab__content { position: relative; }

.ds-tab .ds-tab__content::after { content: ""; transition: box-shadow var(-=
-ds-transition-duration)var(--ds-ease-in-out); border-radius: 8px; position=
: absolute; inset: -4px; }

.ds-tab:focus { outline: none; }

.ds-tab:focus-visible .ds-tab__content::after { box-shadow: 0 0 0 2px rgb(v=
ar(--ds-rgb-primary)); }

.ds-divider { justify-content: center; align-items: center; margin: 8px 0px=
; display: flex; }

.ds-divider__left, .ds-divider__right { background-color: rgb(var(--ds-rgb-=
separator)); flex-grow: 1; height: 1px; }

.ds-divider__content { font-size: var(--ds-font-size-s); line-height: var(-=
-ds-line-height-s); color: rgb(var(--ds-rgb-label-3)); flex-shrink: 0; marg=
in: 0px 10px; }

.ds-divider--strong { font-weight: var(--ds-font-weight-strong); }

.ds-divider--strong .ds-divider__content { color: rgb(var(--ds-rgb-primary)=
); font-size: var(--ds-font-size-s); }

.ds-divider--strong .ds-divider__left, .ds-divider--strong .ds-divider__rig=
ht { background: rgb(var(--ds-rgb-primary)); border-color: rgb(var(--ds-rgb=
-primary)); height: 3px; transform: scaleY(0.5); }

.ds-forgot-password-form__icon { justify-content: center; margin: auto auto=
 28px; line-height: 0; display: flex; }

.ds-forgot-password-form__icon > svg { height: 44px; }

.ds-forgot-password-form__title { color: rgb(var(--ds-rgb-label-1)); font-s=
ize: 23px; line-height: 23px; font-weight: var(--ds-font-weight-strong); te=
xt-align: center; margin-bottom: 21px; }

.ds-forgot-password-form__loading-wrapper { color: rgb(var(--ds-rgb-primary=
)); justify-content: center; align-items: center; padding: 28px 0px; font-s=
ize: 28px; display: flex; }

.ds-forgot-password-form__form-footer { justify-content: flex-end; margin-t=
op: 14px; display: flex; }

.ds-forgot-password-form__description { font-size: var(--ds-font-size-sp); =
line-height: var(--ds-line-height-sp); color: rgb(var(--ds-rgb-label-2)); m=
argin-bottom: 21px; }

.ds-enhanced-text__p { margin: 0px 0px 14px; }

.ds-enhanced-text__p:last-child { margin: 0px; }

.ds-enhanced-text__bold { font-weight: 700; }

.ds-authorized-container__loading { color: rgb(var(--ds-rgb-primary)); just=
ify-content: center; align-items: center; font-size: 21px; display: flex; }

.ds-sider__policies-footer { color: rgb(var(--ds-rgb-label-2)); flex-wrap: =
wrap; align-items: center; padding: 0px 12px; font-size: 14px; line-height:=
 22px; display: flex; }

.ds-banned-container__wrapper { font-size: var(--ds-font-size-m); color: rg=
b(var(--ds-rgb-label-1)); flex-direction: column; justify-content: center; =
align-items: center; display: flex; }

.ds-banned-container__logo, .ds-banned-container__slogan { line-height: var=
(--ds-line-height-m); text-align: center; margin-bottom: 20px; padding: 0px=
 20px; }

@media not all and (min-width: 640px) {
  .ds-banned-container__logo svg { width: 70%; }
}

.ds-auth-footer { font-size: var(--ds-font-size-sp); line-height: var(--ds-=
line-height-sp); flex-wrap: wrap; justify-content: center; align-items: cen=
ter; width: 100%; display: flex; }

.ds-text.ds-text--block { display: block; }

.ds-text.ds-text--monospace { font-family: var(--ds-font-family-code); }

.ds-text.ds-text--fxs { font-size: var(--ds-font-size-xs); }

.ds-text.ds-text--fxsp { font-size: var(--ds-font-size-xsp); }

.ds-text.ds-text--fs { font-size: var(--ds-font-size-s); }

.ds-text.ds-text--fsp { font-size: var(--ds-font-size-sp); }

.ds-text.ds-text--fm { font-size: var(--ds-font-size-m); }

.ds-text.ds-text--lxs { line-height: var(--ds-line-height-xs); }

.ds-text.ds-text--lxsp { line-height: var(--ds-line-height-xsp); }

.ds-text.ds-text--ls { line-height: var(--ds-line-height-s); }

.ds-text.ds-text--lsp { line-height: var(--ds-line-height-sp); }

.ds-text.ds-text--lm { line-height: var(--ds-line-height-m); }

.ds-text.ds-text--label1 { color: rgb(var(--ds-rgb-label-1)); }

.ds-text.ds-text--label2 { color: rgb(var(--ds-rgb-label-2)); }

.ds-text.ds-text--label3 { color: rgb(var(--ds-rgb-label-3)); }

.ds-floating-position-wrapper { width: max-content; position: absolute; top=
: 0px; left: 0px; }

.ds-tooltip { --tooltip-text-color: #fff; --tooltip-color: #222; --tooltip-=
box-shadow: 0 6px 16px 0 rgba(0,0,0,.08),0 3px 6px -4px rgba(0,0,0,.12),0 9=
px 28px 8px rgba(0,0,0,.05); }

.ds-tooltip.ds-tooltip--m { --tooltip-font-size: var(--ds-font-size-m); --t=
ooltip-line-height: var(--ds-line-height-m); --tooltip-padding: 6px 12px; -=
-tooltip-arrow-size: 8px; }

.ds-tooltip.ds-tooltip--s { --tooltip-font-size: var(--ds-font-size-s); --t=
ooltip-line-height: var(--ds-line-height-s); --tooltip-padding: 6px 10px; -=
-tooltip-arrow-size: 6px; }

body.dark .ds-tooltip { --tooltip-text-color: rgb(var(--ds-rgb-label-1)); -=
-tooltip-color: rgb(var(--ds-rgb-elevated)); --tooltip-box-shadow: 0 6px 16=
px 0 rgba(0,0,0,.08),0 3px 6px -4px rgba(0,0,0,.12),0 9px 28px 8px rgba(0,0=
,0,.05); }

.ds-tooltip.ds-tooltip--show-shadow, .ds-tooltip.ds-tooltip--show-shadow__a=
rrow, body.dark .ds-tooltip { box-shadow: var(--tooltip-box-shadow); }

.ds-tooltip { padding: var(--tooltip-padding); font-size: var(--tooltip-fon=
t-size); line-height: var(--tooltip-line-height); background-color: var(--t=
ooltip-color); color: var(--tooltip-text-color); max-width: var(--ds-toast-=
max-width,calc(100vw - 28px)); border-radius: 10px; position: relative; }

.ds-tooltip__arrow { color: var(--tooltip-color); z-index: 1; justify-conte=
nt: center; align-items: flex-start; display: flex; position: absolute; }

.ds-tooltip__arrow.ds-tooltip__arrow--sharp { width: calc(var(--tooltip-arr=
ow-size)*1.414); height: calc(var(--tooltip-arrow-size)*1.414); background-=
color: var(--tooltip-color); }

.ds-tooltip__arrow.ds-tooltip__arrow--soft { width: calc(var(--tooltip-arro=
w-size)*2); height: calc(var(--tooltip-arrow-size)*2); }

.ds-tooltip__soft-arrow { height: var(--tooltip-arrow-size); flex-shrink: 0=
; transform: translateY(100%); }

.ds-tooltip__arrow.ds-tooltip__arrow--sharp[ds-floating-placement^=3D"top"]=
 { top: 100%; transform: translateY(-50%) rotate(45deg); }

.ds-tooltip__arrow.ds-tooltip__arrow--sharp[ds-floating-placement^=3D"botto=
m"] { bottom: 100%; transform: translateY(50%) rotate(45deg); }

.ds-tooltip__arrow.ds-tooltip__arrow--sharp[ds-floating-placement^=3D"left"=
] { left: 100%; transform: translate(-50%) rotate(45deg); }

.ds-tooltip__arrow.ds-tooltip__arrow--sharp[ds-floating-placement^=3D"right=
"] { right: 100%; transform: translate(50%) rotate(45deg); }

.ds-tooltip__arrow.ds-tooltip__arrow--soft[ds-floating-placement^=3D"top"] =
{ top: 100%; transform: translateY(-50%); }

.ds-tooltip__arrow.ds-tooltip__arrow--soft[ds-floating-placement^=3D"bottom=
"] { bottom: 100%; transform: translateY(50%) rotate(180deg); }

.ds-tooltip__arrow.ds-tooltip__arrow--soft[ds-floating-placement^=3D"left"]=
 { left: 100%; transform: translate(-50%) rotate(270deg); }

.ds-tooltip__arrow.ds-tooltip__arrow--soft[ds-floating-placement^=3D"right"=
] { right: 100%; transform: translate(50%) rotate(90deg); }

.ds-flex { display: flex; }

.ds-mobile-verfication-form__icon { justify-content: center; margin: auto a=
uto 28px; line-height: 0; display: flex; }

.ds-mobile-verfication-form__icon > svg { height: 44px; }

.ds-mobile-verfication-form__title { color: rgb(var(--ds-rgb-label-1)); fon=
t-size: 23px; line-height: 23px; font-weight: var(--ds-font-weight-strong);=
 text-align: center; margin-bottom: 21px; }

.ds-mobile-verfication-form__loading-wrapper { color: rgb(var(--ds-rgb-prim=
ary)); justify-content: center; align-items: center; padding: 28px 0px; fon=
t-size: 28px; display: flex; }

.ds-mobile-verfication-form__description { font-size: var(--ds-font-size-sp=
); line-height: var(--ds-line-height-sp); color: rgb(var(--ds-rgb-label-2))=
; margin-bottom: 21px; }

.ds-banner { --ds-banner-font-size: var(--ds-font-size-m); --ds-banner-line=
-height: var(--ds-line-height-m); --ds-banner-text-color: rgb(var(--ds-rgb-=
primary-foreground)); --ds-banner-padding: 8px 14px; --ds-banner-close-icon=
-color: rgb(var(--ds-rgb-primary-foreground)); }

.ds-banner.ds-banner--info { --ds-banner-color: rgb(var(--ds-rgb-info)); }

.ds-banner.ds-banner--warning { --ds-banner-color: rgb(var(--ds-rgb-warning=
)); }

.ds-banner.ds-banner--error { --ds-banner-color: rgb(var(--ds-rgb-error)); =
}

.ds-banner { background-color: var(--ds-banner-color); font-size: var(--ds-=
banner-font-size); line-height: var(--ds-banner-line-height); color: var(--=
ds-banner-text-color); padding: var(--ds-banner-padding); display: flex; }

.ds-banner__content { text-align: center; text-wrap: balance; flex: 1 1 0%;=
 padding-right: 14px; }

.ds-banner__close-wrapper { min-height: var(--ds-banner-line-height); width=
: 21px; height: 21px; color: var(--ds-banner-close-icon-color); flex-grow: =
0; flex-shrink: 0; align-items: center; margin-left: 8px; display: flex; }

.ds-notification-container { z-index: 1500; pointer-events: none; flex-dire=
ction: column; align-items: center; display: flex; position: fixed; bottom:=
 16px; right: 16px; }

.ds-notification-container .ds-notification { background-color: rgb(var(--d=
s-rgb-elevated)); pointer-events: all; width: 315px; max-width: calc(-32px =
+ 100vw); color: rgb(var(--ds-rgb-label-1)); font-size: 14px; line-height: =
var(--ds-line-height-m); border-radius: 10px; flex-wrap: nowrap; margin-top=
: 14px; padding: 14px; display: flex; position: relative; box-shadow: rgba(=
0, 0, 0, 0.12) 0px 3px 6px -4px, rgba(0, 0, 0, 0.08) 0px 6px 16px, rgba(0, =
0, 0, 0.05) 0px 9px 28px 8px; }

.ds-notification-container .ds-notification .ds-notification__main { flex-f=
low: column; flex-grow: 1; display: flex; }

.ds-notification-container .ds-notification .ds-notification__content { col=
or: rgb(var(--ds-rgb-label-2)); font-size: var(--ds-font-size-m); line-heig=
ht: var(--ds-line-height-m); }

.ds-notification-container .ds-notification .ds-notification__title { font-=
weight: var(--ds-font-weight-strong); flex-grow: 1; min-height: 21px; margi=
n-bottom: 8px; font-size: 16px; line-height: 21px; }

.ds-notification-container .ds-notification .ds-notification__footer { font=
-size: var(--ds-font-size-m); line-height: var(--ds-line-height-m); margin-=
top: 8px; }

.ds-notification-container .ds-notification .ds-notification__close-wrapper=
 { height: 21px; color: rgb(var(--ds-rgb-label-2)); flex-grow: 0; flex-shri=
nk: 0; margin-left: 8px; }

.ds-notification-container .ds-notification .ds-notification__icon-wrapper =
{ flex-grow: 0; flex-shrink: 0; width: 21px; margin-right: 10px; }

.ds-notification-container .ds-notification .ds-notification__icon { justif=
y-content: center; align-items: center; width: 21px; height: 21px; margin-r=
ight: 10px; font-size: 21px; display: flex; }

.ds-notification-container .ds-notification .ds-notification__icon svg { fl=
ex-shrink: 0; width: 24px; height: 24px; }

.ds-notification-container .ds-notification .ds-notification__icon--warning=
 { color: rgb(249, 115, 22); }

.ds-notification-container .ds-notification .ds-notification__icon--success=
 { color: rgb(34, 197, 94); }

.ds-notification-container .ds-notification .ds-notification__icon--error {=
 color: rgb(var(--ds-rgb-error)); }

.c994dda2 { box-sizing: border-box; flex-direction: column; align-items: st=
retch; min-height: 100vh; display: flex; }

@supports (top:env(safe-area-inset-top)) {
  .c994dda2 { padding-top: env(safe-area-inset-top); padding-left: env(safe=
-area-inset-left); padding-right: env(safe-area-inset-right); padding-botto=
m: env(safe-area-inset-bottom); }
}

.c279e7ba { flex-shrink: 0; }

.ad066d2e { flex-direction: column; flex-grow: 1; flex-shrink: 0; justify-c=
ontent: safe center; align-items: safe center; display: flex; }

.cc447402 { justify-content: center; padding: 32px 0px 20px; display: flex;=
 }

@media not all and (min-width: 768px) {
  .cc447402 { padding: 32px 18px 20px; }
}

.e2394955 { justify-content: center; align-items: center; margin: auto auto=
 24px; line-height: 0; display: flex; }

.e2394955 > svg { height: 44px; }

.a02c1715 { justify-content: center; align-items: center; display: flex; po=
sition: fixed; inset: 0px; }

.e32c2b1a { flex-direction: column; justify-content: center; align-items: c=
enter; max-width: calc(-32px + 100vw); display: flex; }

.bde80c41 { font-size: 32px; font-weight: var(--ds-font-weight-strong); col=
or: rgb(var(--ds-rgb-label-1)); margin-bottom: 21px; line-height: 46px; }

.e693efc9 { display: flex; }

.e693efc9 > :not(:last-child) { margin-right: 16px; }

.cf2d5336 { white-space: pre-wrap; color: rgb(var(--ds-rgb-label-2)); width=
: 600px; max-width: calc(-32px + 100vw); font-size: 12px; line-height: 18px=
; }

.dd7e4fda { font-size: var(--ds-font-size-m); line-height: var(--ds-font-si=
ze-m); color: rgb(var(--ds-rgb-label-2)); user-select: none; white-space: n=
owrap; font-variant-numeric: tabular-nums; font-weight: 500; }

[data-ds-dark-theme] .dd7e4fda { color: rgb(205, 212, 223); }

.d6322366 { flex-direction: column; display: flex; }

.d6322366 > * + * { margin-top: 16px; }

.ddff0051 { display: flex; }

.ddff0051 > :not(:last-child) { margin-right: 16px; }

.ddff0051 { justify-content: flex-end; }

[data-ds-dark-theme] .d6322366 .ds-radio-button-group .ds-radio-button.ds-r=
adio-button--active { --radio-button-group-button-text-color-active: 255 25=
5 255; background-color: transparent; }

[data-ds-dark-theme] .d6322366 .ds-radio-button-group .ds-radio-button.ds-r=
adio-button--active::after { box-shadow: rgb(77, 107, 254) 0px 0px 0px 2px;=
 }

.ds-radio-button-group.ds-radio-button-group--bordered1 { --radio-button-gr=
oup-button-color: transparent; --radio-button-group-button-box-shadow: inse=
t 0 0 0 1px rgb(var(--ds-rgb-separator-strong)); --radio-button-group-butto=
n-box-shadow-active: inset 0 0 0 1px rgb(var(--ds-rgb-primary)); --radio-bu=
tton-group-button-box-shadow-active-focus: inset 0 0 0 1px rgb(var(--ds-rgb=
-primary)); --radio-button-group-button-box-shadow-focus: inset 0 0 0 1px r=
gb(var(--ds-rgb-separator-strong)); --radio-button-group-button-color-activ=
e: rgb(var(--ds-rgb-primary)); --radio-button-group-button-text-color-activ=
e: rgb(var(--ds-rgb-primary-foreground)); --radio-button-group-button-outli=
ne-box-shadow-focus: 0 0 0 2px rgb(var(--ds-rgb-primary)); }

.ds-radio-button-group.ds-radio-button-group--bordered2 { --radio-button-gr=
oup-button-color: transparent; --radio-button-group-button-box-shadow: inse=
t 0 0 0 1px rgb(var(--ds-rgb-separator-strong)); --radio-button-group-butto=
n-box-shadow-active: inset 0 0 0 2px rgb(var(--ds-rgb-primary)); --radio-bu=
tton-group-button-box-shadow-active-focus: inset 0 0 0 2px rgb(var(--ds-rgb=
-primary)),0 0 0 1px rgb(var(--ds-rgb-primary)); --radio-button-group-butto=
n-box-shadow-focus: inset 0 0 0 1px rgba(var(--ds-rgb-primary)/.48),0 0 0 1=
px rgba(var(--ds-rgb-primary)/.48); --radio-button-group-button-color-activ=
e: transparent; --radio-button-group-button-text-color-active: rgb(var(--ds=
-rgb-primary)); --radio-button-group-button-outline-box-shadow-focus: none;=
 }

.ds-radio-button-group.ds-radio-button-group--bordered3 { --radio-button-gr=
oup-button-color: transparent; --radio-button-group-button-box-shadow: inse=
t 0 0 0 1px rgb(var(--ds-rgb-separator-strong)); --radio-button-group-butto=
n-box-shadow-active: inset 0 0 0 1px transparent; --radio-button-group-butt=
on-box-shadow-active-focus: inset 0 0 0 1px transparent; --radio-button-gro=
up-button-box-shadow-focus: inset 0 0 0 1px rgb(var(--ds-rgb-separator-stro=
ng)); --radio-button-group-button-color-active: rgba(var(--ds-rgb-primary)/=
.16); --radio-button-group-button-text-color-active: rgb(var(--ds-rgb-prima=
ry)); --radio-button-group-button-outline-box-shadow-focus: 0 0 0 2px rgb(v=
ar(--ds-rgb-primary)); }

.ds-radio-button-group.ds-radio-button-group--filled1 { --radio-button-grou=
p-button-color: rgb(var(--ds-rgb-input)); --radio-button-group-button-box-s=
hadow: none; --radio-button-group-button-box-shadow-active: none; --radio-b=
utton-group-button-box-shadow-active-focus: none; --radio-button-group-butt=
on-box-shadow-focus: none; --radio-button-group-button-color-active: rgba(v=
ar(--ds-rgb-primary)/.16); --radio-button-group-button-text-color-active: r=
gb(var(--ds-rgb-primary)); --radio-button-group-button-outline-box-shadow-f=
ocus: 0 0 0 2px rgb(var(--ds-rgb-primary)); }

.ds-radio-button-group.ds-radio-button-group--filled2 { --radio-button-grou=
p-button-color: rgb(var(--ds-rgb-input)); --radio-button-group-button-box-s=
hadow: none; --radio-button-group-button-box-shadow-active: none; --radio-b=
utton-group-button-box-shadow-active-focus: none; --radio-button-group-butt=
on-box-shadow-focus: none; --radio-button-group-button-color-active: rgb(va=
r(--ds-rgb-primary)); --radio-button-group-button-text-color-active: rgb(va=
r(--ds-rgb-primary-foreground)); --radio-button-group-button-outline-box-sh=
adow-focus: 0 0 0 2px rgb(var(--ds-rgb-primary)); }

.ds-radio-button-group { color: var(--radio-button-group-button-text-color)=
; transition: opacity var(--ds-transition-duration)var(--ds-ease-in-out); f=
lex-wrap: wrap; margin-bottom: -12px; display: flex; }

.ds-radio-button-group.ds-radio-button-group--disabled .ds-radio-button, .d=
s-radio-button-group.ds-radio-button-group--disabled .ds-radio-button__inpu=
t { cursor: not-allowed; }

.ds-radio-button-group.ds-radio-button-group--disabled .ds-radio-button { o=
pacity: 0.45; }

.ds-radio-button-group .ds-radio-button__input { border-radius: inherit; op=
acity: 0; z-index: 1; cursor: pointer; border: 0px; margin: 0px; position: =
absolute; inset: 0px; }

.ds-radio-button-group .ds-radio-button-group-tail { align-items: center; h=
eight: 32px; margin-bottom: 12px; display: flex; }

.ds-radio-button-group .ds-radio-button { box-shadow: var(--radio-button-gr=
oup-button-box-shadow); user-select: none; cursor: pointer; background-colo=
r: var(--radio-button-group-button-color); box-sizing: border-box; height: =
32px; transition: box-shadow var(--ds-transition-duration)var(--ds-ease-in-=
out),background-color var(--ds-transition-duration)var(--ds-ease-in-out),co=
lor var(--ds-transition-duration)var(--ds-ease-in-out); border-radius: 8px;=
 align-items: center; margin-bottom: 12px; padding: 0px 12px; font-size: 14=
px; line-height: 14px; display: flex; position: relative; }

.ds-radio-button-group .ds-radio-button:not(:last-child) { margin-right: 12=
px; }

.ds-radio-button-group .ds-radio-button::after { content: ""; pointer-event=
s: none; transition: box-shadow var(--ds-transition-duration)var(--ds-ease-=
in-out); border-radius: 10px; display: block; position: absolute; inset: -2=
px; }

.ds-radio-button-group .ds-radio-button.ds-radio-button--focus::after { box=
-shadow: var(--radio-button-group-button-outline-box-shadow-focus); }

.ds-radio-button-group .ds-radio-button:focus-within { box-shadow: var(--ra=
dio-button-group-button-box-shadow-focus); }

.ds-radio-button-group .ds-radio-button.ds-radio-button--active { color: va=
r(--radio-button-group-button-text-color-active); box-shadow: var(--radio-b=
utton-group-button-box-shadow-active); background-color: var(--radio-button=
-group-button-color-active); }

.ds-radio-button-group .ds-radio-button.ds-radio-button--active:focus-withi=
n { box-shadow: var(--radio-button-group-button-box-shadow-active-focus); }

.ds-textarea { --ds-textarea-text-color: rgb(var(--ds-rgb-label-1)); --ds-t=
extarea-border-radius: 10px; --ds-textarea-font-size: var(--ds-font-size-m)=
; --ds-textarea-line-height: var(--ds-line-height-m); --ds-textarea-padding=
: 6px 10px; }

.ds-textarea--bordered { --ds-textarea-color: transparent; --ds-textarea-bo=
rder-color: rgb(var(--ds-rgb-separator-strong)); }

.ds-textarea--filled { --ds-textarea-color: rgb(var(--ds-rgb-input)); --ds-=
textarea-border-color: transparent; }

.ds-textarea { color: var(--ds-textarea-text-color); font-size: var(--ds-te=
xtarea-font-size); line-height: var(--ds-textarea-line-height); box-sizing:=
 border-box; border-radius: var(--ds-textarea-border-radius); background-co=
lor: var(--ds-textarea-color); max-width: 100%; transition: background-colo=
r var(--ds-transition-duration)var(--ds-ease-in-out),box-shadow var(--ds-tr=
ansition-duration)var(--ds-ease-in-out),color var(--ds-transition-duration)=
var(--ds-ease-in-out); box-shadow: inset 0 0 0 1px var(--ds-textarea-border=
-color); position: relative; }

.ds-textarea.ds-textarea--focused { background-color: var(--ds-textarea-foc=
us-color,rgb(var(--ds-rgb-input-focus))); box-shadow: inset 0 0 0 2px var(-=
-ds-textarea-focus-border-color,rgb(var(--ds-rgb-primary))); }

.ds-textarea { box-sizing: border-box; }

.ds-textarea .ds-textarea__textarea, .ds-textarea .ds-textarea__mirror { fo=
nt-size: inherit; line-height: inherit; padding: var(--ds-textarea-padding)=
; word-break: break-word; font-family: inherit; }

.ds-textarea .ds-textarea__mirror { white-space: pre-wrap; pointer-events: =
none; visibility: hidden; max-width: 100%; }

.ds-textarea .ds-textarea__textarea { box-sizing: border-box; width: 100%; =
color: inherit; background-color: rgba(var(--ds-rgba-transparent)); border:=
 none; outline: none; display: block; }

.ds-textarea .ds-textarea__textarea::placeholder { color: rgb(var(--ds-rgb-=
label-3)); }

.ds-textarea .ds-textarea__textarea::placeholder { color: rgb(var(--ds-rgb-=
label-3)); }

.ds-textarea .ds-textarea__textarea::placeholder { color: rgb(var(--ds-rgb-=
label-3)); }

.ds-textarea.ds-textarea--auto-height .ds-textarea__textarea, .ds-textarea.=
ds-textarea--auto-width .ds-textarea__textarea { resize: none; position: ab=
solute; inset: 0px; }

.ds-textarea.ds-textarea--auto-height { width: 100%; }

.ds-textarea.ds-textarea--auto-width { width: fit-content; }

.d9f56c96 { border: 1px solid var(--button-border-color); border-radius: 14=
px; justify-content: center; align-items: center; height: 28px; margin-righ=
t: 10px; padding: 0px 7px; display: flex; }

.d9f56c96 .ds-button__icon { margin-right: 4px; }

.d9f56c96.ds-button.ds-button--disabled { opacity: 1; }

.d9f56c96 .ad0c98fd { font-size: 12px; line-height: 17px; }

@media not all and (min-width: 640px) {
  .d9f56c96 { margin-right: 10px; }
}

.a6d716f5 { background: var(--dsr-button-grey-1); user-select: none; border=
-radius: 10px; justify-content: center; align-items: center; width: fit-con=
tent; padding: 7px 14px; display: flex; }

.a6d716f5:hover { background: var(--dsr-button-grey-0); }

.a6d716f5 { color: var(--dsr-text-1); margin-bottom: 12px; font-size: 12px;=
 line-height: 18px; }

.a6d716f5.db5991dd { cursor: pointer; }

.acbf4957 { margin-right: 6px; }

.f4262477 { margin-left: 6px; }

.ebf91e35 { flex-direction: column; display: flex; }

.ebf91e35.b35873a { cursor: pointer; }

.ebf91e35 .a93786a8 { align-items: center; gap: 6px; font-size: 12px; line-=
height: 17px; display: flex; }

.ebf91e35 .a93786a8 .c16074e9 { border-radius: 50%; flex-shrink: 0; width: =
20px; height: 20px; overflow: hidden; }

.ebf91e35 .a93786a8 .c16074e9 .siteIcon_img { object-fit: cover; width: 100=
%; height: 100%; }

.ebf91e35 .a93786a8 .c16074e9 .siteIcon_loading { background-color: rgb(245=
, 245, 245); justify-content: center; align-items: center; height: 100%; di=
splay: flex; }

.ebf91e35 .a93786a8 .c16074e9 .siteIcon_fallback { color: rgb(139, 139, 139=
); background-color: rgb(217, 217, 217); }

.ebf91e35 .a93786a8 .d2eca804 { color: rgb(38, 38, 38); font-weight: 500; }

.ebf91e35 .a93786a8 .caa1ee14 { color: rgb(163, 163, 163); font-size: 12px;=
 }

.ebf91e35 .a93786a8 .ba26051b { font-variant: tabular-nums; color: rgb(64, =
64, 64); background: rgb(229, 229, 229); border-radius: 10px; flex-shrink: =
0; justify-content: center; align-items: center; height: 20px; margin-left:=
 auto; padding: 0px 6px; display: flex; }

.ebf91e35 .f664d0b2 { color: rgb(38, 38, 38); margin-top: 6px; font-size: 1=
6px; font-weight: 600; line-height: 22px; }

.ebf91e35 .c56273f9 { color: rgb(117, 117, 117); margin-top: 6px; font-size=
: 14px; line-height: 20px; }

.search-view-card__title, .search-view-card__snippet { -webkit-line-clamp: =
2; -webkit-box-orient: vertical; display: -webkit-box; overflow: hidden; }

@media not all and (min-width: 640px) {
  .search-view-card__title { -webkit-line-clamp: 1; }
  .ebf91e35 .c56273f9 { font-size: 13px; }
}

[data-ds-dark-theme] .ebf91e35 .a93786a8 .c16074e9 .siteIcon_fallback { col=
or: rgb(248, 250, 255); background-color: rgb(105, 105, 115); }

[data-ds-dark-theme] .ebf91e35 .a93786a8 .d2eca804 { color: rgb(248, 250, 2=
55); }

[data-ds-dark-theme] .ebf91e35 .a93786a8 .caa1ee14 { color: rgb(220, 220, 2=
20); }

[data-ds-dark-theme] .ebf91e35 .a93786a8 .ba26051b { color: rgb(50, 51, 62)=
; background: rgba(205, 212, 223, 0.75); }

[data-ds-dark-theme] .ebf91e35 .f664d0b2 { color: rgb(248, 250, 255); }

[data-ds-dark-theme] .ebf91e35 .c56273f9 { color: rgb(220, 220, 220); }

.de80ba65 { background: rgb(255, 255, 255); border: 0.5px solid rgb(220, 22=
0, 220); border-radius: 12px; max-width: 355px; padding: 20px; box-shadow: =
rgba(133, 138, 154, 0.25) 0px 4px 16px; }

[data-ds-dark-theme] .de80ba65 { background: rgb(75, 75, 91); border: 1px s=
olid rgb(90, 90, 105); box-shadow: rgba(51, 51, 51, 0.75) 0px 4px 16px; }

.edb250b1 { margin-bottom: 13px; }

.edb250b1 .e1675d8b { color: rgb(139, 139, 139); white-space: pre-wrap; mar=
gin: 0px; padding: 0px 0px 0px 13px; line-height: 26px; position: relative;=
 }

.edb250b1 .e1675d8b .ecc93a3b { border-left: 2px solid rgb(229, 229, 229); =
height: calc(100% - 10px); margin-top: 5px; position: absolute; top: 0px; l=
eft: 0px; }

.edb250b1 .e1675d8b .ba94db8a { margin: 1em 0px; }

[data-ds-dark-theme] .edb250b1 .e1675d8b { color: rgb(166, 166, 166); }

[data-ds-dark-theme] .edb250b1 .ecc93a3b { border-color: rgb(78, 78, 86); }

.be6c1f64 { margin-right: 6px; }

.f883e7c0 { margin-left: 6px; }

.bf9dce37 { border: 1.5px solid var(--color); user-select: none; background=
-color: rgb(255, 255, 255); border-radius: 50%; flex-shrink: 0; justify-con=
tent: center; align-items: center; display: flex; position: relative; }

.cb792bd9 { color: var(--color); word-break: break-all; line-height: 1.2; f=
ont-size: var(--font-size); font-weight: 500; }

.db33d433 { font-variant: tabular-nums; text-align: center; }

.fdc09121 { object-fit: cover; border-radius: 50%; flex-shrink: 0; }

.f9bf7997 { font-size: var(--ds-font-size-m); color: rgb(var(--ds-rgb-label=
-1)); margin-bottom: 12px; padding-left: 48px; position: relative; }

.f9bf7997.d7dc56a8 .abe97156, .f9bf7997.fa7a8e16 .abe97156 { opacity: 1; }

.f9bf7997.d7dc56a8 { margin-bottom: 0px; }

.f9bf7997.d7dc56a8:not(.c05b5566) { margin-bottom: 32px; }

.f9bf7997:hover .abe97156 { opacity: 1; }

.f9bf7997:focus-within .abe97156 { opacity: 1; }

.abe97156 { opacity: 0; transition: opacity var(--ds-transition-duration)va=
r(--ds-ease-in-out); will-change: opacity; }

.dfa60d66 { position: absolute; top: -2px; left: 0px; }

.eb23581b { background-color: rgb(255, 255, 255); border-radius: 50%; justi=
fy-content: center; align-items: center; width: 32px; height: 32px; display=
: flex; box-shadow: rgb(213, 228, 255) 0px 0px 0px 1px; }

.eb23581b svg { width: 28px; height: 28px; }

.b4e4476b { color: rgb(144, 144, 144); --ds-md-zoom: 1.143; line-height: ca=
lc(var(--ds-md-zoom)*var(--ds-line-height-m,25px)); height: calc(var(--ds-m=
d-zoom)*var(--ds-line-height-m,25px)); box-sizing: border-box; padding-top:=
 4px; display: flex; }

.f297cc6e { height: 28px; }

[data-ds-dark-theme] .eb23581b { box-shadow: none; background-color: rgb(50=
, 51, 62); border: 1px solid rgb(79, 100, 123); }

[data-ds-dark-theme] .f9bf7997 { color: rgb(248, 250, 255); }

.a4380d7b { flex-wrap: wrap; gap: 8px; max-height: 180px; display: flex; ov=
erflow-y: auto; }

.cd190a50 { background-color: var(--dsr-input-bg); border-radius: 12px; wid=
th: calc(33.3333% - 8.33333px); transition: background-color 0.3s; position=
: relative; }

.cd190a50 .d2d04dae { align-items: center; padding: 8px; display: flex; }

.cd190a50 .d2d04dae .b3a5d6c1 { color: rgb(76, 76, 76); margin-right: 10px;=
 }

.cd190a50 .d2d04dae .aea7ca45 { overflow: hidden; }

.cd190a50 .d2d04dae .aea7ca45 .f3a54b52 { text-overflow: ellipsis; white-sp=
ace: nowrap; color: rgb(38, 38, 38); min-height: 20px; margin: 0px; font-si=
ze: 14px; font-weight: 500; line-height: 20px; overflow: hidden; }

.cd190a50 .d2d04dae .aea7ca45 .ee357eab { text-overflow: ellipsis; white-sp=
ace: nowrap; margin: 0px; font-size: 12px; line-height: 17px; overflow: hid=
den; }

.cd190a50:hover .b2b9d30d { opacity: 1; }

.cd190a50 .ee357eab { color: rgb(187, 187, 187); }

.cd190a50.ebfd1816 .ee357eab { color: rgb(229, 53, 53); }

.cd190a50.ebfd1816 .b2b9d30d { opacity: 1; }

.cd190a50.e5931f90 { cursor: pointer; transition: box-shadow 0.2s ease-in-o=
ut; }

.cd190a50.e5931f90:hover { box-shadow: 0px 0px 0px .5px var(--dsr-input-bor=
der),0px 4px 8px 0px rgba(144,150,174,.25); }

.a0c3ba85 { justify-content: flex-end; padding: 10px 0px; }

.b2b9d30d { z-index: 1; opacity: 0; will-change: opacity; cursor: pointer; =
box-sizing: border-box; background-color: rgb(255, 255, 255); border-radius=
: 50%; justify-content: center; align-items: center; width: 20px; height: 2=
0px; transition: opacity 0.2s ease-in-out; display: flex; position: absolut=
e; top: -5px; right: -5px; box-shadow: rgba(148, 147, 147, 0.25) 0px 1px 2p=
x, rgb(237, 237, 237) 0px 0px 0px 0.5px inset; }

.b421135a { opacity: 1; }

.a418378a { background-color: rgb(229, 53, 53); box-shadow: rgba(148, 147, =
147, 0.25) 0px 1px 2px; }

.acc38691 { margin: 6px; }

@media not all and (min-width: 640px) {
  .a4380d7b { gap: 8px; }
  .cd190a50 { width: calc(50% - 6.5px); }
}

[data-ds-dark-theme] .cd190a50 .aea7ca45 .f3a54b52 { color: rgb(255, 255, 2=
55); }

[data-ds-dark-theme] .cd190a50.e5931f90:hover { box-shadow: 0px 0px 0px .5p=
x var(--dsr-input-border),0px 4px 8px 0px rgba(11,11,12,.25); }

[data-ds-dark-theme] .cd190a50.ebfd1816 .ee357eab { color: rgb(239, 68, 68)=
; }

[data-ds-dark-theme] .acc38691 { color: rgb(201, 201, 201); }

.fa81 { justify-content: flex-end; margin-bottom: 16px; padding-bottom: 32p=
x; display: flex; }

.fa81:hover .e0558cb1 { opacity: 1; }

.fa81.bad9aaff { margin-bottom: 24px; }

.fa81.eee33222 { margin-bottom: 56px; }

.e0558cb1 { opacity: 0; transition: opacity var(--ds-transition-duration)va=
r(--ds-ease-in-out); will-change: opacity; }

.e0558cb1:focus { opacity: 1; }

.e0558cb1:focus-within { opacity: 1; }

.fbb737a4 { font-size: var(--ds-font-size-l); line-height: var(--ds-line-he=
ight-l); color: rgb(38, 38, 38); padding: calc((44px - var(--ds-line-height=
-l))/2)20px; box-sizing: border-box; white-space: pre-wrap; word-break: bre=
ak-word; background-color: rgb(239, 246, 255); border-radius: 14px; max-wid=
th: calc(100% - 48px); position: relative; }

@media not all and (min-width: 640px) {
  .fbb737a4 { max-width: calc(100% - 68px); }
}

[data-ds-dark-theme] .fbb737a4 { color: rgb(248, 250, 255); background-colo=
r: rgb(65, 65, 88); }

.b83ee326 { flex-grow: 1; position: relative; }

.f6004764 { padding: 0 var(--message-list-padding-horizontal); min-height: =
100%; position: absolute; inset: 0px; overflow: auto; }

.f6004764.e7c08643 { display: flex; }

.f6004764 .f72b0bab { flex-direction: column; flex-grow: 1; height: 100%; d=
isplay: flex; position: relative; }

.dad65929 { width: 100%; max-width: var(--message-list-max-width); box-sizi=
ng: border-box; flex-grow: 1; margin: auto; padding: 38px 0px 40px; }

.e7920f9e { color: rgb(var(--ds-rgb-primary)); justify-content: center; ali=
gn-items: center; width: 100%; height: 100%; font-size: 32px; display: flex=
; }

.df4cb668 { color: rgb(var(--ds-rgb-label-2)); box-sizing: border-box; just=
ify-content: center; align-items: center; width: 100%; height: 100%; font-s=
ize: 14px; line-height: 20px; display: flex; }

.e886deb9 { justify-content: center; gap: 20px; margin-bottom: 20px; displa=
y: flex; }

@media not all and (min-width: 640px) {
  .e886deb9 { margin-bottom: 6px; }
}

.e214291b { white-space: nowrap; background-color: rgb(var(--ds-rgb-blue-10=
0)); color: rgb(77, 107, 254); cursor: pointer; z-index: 1; border-radius: =
12px; align-items: center; gap: 10px; width: fit-content; padding: 2px 14px=
; font-size: 14px; line-height: 28px; display: flex; }

.e214291b:hover { background-color: rgb(195, 218, 248); }

[data-ds-dark-theme] .e214291b { color: rgb(248, 250, 255); background-colo=
r: rgb(77, 107, 254); }

[data-ds-dark-theme] .e214291b:hover { background-color: rgb(79, 110, 202);=
 }

.e87bfa92 { box-sizing: border-box; text-align: center; color: rgb(38, 38, =
38); border: 1px solid rgb(237, 237, 237); border-radius: 10px; width: fit-=
content; max-width: 100%; margin: 8px auto 38px; padding: 7px 14px; font-si=
ze: 12px; line-height: 20px; }

.a6998e18 { margin-right: 8px; display: inline-block; position: relative; b=
ottom: -2px; }

[data-ds-dark-theme] .e87bfa92 { color: rgb(248, 250, 255); background-colo=
r: rgb(50, 51, 62); border-color: rgb(82, 82, 82); }

.f79b51c1 { width: calc(-2.5rem + 50vw); height: calc(100% - 82px); box-sha=
dow: 0px 0px 0px .5px var(--dsr-input-border); z-index: 11; background: rgb=
(237, 242, 251); border-radius: 20px; flex-direction: column; margin-top: 5=
6px; margin-bottom: 26px; margin-right: 20px; font-size: 14px; line-height:=
 1.5; display: flex; position: fixed; right: 0px; overflow: hidden; }

@media not all and (min-width: 1280px) {
  .f79b51c1 { width: calc(-2.5rem + 60vw); }
}

@media not all and (min-width: 640px) {
  .f79b51c1 { width: calc(-2.5rem + 100vw); }
}

.fb4c59c5 { background-color: rgb(249, 251, 255); justify-content: space-be=
tween; align-items: center; padding: 15px 12px; display: flex; }

.fb4c59c5 .e9fbd9e6 { color: rgb(38, 38, 38); text-align: center; white-spa=
ce: nowrap; text-overflow: ellipsis; flex-grow: 1; font-size: 16px; font-we=
ight: 600; line-height: 22px; overflow: hidden; }

[data-ds-dark-theme] .f79b51c1 { background: rgb(64, 64, 77); }

[data-ds-dark-theme] .fb4c59c5 { background-color: rgb(80, 80, 96); }

[data-ds-dark-theme] .fb4c59c5 .e9fbd9e6 { color: rgb(248, 250, 255); }

.a480e781 { color: rgb(163, 163, 163); margin: auto; }

[data-ds-dark-theme] .a480e781 { color: rgb(136, 142, 156); }

.fba535c8 { background-color: rgb(237, 242, 251); justify-content: center; =
align-items: center; display: flex; position: fixed; inset: 0px; }

.c5e235fa { flex-direction: column; justify-content: center; align-items: c=
enter; max-width: calc(-32px + 100vw); display: flex; }

.cfffee1e { font-size: 32px; font-weight: var(--ds-font-weight-strong); col=
or: rgb(var(--ds-rgb-label-1)); margin-bottom: 21px; line-height: 46px; }

.a73be3f1 { display: flex; }

.a73be3f1 > :not(:last-child) { margin-right: 16px; }

.f309f19b { white-space: pre-wrap; color: rgb(var(--ds-rgb-label-2)); width=
: 600px; max-width: calc(-32px + 100vw); font-size: 12px; line-height: 18px=
; }

[data-ds-dark-theme] .fba535c8 { background-color: rgb(64, 64, 77); }

.b692b035 { flex-shrink: 0; width: 50vw; }

@media not all and (min-width: 1280px) {
  .b692b035 { width: 0px; }
}

@media not all and (min-width: 640px) {
  .b692b035 { width: 0px; }
}

.fd76a94d { flex-shrink: 0; width: 500px; }

.f529c936 { width: calc(-2em + 500px); }

@media not all and (min-width: 1536px) {
  .fd76a94d, .f529c936 { width: 440px; }
}

@media not all and (min-width: 1280px) {
  .fd76a94d, .f529c936 { width: 420px; }
}

@media not all and (min-width: 1024px) {
  .fd76a94d { width: 0px; }
}

@media not all and (min-width: 640px) {
  .f529c936 { width: calc(-2.5rem + 100vw); }
}

.f6569132 { background-color: var(--dsr-button-grey-1); cursor: pointer; bo=
rder-radius: 12px; align-items: center; width: fit-content; padding: 8px 14=
px; display: flex; }

.f6569132:hover { background-color: var(--dsr-button-grey-0); }

.f6569132 .faf995dc { color: var(--dsr-text-1); margin-right: 10px; font-si=
ze: 14px; line-height: 20px; }

.f6569132 .a20bb409 { color: var(--dsr-icon-fg-1); }

.f02f0e25 { color: rgb(76, 76, 76); cursor: pointer; border-radius: 10px; f=
lex-shrink: 0; justify-content: center; align-items: center; width: 32px; h=
eight: 32px; margin-top: auto; margin-right: 10px; display: flex; }

.f02f0e25:hover { background-color: rgb(224, 228, 237); }

.f02f0e25.cfba8f40 { cursor: not-allowed; color: rgb(187, 187, 187); }

.efd78c4e { color: rgb(172, 172, 172); font-size: 12px; }

.efd78c4e span[role=3D"title"] { color: rgb(255, 255, 255); font-size: 14px=
; display: block; }

[data-ds-dark-theme] .f02f0e25 { color: rgb(205, 212, 223); }

[data-ds-dark-theme] .f02f0e25:hover { background-color: rgb(66, 68, 81); }

[data-ds-dark-theme] .f02f0e25.cfba8f40 { color: rgb(107, 107, 118); }

.c7ff2faa { justify-content: center; display: flex; }

.c929f531 { text-align: center; flex-direction: column; justify-content: ce=
nter; width: 50%; max-width: 760px; margin-top: 100px; display: flex; }

.c929f531 .b53c0e66 { margin: 0px auto; }

.c929f531 .f652d34f { color: var(--dsr-text-1); margin-top: 12px; font-size=
: 32px; font-weight: 500; line-height: 45px; }

.c929f531 .e1c32e80 { color: var(--dsr-text-3); margin-top: 12px; font-size=
: 16px; font-weight: 500; line-height: 22px; }

.c929f531 .ef39bc4c { color: var(--dsr-text-1); margin-top: 12px; font-size=
: 16px; line-height: 28px; }

.c0511be8 { flex-direction: column; justify-content: flex-start; width: fit=
-content; max-width: 90%; margin: 36px auto 0px; display: flex; }

.c0511be8 .cd6cfbbd { margin-bottom: 10px; }

@media not all and (min-width: 1280px) {
  .c929f531 { width: 60%; }
}

@media not all and (min-width: 1024px) {
  .c929f531 { width: 70%; }
}

@media not all and (min-width: 768px) {
  .c929f531 { width: 80%; margin-top: 60px; }
}

@media not all and (min-width: 640px) {
  .c929f531 { width: 100%; margin-top: 30px; }
}

.f9edaa3c { --dsr-side-bg-rgb: 249,251,255; --dsr-local-active-bg-rgb: 219,=
234,254; --dsr-local-active-bg: rgb(var(--ds-rgb-blue-100)); }

[data-ds-dark-theme] .f9edaa3c { --dsr-side-bg-rgb: 33,35,39; --dsr-local-a=
ctive-bg-rgb: 73,73,73; --dsr-local-active-bg: rgb(var(--ds-rgb-neutral-650=
)); }

.f9edaa3c { height: 38px; color: var(--dsr-text-1); background-color: var(-=
-dsr-side-bg); cursor: pointer; --ds-focus-ring-border-radius: 14px; border=
-radius: 12px; align-items: center; padding: 0px 10px; font-size: 14px; dis=
play: flex; position: relative; }

.f9edaa3c:focus, .f9edaa3c.e9c6297f { outline: none; }

.f9edaa3c:focus .aa7b7ebb, .f9edaa3c.e9c6297f .aa7b7ebb { opacity: 1; }

.f9edaa3c .c08e6e93 { white-space: nowrap; flex: 1 1 0%; align-items: cente=
r; min-width: 0px; line-height: 18px; display: flex; overflow: hidden; }

.f9edaa3c .c08e6e93 .e1c840bf { margin-right: 6px; }

.f9edaa3c .aa7b7ebb { opacity: 0; z-index: 1; --ds-focus-ring-border-radius=
: 8px; border-radius: 8px; outline: none; justify-content: center; align-it=
ems: center; width: 24px; height: 24px; display: flex; position: absolute; =
top: 50%; right: 10px; transform: translateY(-50%); }

.f9edaa3c .aa7b7ebb:hover { opacity: 1; background-color: var(--dsr-side-bg=
); }

.f9edaa3c .eaaaba55 { background: linear-gradient(90deg,rgba(var(--dsr-side=
-bg-rgb),0)0%,var(--dsr-side-bg)100%); }

.f9edaa3c.b64fb9ae { background-color: var(--dsr-local-active-bg); }

.f9edaa3c.b64fb9ae .eaaaba55 { background-image: linear-gradient(to right,r=
gba(var(--dsr-local-active-bg-rgb),0),var(--dsr-local-active-bg)50%); }

.f9edaa3c:not(.b64fb9ae):hover { background-color: var(--dsr-side-hover-bg)=
; }

.f9edaa3c:not(.b64fb9ae):hover .eaaaba55 { background: linear-gradient(90de=
g,rgba(var(--dsr-side-hover-bg-rgb),0)0%,var(--dsr-side-hover-bg)60%,var(--=
dsr-side-hover-bg)100%); opacity: 1; }

.f9edaa3c .f8773756, .f9edaa3c .eaaaba55 { content: ""; pointer-events: non=
e; border-top-right-radius: 12px; border-bottom-right-radius: 12px; positio=
n: absolute; top: 0px; bottom: 0px; right: 0px; }

.f9edaa3c .f8773756 { background: linear-gradient(90deg,rgba(var(--dsr-side=
-bg-rgb),0)0%,var(--dsr-side-bg)50%,var(--dsr-side-bg)100%); width: 24px; }

.f9edaa3c .eaaaba55 { opacity: 0; width: 84px; }

.f9edaa3c.b64fb9ae .aa7b7ebb, .f9edaa3c:hover .aa7b7ebb, .f9edaa3c.b64fb9ae=
 .eaaaba55, .f9edaa3c:hover .eaaaba55 { opacity: 1; }

@media (hover: none) {
  .f9edaa3c .eaaaba55 { opacity: 1; }
  .f9edaa3c .aa7b7ebb { opacity: 0.5; }
  .f9edaa3c .f8773756 { width: 52px; }
}

.ds-dropdown-menu { --ds-dropdown-menu-font-size: var(--ds-font-size-m); --=
ds-dropdown-menu-option-icon-size: calc(var(--ds-font-size-m) + 4px); --ds-=
dropdown-menu-option-icon-margin: 0 10px 0 0; --ds-dropdown-menu-option-ico=
n-color: rgb(var(--ds-rgb-label-2)); --ds-dropdown-menu-color: rgb(var(--ds=
-rgb-elevated)); --ds-dropdown-menu-option-text-color: rgb(var(--ds-rgb-lab=
el-1)); --ds-dropdown-menu-option-height: 28px; --ds-dropdown-menu-option-c=
olor-hover: rgb(var(--ds-rgb-hover)); --ds-dropdown-menu-padding: 4px; --ds=
-dropdown-menu-option-padding: 8px 14px; --ds-dropdown-menu-option-line-hei=
ght: var(--ds-line-height-m); --ds-dropdown-menu-border-radius: 10px; --ds-=
dropdown-menu-option-border-radius: 8px; --ds-dropdown-menu-option-divider-=
margin: 8px; --ds-dropdown-menu-option-label-margin: 0; }

.ds-dropdown-menu-option.ds-dropdown-menu-option--error { --ds-dropdown-men=
u-option-text-color: rgb(var(--ds-rgb-error)); --ds-dropdown-menu-option-ic=
on-color: rgb(var(--ds-rgb-error)); --ds-dropdown-menu-option-color-hover: =
var(--ds-dropdown-menu-option-error-color-hover,rgba(var(--ds-rgb-error)/.0=
6)); }

.ds-dropdown-menu { border-radius: var(--ds-dropdown-menu-border-radius); b=
ackground-color: var(--ds-dropdown-menu-color); padding: var(--ds-dropdown-=
menu-padding); color: var(--ds-dropdown-menu-option-text-color); box-shadow=
: rgba(0, 0, 0, 0.12) 0px 8px 24px; }

.ds-dropdown-menu-option { font-size: var(--ds-dropdown-menu-font-size); li=
ne-height: var(--ds-dropdown-menu-option-line-height); border-radius: var(-=
-ds-dropdown-menu-option-border-radius); min-height: var(--ds-dropdown-menu=
-option-height); padding: var(--ds-dropdown-menu-option-padding); color: va=
r(--ds-dropdown-menu-option-text-color); cursor: pointer; box-sizing: borde=
r-box; transition: background-color var(--ds-transition-duration)var(--ds-e=
ase-in-out),color var(--ds-transition-duration)var(--ds-ease-in-out); user-=
select: none; align-items: center; display: flex; overflow: auto; }

.ds-dropdown-menu-option:hover, .ds-dropdown-menu-option.ds-dropdown-menu-o=
ption--pending { background-color: var(--ds-dropdown-menu-option-color-hove=
r); }

.ds-dropdown-menu-option .ds-dropdown-menu-option__icon { color: var(--ds-d=
ropdown-menu-option-icon-color); margin: var(--ds-dropdown-menu-option-icon=
-margin); font-size: var(--ds-dropdown-menu-option-icon-size); display: fle=
x; }

.ds-dropdown-menu-option .ds-dropdown-menu-option__label { margin: var(--ds=
-dropdown-menu-option-label-margin); }

.ds-dropdown-menu-option-divider { border-color: rgb(var(--ds-rgb-separator=
)); margin: var(--ds-dropdown-menu-option-divider-margin); border-style: so=
lid; border-width: 1px 0px 0px; min-height: 0px; padding: 0px; overflow: hi=
dden; }

.fb0a63fb { flex: 1 1 0%; padding: 0px 10px; overflow: auto; }

.fb0a63fb.f27d1011 { justify-content: center; align-items: center; display:=
 flex; }

.cdfc1683 { z-index: 2; background-color: var(--dsr-side-bg); color: rgb(85=
, 85, 85); margin: 6px 0px 6px -6px; padding: 0px 10px 0px 16px; font-size:=
 13px; font-weight: 600; line-height: 18px; position: sticky; top: 0px; }

.d4b5352e { position: relative; }

.d4b5352e:first-child .cdfc1683 { margin-top: 0px; }

.b9cb4a74 { width: 100%; height: 24px; }

.f27d1011 { color: rgb(var(--ds-rgb-label-2)); font-size: 14px; line-height=
: 20px; }

.ec92d1d3 { box-sizing: border-box; cursor: pointer; flex-shrink: 0; justif=
y-content: space-between; align-items: center; width: 100%; height: 56px; p=
adding: 0px 10px; display: flex; }

@media (min-width: 640px) {
  .ec92d1d3 { height: 90px; padding: 25px 10px 34px 20px; }
}

.e066abb8 { align-items: center; display: flex; }

.e066abb8 svg { color: rgb(44, 44, 54); height: 22px; }

@media (min-width: 640px) {
  .e066abb8 svg { height: 26px; }
}

.a5967822 { flex-grow: 0; flex-shrink: 0; width: 24px; height: 24px; }

@media (min-width: 640px) {
  .a5967822 { display: none; }
}

.a9564e8a { color: rgb(139, 139, 139); display: block; }

@media (min-width: 640px) {
  .a9564e8a { display: none; }
}

.d1f5e283 { display: none; }

.d1f5e283.ds-icon-button:hover::before { background-color: var(--dsr-side-i=
con-hover); }

@media (min-width: 640px) {
  .d1f5e283 { display: flex; }
}

[data-ds-dark-theme] .a9564e8a { color: rgb(205, 212, 223); }

[data-ds-dark-theme] .e066abb8 svg { color: rgb(171, 178, 189); }

.fd23db93 { background-color: var(--local-button-text); width: 1px; height:=
 20px; }

.e0d44aa3 { align-items: center; height: 100%; padding: 0px 10px; display: =
flex; }

.e0d44aa3:hover { background-color: var(--local-button-hover); }

.d38c3654 { align-items: center; display: flex; }

.faf1228f { margin-right: 8px; }

.fdf5dad2 { text-overflow: ellipsis; white-space: nowrap; max-width: 120px;=
 color: var(---dsr-text-1); font-size: 14px; line-height: 20px; display: bl=
ock; overflow: hidden; }

.ad5d9e5d { align-items: center; display: flex; }

.ad5d9e5d .fa2c { color: var(--dsr-icon-fg-1); margin-left: auto; }

[data-ds-dark-theme] .a8ac7a80 { --local-button: var(--dsr-main); --local-b=
utton-hover: #4166d5; --local-button-text: rgb(var(--ds-rgb-slate-50)); }

.a8ac7a80 { --local-button: rgb(var(--ds-rgb-blue-100)); --local-button-tex=
t: var(--dsr-main); --local-button-hover: #c6dcf8; color: var(--local-butto=
n-text); background-color: var(--local-button); cursor: pointer; height: 44=
px; border-radius: 14px; flex-shrink: 0; align-items: center; width: fit-co=
ntent; margin: 0px 2px 0px 14px; font-size: 16px; font-weight: 500; line-he=
ight: 20px; display: flex; overflow: hidden; }

.a8ac7a80 .c7dddcde { align-items: center; height: 100%; padding: 0px 10px;=
 display: flex; }

.a8ac7a80 .c7dddcde:hover { background-color: var(--local-button-hover); }

.c42ad70d { margin-right: 9px; display: flex; }

.c42ad70d svg { width: 22px; height: 22px; }

.ede5bc47 { cursor: pointer; width: 32px; border-radius: 50%; outline: none=
; flex-direction: column; justify-content: center; align-items: center; hei=
ght: fit-content; display: flex; overflow: hidden; }

.f8ba2d00 { color: var(--dsr-text-4); }

.c6ab9234 { cursor: pointer; box-sizing: border-box; border-radius: 12px; a=
lign-items: center; width: 100%; padding: 8px; display: flex; }

.c6ab9234:hover { background-color: var(--dsr-side-hover-bg); }

.d65532b2 { color: var(--dsr-text-2); user-select: none; margin-left: 8px; =
font-size: 14px; }

.fdf01f38 { object-fit: cover; border: 1px solid var(--dsr-border-2); box-s=
izing: border-box; border-radius: 50%; width: 100%; height: 100%; }

.a10622cf { align-items: center; display: flex; }

.da22f4ce:hover::before { background-color: rgba(255, 255, 255, 0.1); }

.a9879fdf { color: rgb(255, 255, 255); cursor: pointer; background-color: r=
gb(102, 102, 102); border-radius: 6px; margin-left: 12px; padding: 4px 8px;=
 font-size: 10px; line-height: 12px; }

.ee85b4b2 { font-size: var(--ds-font-size-m); height: var(--ds-input-height=
-m); align-items: center; gap: 4px; display: flex; }

.ba933982 { height: var(--ds-input-height-m); padding: 4px; }

.ds-native-select { cursor: pointer; width: 100%; color: rgb(var(--ds-rgb-l=
abel-1)); font-size: var(--font-size); line-height: var(--line-height); hei=
ght: var(--height); box-sizing: border-box; border-radius: var(--border-rad=
ius); transition: background-color var(--ds-transition-duration)var(--ds-ea=
se-in-out),box-shadow var(--ds-transition-duration)var(--ds-ease-in-out),co=
lor var(--ds-transition-duration)var(--ds-ease-in-out); align-items: center=
; display: flex; position: relative; }

.ds-native-select option { background: rgb(var(--ds-rgb-bg-base)); }

.ds-native-select.ds-native-select--disabled { opacity: 0.45; cursor: not-a=
llowed; }

.ds-native-select.ds-native-select--disabled .native-selectInner { cursor: =
not-allowed; }

.ds-native-select .ds-native-select__select { color: inherit; cursor: inher=
it; appearance: none; font-size: inherit; background-color: var(--ds-native=
-select-color,transparent); border-radius: inherit; user-select: none; bord=
er: none; outline: none; width: 100%; height: 100%; padding: 0px 28px 0px 1=
0px; }

.ds-native-select .ds-native-select__arrow { pointer-events: none; color: r=
gb(var(--ds-rgb-label-2)); display: flex; position: absolute; top: 50%; rig=
ht: 8px; transform: translateY(-50%); }

.ds-native-select .ds-native-select__arrow svg { width: 14px; height: 14px;=
 }

.ds-native-select.ds-native-select--none:focus-within { background-color: r=
gb(var(--ds-rgb-input-focus)); box-shadow: inset 0 0 0 2px rgb(var(--ds-rgb=
-primary)); }

.ds-native-select.ds-native-select--filled.ds-native-select--error:focus-wi=
thin { background-color: rgb(var(--ds-rgb-input-focus)); }

.ds-native-select.ds-native-select--bordered.ds-native-select--error:focus-=
within { background-color: rgb(var(--ds-rgb-input-focus)); }

.ds-native-select.ds-native-select--filled.ds-native-select--error, .ds-nat=
ive-select.ds-native-select--bordered.ds-native-select--error { background-=
color: rgba(var(--ds-rgb-error)/.06); box-shadow: inset 0 0 0 2px rgb(var(-=
-ds-rgb-error)); }

.ds-native-select.ds-native-select--filled { background-color: rgb(var(--ds=
-rgb-input)); }

.ds-native-select.ds-native-select--bordered { box-shadow: inset 0 0 0 1px =
rgb(var(--ds-rgb-separator)); }

.ds-native-select.ds-native-select--l { --height: var(--ds-input-height-l);=
 --font-size: var(--ds-font-size-l); --line-height: var(--ds-line-height-l)=
; --border-radius: 10px; }

.ds-native-select.ds-native-select--m { --height: var(--ds-input-height-m);=
 --font-size: var(--ds-font-size-m); --line-height: var(--ds-line-height-m)=
; --border-radius: 10px; }

.ds-native-select.ds-native-select--s { --height: var(--ds-input-height-s);=
 --font-size: var(--ds-font-size-s); --line-height: var(--ds-line-height-s)=
; --border-radius: 10px; }

.ds-native-select.ds-native-select--xs { --height: var(--ds-input-height-xs=
); --font-size: var(--ds-font-size-xs); --line-height: var(--ds-line-height=
-xs); --border-radius: 8px; }

.ds-segmented { background-color: var(--ds-segmented-color,rgba(var(--ds-rg=
b-segmented))); font-size: var(--ds-font-size-m); line-height: var(--ds-lin=
e-height-m); border-radius: 10px; padding: 2px; display: flex; }

.ds-segmented-button { white-space: nowrap; cursor: pointer; border-radius:=
 8px; flex: 1 1 0%; justify-content: center; align-items: center; padding: =
4px 14px; font-weight: 400; display: flex; position: relative; }

.ds-segmented-button.ds-segmented-button--disabled { cursor: not-allowed; o=
pacity: 0.45; }

.ds-segmented-button.ds-segmented-button--selected { font-weight: var(--ds-=
font-weight-strong); background-color: var(--ds-segmented-selected-color,rg=
b(var(--ds-rgb-segmented-button))); box-shadow: rgba(0, 0, 0, 0.04) 0px 0px=
 0px 0.5px, rgba(0, 0, 0, 0.04) 0px 3px 1px, rgba(0, 0, 0, 0.12) 0px 3px 8p=
x; }

.ds-segmented-button.ds-segmented-button--selected .ds-segmented-separator =
{ display: none; }

.ds-segmented-button { outline: none; }

.ds-segmented-button__shadow { pointer-events: none; transition: box-shadow=
 var(--ds-transition-duration)var(--ds-ease-in-out); z-index: 1; border-rad=
ius: 10px; position: absolute; inset: -2px; }

.ds-segmented-button:focus-visible .ds-segmented-button__shadow { box-shado=
w: 0 0 0 2px rgb(var(--ds-rgb-primary)); }

.ds-segmented-separator { width: 1px; height: var(--ds-font-size-m); backgr=
ound-color: rgba(var(--ds-rgb-segmented-separator)); flex-grow: 0; flex-shr=
ink: 0; position: absolute; right: 0px; }

.a1e75851 { border: solid 1px var(--dsr-main); width: 100%; color: var(--ds=
r-text-1); box-sizing: border-box; cursor: pointer; border-radius: 12px; al=
ign-items: center; margin-bottom: 8px; padding: 9px 12px; font-size: 14px; =
font-weight: 400; display: flex; }

.a1e75851:hover { background-color: var(--dsr-side-hover-bg); }

.a1e75851 .b9f93e3c { margin-left: 8px; display: flex; }

.b2b9a841 { color: var(--dsr-text-2); text-align: center; flex-direction: c=
olumn; font-size: 14px; display: flex; }

.ee32982d { width: 160px; height: 160px; margin: 8px 0px; }

.b91228e4 { color: var(--dsr-text-3); cursor: pointer; border-radius: 8px; =
justify-content: center; align-items: center; width: 36px; height: 36px; ma=
rgin-bottom: 22px; display: flex; }

.b91228e4:hover { background-color: rgb(var(--ds-rgb-hover)); }

[data-ds-dark-theme] .b91228e4 { color: rgb(171, 178, 189); }

.c7f51894 { box-sizing: border-box; flex-direction: column; flex-shrink: 0;=
 align-items: center; padding: 10px 12px; line-height: 20px; display: flex;=
 }

@supports (padding-top:env(safe-area-inset-top)) {
  .b8812f16 { padding-top: env(safe-area-inset-top); padding-left: env(safe=
-area-inset-left); padding-right: env(safe-area-inset-right); padding-botto=
m: env(safe-area-inset-bottom); }
}

.b8812f16 { background-color: var(--dsr-side-bg); z-index: 1; flex-directio=
n: column; flex-grow: 0; flex-shrink: 0; min-width: 0px; display: flex; }

.b8812f16 .ebaea5d2 { align-items: center; margin-bottom: 34px; display: fl=
ex; }

.fbcecfa2 { color: rgb(var(--ds-rgb-primary)); justify-content: center; ali=
gn-items: center; width: 100%; height: 100%; font-size: 32px; display: flex=
; }

.cc58ca70 { color: rgb(var(--ds-rgb-label-2)); box-sizing: border-box; just=
ify-content: center; align-items: center; width: 100%; height: 100%; paddin=
g: 0px 20px; font-size: 14px; line-height: 20px; display: flex; }

.f0d4f23d { background-color: var(--dsr-side-bg); flex-direction: column; a=
lign-items: center; width: 68px; padding: 19px 0px; display: flex; }

.dc04ec1d { --local-sider-width: 260px; }

.a2f3d50e { transition: opacity var(--ds-transition-duration-fast)var(--ds-=
ease-in-out); position: absolute; top: 0px; bottom: 0px; right: 0px; }

.dc04ec1d, .a2f3d50e { width: var(--local-sider-width); max-width: var(--lo=
cal-sider-width); }

.a7f3a288 { visibility: hidden; pointer-events: none; width: 68px; transiti=
on: left var(--ds-transition-duration-fast)var(--ds-ease-in-out),opacity va=
r(--ds-transition-duration-fast)var(--ds-ease-in-out); position: absolute; =
top: 0px; bottom: 0px; left: -24px; }

.dc04ec1d { z-index: 2; transition: left var(--ds-transition-duration-fast)=
var(--ds-ease-in-out),max-width var(--ds-transition-duration-fast)var(--ds-=
ease-in-out); flex-shrink: 0; position: fixed; top: 0px; bottom: 0px; left:=
 0px; }

.cbcd962e { transition: opacity var(--ds-transition-duration-fast)var(--ds-=
ease-in-out); opacity: 1; background-color: rgba(0, 0, 0, 0.4); position: f=
ixed; inset: 0px; }

.dc04ec1d.a02af2e6 { left: calc(-1*var(--local-sider-width)); }

.dc04ec1d.a02af2e6 .cbcd962e { opacity: 0; pointer-events: none; }

@media (min-width: 768px) {
  .dc04ec1d { width: var(--local-sider-width); max-width: var(--local-sider=
-width); position: relative; inset: 0px; }
  .dc04ec1d.a02af2e6 { max-width: 68px; left: 0px; }
  .dc04ec1d.a02af2e6 .a2f3d50e { visibility: hidden; pointer-events: none; =
}
  .dc04ec1d.a02af2e6 .a7f3a288 { visibility: visible; pointer-events: all; =
left: 0px; }
  .dc04ec1d .cbcd962e { display: none; }
}

.d8ed659a { cursor: pointer; white-space: nowrap; text-overflow: ellipsis; =
color: rgb(38, 38, 38); box-sizing: border-box; max-width: 100%; height: 40=
px; transition: box-shadow var(--ds-transition-duration)var(--ds-ease-in-ou=
t); border-radius: 12px; padding: 8px 12px; font-size: 16px; font-weight: 6=
00; line-height: 24px; overflow: hidden; }

.d8ed659a:hover { box-shadow: inset 0 0 0 1px rgb(var(--ds-rgb-separator-st=
rong)); }

[data-ds-dark-theme] .d8ed659a { color: rgb(255, 255, 255); }

.e307a2b2 { cursor: pointer; color: var(--dsr-text-0); text-overflow: ellip=
sis; white-space: nowrap; flex-shrink: 2; max-width: 100px; font-size: 16px=
; font-weight: 500; overflow: hidden; }

@media (min-width: 768px) {
  .e307a2b2 { max-width: 140px; margin-top: 18px; }
}

.be88ba8a { box-sizing: border-box; background-color: rgb(255, 255, 255); f=
lex-grow: 0; flex-shrink: 0; justify-content: center; height: 56px; padding=
-top: 10px; display: flex; position: relative; }

.b480065b { z-index: 10; pointer-events: none; background: linear-gradient(=
rgba(255, 255, 255, 0.8) 0%, rgba(255, 255, 255, 0) 100%); width: 100%; hei=
ght: 32px; position: absolute; top: 100%; left: 1px; }

.efe408db { box-sizing: border-box; justify-content: space-between; align-i=
tems: center; width: 100%; padding: 0px 16px; display: flex; }

.a24007f4 { border: solid 1px var(--dsr-main); color: var(--dsr-text-2); bo=
rder-radius: 12px; align-items: center; margin-left: 14px; margin-right: au=
to; padding: 1px 6px; font-size: 12px; font-weight: 500; display: flex; }

.d7829b2f { cursor: pointer; border-radius: 6px; padding: 4px; }

.d7829b2f.e7d8739b { margin-left: -4px; }

.d7829b2f.ecf90b28 { margin-right: -4px; }

.d7829b2f:hover { background-color: var(--dsr-icon-hover-1); }

[data-ds-dark-theme] .a24007f4 { color: rgb(255, 255, 255); }

@media (min-width: 768px) {
  .efe408db { display: none; }
}

.f8d1e4c0 { display: none; }

@media (min-width: 768px) {
  .f8d1e4c0 { width: 0px; min-width: 0px; max-width: var(--message-list-max=
-width); flex: 1 1 0%; padding: 0px 32px; display: flex; }
}

[data-ds-dark-theme] .be88ba8a { background-color: var(--dsr-bg); }

[data-ds-dark-theme] .efe408db { opacity: 0.8; }

[data-ds-dark-theme] .b480065b { background: linear-gradient(rgba(41, 42, 4=
5, 0.8) 0%, rgba(41, 42, 45, 0) 100%); }

.fe369d61 { z-index: 11; background: rgb(255, 255, 255); border: 1px solid =
rgb(220, 220, 220); border-radius: 12px; flex-direction: column; height: ca=
lc(100% - 82px); margin-top: 56px; margin-bottom: 26px; margin-right: 20px;=
 display: flex; position: fixed; right: 0px; overflow: hidden; }

.fa178bf1 { justify-content: space-between; align-items: center; padding: 2=
0px 32px 12px; display: flex; }

.fa178bf1 .b272c426 { color: rgb(140, 140, 140); font-size: 16px; font-weig=
ht: 500; line-height: 20px; }

.dc433409 { height: 100%; min-height: 0px; padding: 0px 20px; overflow: hid=
den auto; }

.dc433409 .fcd13b6e { border-radius: 12px; margin-bottom: 12px; padding: 8p=
x 10px; }

.dc433409 .fcd13b6e:hover { background-color: rgb(245, 245, 245); }

@media not all and (min-width: 640px) {
  .b272c426 { text-align: center; width: 100%; }
  .dc433409 { padding: 0px 6px; }
  .dc433409 .fcd13b6e { margin-bottom: 4px; }
}

[data-ds-dark-theme] .fe369d61 { background-color: rgb(64, 64, 77); border:=
 1px solid rgb(90, 90, 105); }

[data-ds-dark-theme] .fe369d61 .fa178bf1 .b272c426 { color: rgb(248, 250, 2=
55); }

[data-ds-dark-theme] .fe369d61 .dc433409 .fcd13b6e:hover { background-color=
: rgb(77, 77, 89); }

.dd8acccf { pointer-events: none; background: linear-gradient(to top,var(--=
ds-background-1)0%,rgba(var(--ds-background-1-rgb),.5)40%,rgba(var(--ds-bac=
kground-1-rgb),.15)70%,var(--ds-transparent)100%); height: 16px; position: =
absolute; bottom: 0px; left: 0px; right: 0px; }

.b491273a { max-width: 768px; margin: auto; padding: 0px 24px; }

.ds-alert { --ds-alert-font-size: var(--ds-font-size-m); --ds-alert-line-he=
ight: var(--ds-line-height-m); --icon-size: 21px; }

.ds-alert.ds-alert--warning { --alert-color: rgba(var(--ds-rgb-warning)/.06=
); --alert-text-color: rgb(var(--ds-rgb-warning)); --alert-box-shadow: 0 0 =
0 2px rgb(var(--ds-rgb-warning)); }

.ds-alert.ds-alert--warning:not(.ds-alert--bordered) { --alert-color: rgba(=
var(--ds-rgb-warning),.09); }

.ds-alert.ds-alert--success { --alert-color: rgba(var(--ds-rgb-success-rgb)=
/.06); --alert-text-color: rgb(var(--ds-rgb-success)); --alert-box-shadow: =
0 0 0 2px rgb(var(--ds-rgb-success)); }

.ds-alert.ds-alert--success:not(.ds-alert--bordered) { --alert-color: rgba(=
var(--ds-rgb-success-rgb),.09); }

.ds-alert.ds-alert--error { --alert-color: rgba(var(--ds-rgb-error)/.06); -=
-alert-text-color: rgb(var(--ds-rgb-error)); --alert-box-shadow: 0 0 0 2px =
rgb(var(--ds-rgb-error)); }

.ds-alert.ds-alert--error:not(.ds-alert--bordered) { --alert-color: rgba(va=
r(--ds-rgb-error),.09); }

.ds-alert.ds-alert--info { --alert-color: rgba(var(--ds-rgb-info)/.06); --a=
lert-text-color: rgb(var(--ds-rgb-info)); --alert-box-shadow: 0 0 0 2px rgb=
(var(--ds-rgb-info)); }

.ds-alert.ds-alert--info:not(.ds-alert--bordered) { --alert-color: rgba(var=
(--ds-rgb-info)/.09); }

body.dark .ds-alert.ds-alert--warning:not(.ds-alert--bordered) { --alert-co=
lor: rgba(var(--ds-rgb-warning)/.2); }

body.dark .ds-alert.ds-alert--success:not(.ds-alert--bordered) { --alert-co=
lor: rgba(var(--ds-rgb-success-rgb)/.2); }

body.dark .ds-alert.ds-alert--error:not(.ds-alert--bordered) { --alert-colo=
r: rgba(var(--ds-rgb-error)/.2); }

body.dark .ds-alert.ds-alert--info:not(.ds-alert--bordered) { --alert-color=
: rgba(var(--ds-rgb-info)/.2); }

.ds-alert { font-size: var(--ds-alert-font-size); line-height: var(--ds-ale=
rt-line-height); color: var(--alert-text-color); box-sizing: border-box; ba=
ckground-color: var(--alert-color); border-radius: 12px; align-items: cente=
r; padding: 14px; display: flex; position: relative; overflow: hidden; }

.ds-alert .ds-alert__content { flex: 1 1 0%; }

.ds-alert .ds-alert__icon { width: var(--icon-size); height: var(--icon-siz=
e); font-size: var(--icon-size); margin-right: 6px; display: flex; }

.ds-alert .ds-alert__icon svg { width: var(--icon-size); height: var(--icon=
-size); }

.ds-alert .ds-alert__icon--warning { color: rgb(var(--ds-rgb-warning)); }

.ds-alert .ds-alert__icon--success { color: rgb(var(--ds-rgb-success)); }

.ds-alert .ds-alert__icon--error { color: rgb(var(--ds-rgb-error)); }

.ds-alert .ds-alert__icon--info { color: rgb(var(--ds-rgb-info)); }

.ds-alert.ds-alert--bordered { box-shadow: var(--alert-box-shadow); }

.aaff8b8f { max-width: var(--message-list-max-width); flex-grow: 1; width: =
100%; position: relative; }

.cefa5c26 { --padding: 14px; cursor: text; box-sizing: border-box; width: 1=
00%; font-size: var(--ds-font-size-l); line-height: var(--ds-line-height-l)=
; transition: box-shadow var(--ds-transition-duration)var(--ds-ease-in-out)=
; box-shadow: none; background-color: var(--dsr-bg); border-radius: 24px; f=
lex-direction: column; display: flex; position: relative; }

.cefa5c26.d5e44c7a { box-shadow: 0px 0px 0px .5px var(--dsr-input-border); =
padding: 8px 0px 0px; }

.cefa5c26.d5e44c7a .ca114c67 { color: var(--dsr-text-2); margin: 0px 0px 4p=
x 18px; font-size: 12px; line-height: 18px; }

.cefa5c26 .dd442025 { background-color: var(--dsr-input-bg); box-shadow: 0p=
x 0px 0px .5px var(--dsr-input-border); border-radius: 24px; }

.cefa5c26 .b699646e { z-index: 1; flex-direction: column; justify-content: =
flex-start; align-items: flex-start; padding: 10px; display: flex; overflow=
: hidden; }

.cefa5c26 .ec4f5d61 { --function-row-offset: 2px; width: calc(100% - var(--=
function-row-offset)); padding-left: var(--function-row-offset); flex-wrap:=
 wrap; align-items: center; margin-top: 4px; display: flex; }

.cefa5c26 .bf38813a { flex: 1 1 0%; justify-content: flex-end; align-items:=
 center; display: flex; }

.cefa5c26 .fad49dec { width: 100%; max-height: calc(12*var(--ds-line-height=
-l)); margin: 0px 4px; position: relative; }

.cefa5c26 .c92459f0, .cefa5c26 .b13855df { font-size: inherit; line-height:=
 inherit; word-break: break-word; white-space: pre-wrap; border: none; widt=
h: 100%; margin: 0px; padding: 0px; font-family: inherit; display: block; i=
nset: 0px; overflow: auto; }

.cefa5c26 .c92459f0 { resize: none; color: rgb(var(--ds-rgb-label-1)); care=
t-color: rgb(var(--ds-rgb-label-1)); background-color: transparent; positio=
n: absolute; }

.cefa5c26 .c92459f0::placeholder { color: rgba(13, 13, 13, 0.3); }

.cefa5c26 .c92459f0::placeholder { color: rgba(13, 13, 13, 0.3); }

.cefa5c26 .c92459f0::placeholder { color: rgba(13, 13, 13, 0.3); }

.cefa5c26 .c92459f0:focus { outline: none; }

.cefa5c26 .b13855df { visibility: hidden; pointer-events: none; min-height:=
 56px; }

.f6d670 { white-space: nowrap; cursor: pointer; color: rgb(255, 255, 255); =
background: rgb(77, 107, 254); border: none; border-radius: 16px; flex-dire=
ction: column; flex-shrink: 0; justify-content: center; align-items: center=
; min-width: 32px; height: 32px; margin-top: auto; display: flex; }

.f6d670:hover { background-color: rgb(37, 99, 235); }

.f6d670 .f286936b { justify-content: center; align-items: center; min-width=
: 28px; height: 28px; display: flex; }

.f6d670 .f286936b > svg { width: calc(var(--ds-font-size-l) + 4px); height:=
 calc(var(--ds-font-size-l) + 4px); flex-shrink: 0; }

.f6d670 .abf3e1f4 { min-width: fit-content; margin: 0px 4px; padding: 0px 4=
px; }

.f6d670 .dbf3da68 { margin: -1px; }

.f6d670 .d3faf489 { margin: 0px 4px; font-size: 14px; }

.f6d670.bcc55ca1 { cursor: not-allowed; background-color: rgb(var(--ds-rgb-=
slate-250)); color: rgb(250, 250, 250); }

@media not all and (min-width: 640px) {
  .aaff8b8f { padding-top: 14px; }
  .ec4f5d61 { margin-left: 0px; }
}

.ac69d6c1 { z-index: 10; pointer-events: none; opacity: 0.6; font-size: 14p=
x; position: absolute; bottom: 90%; }

.be24146b { background: currentcolor; border-radius: 2px; flex-shrink: 0; w=
idth: 12px; height: 12px; margin: 1px; }

[data-ds-dark-theme] .cefa5c26 { border-color: rgb(83, 110, 140); }

[data-ds-dark-theme] .cefa5c26 textarea::placeholder { color: rgb(153, 154,=
 165); }

[data-ds-dark-theme] .cefa5c26 textarea::placeholder { color: rgb(153, 154,=
 165); }

[data-ds-dark-theme] .cefa5c26 textarea::placeholder { color: rgb(153, 154,=
 165); }

[data-ds-dark-theme] .dd442025 { box-shadow: rgba(192, 192, 192, 0.3) 0px 0=
px 0px 0.5px; }

[data-ds-dark-theme] .f6d670 { color: rgb(248, 250, 255); background-color:=
 rgb(77, 107, 254); }

[data-ds-dark-theme] .f6d670:hover { background-color: rgb(79, 110, 202); }

[data-ds-dark-theme] .f6d670.bcc55ca1 { color: rgb(75, 75, 91); background-=
color: rgb(var(--ds-rgb-zinc-500)); }

.f0046890 { z-index: 1000; backdrop-filter: blur(10px); background-color: r=
gba(255, 255, 255, 0.7); justify-content: center; align-items: center; widt=
h: 100%; height: 100%; display: flex; position: fixed; top: 0px; left: 0px;=
 }

.ea5b9eaf { color: rgb(38, 38, 38); text-align: center; flex-direction: col=
umn; align-items: center; max-width: 485px; margin-top: -3%; display: flex;=
 }

.bd16b44d { white-space: nowrap; width: fit-content; margin-top: 24px; font=
-size: 24px; line-height: 42px; }

.a83ada2e { color: rgb(139, 139, 139); white-space: pre-wrap; margin-top: 1=
2px; font-size: 16px; font-weight: 400; line-height: 22px; }

[data-ds-dark-theme] .f0046890 { background-color: rgba(39, 39, 48, 0.7); }

[data-ds-dark-theme] .ea5b9eaf { color: rgb(248, 250, 255); }

[data-ds-dark-theme] .a83ada2e { color: rgb(187, 187, 187); }

.e98de67b { pointer-events: all; color: rgb(38, 38, 38); cursor: pointer; b=
ackground-color: rgb(255, 255, 255); border-radius: 50%; justify-content: c=
enter; align-items: center; width: 32px; height: 32px; margin-bottom: 20px;=
 display: flex; position: absolute; bottom: 100%; right: 12px; overflow: hi=
dden; box-shadow: rgb(237, 237, 237) 0px 0px 0px 1px inset; }

.e98de67b:hover { background-color: rgb(245, 245, 245); }

[data-ds-dark-theme] .e98de67b { color: rgb(248, 250, 255); background-colo=
r: rgb(50, 51, 62); box-shadow: rgb(82, 82, 82) 0px 0px 0px 1px inset; }

[data-ds-dark-theme] .e98de67b:hover { background-color: rgb(68, 68, 77); }

.fcaa63f8 { font-size: var(--ds-font-size-s); color: rgb(var(--ds-rgb-label=
-3)); margin: 6px 0px; line-height: 14px; }

[data-ds-dark-theme] .fcaa63f8 { color: rgb(115, 115, 115); }

.cbcaa82c { background-color: var(--dsr-bg); z-index: 1; flex-direction: co=
lumn; align-items: center; margin-top: auto; display: flex; position: stick=
y; bottom: 0px; }

@media not all and (min-width: 640px) {
  .cbcaa82c { padding: 0px; }
}

.ca72515b { width: 100%; height: 100%; display: flex; position: relative; }

.ca72515b .ac106a52 { z-index: 1; width: 100%; position: absolute; top: 0px=
; }

.a2f8e4bb { box-sizing: border-box; flex-direction: column; justify-content=
: center; align-items: center; width: 100%; max-width: 800px; height: 100%;=
 margin: auto; padding: 0px 64px; display: flex; position: relative; }

.a85a674a { color: rgb(0, 0, 0); text-align: center; flex-direction: column=
; flex-grow: 1; align-items: center; line-height: 24px; display: flex; }

.a85a674a .c7e7df4d { align-items: center; gap: 14px; margin-top: auto; fon=
t-size: 24px; font-weight: 500; display: flex; }

.a85a674a .a8d0e1d3 { color: rgb(64, 64, 64); margin: 8px 0px 20px; font-si=
ze: 14px; }

.a85a674a, .eb830e32 { transform: translateY(-7.5vh); }

@media not all and (min-width: 640px) {
  .a2f8e4bb { padding: 0px 16px; }
  .a85a674a { box-sizing: border-box; text-align: left; width: 100%; paddin=
g: 0px 34px; }
  .a85a674a .c7e7df4d { flex-direction: column; align-items: flex-start; wi=
dth: 100%; font-size: 18px; line-height: 24px; }
  .a85a674a .c7e7df4d .da6cda9a { position: relative; left: -8px; }
  .a85a674a .a8d0e1d3 { width: 100%; margin: 14px 0px 6px; font-size: 14px;=
 line-height: 24px; }
}

.d9fb9344 { text-align: center; width: 100%; margin-top: auto; position: fi=
xed; bottom: 0px; }

[data-ds-dark-theme] .a85a674a { color: rgb(255, 255, 255); }

[data-ds-dark-theme] .a8d0e1d3 { color: rgb(248, 250, 255); }

:root { --message-list-padding-horizontal: 16px; --message-list-max-width: =
800px; }

@media (min-width: 768px) {
  :root { --message-list-padding-horizontal: 32px; }
}

.cb86951c { flex-direction: column; display: flex; position: absolute; inse=
t: 0px; overflow: hidden; }

@supports (top:env(safe-area-inset-top)) {
  .cb86951c { padding-top: env(safe-area-inset-top); padding-left: env(safe=
-area-inset-left); padding-right: env(safe-area-inset-right); padding-botto=
m: env(safe-area-inset-bottom); }
}

.c3ecdb44 { flex: 1 1 0%; align-items: stretch; min-height: 0px; display: f=
lex; }

.cddfb2ed { flex-shrink: 0; }

.f2eea526 { flex-direction: row; flex-grow: 1; min-width: 0px; display: fle=
x; }

.f2eea526 .a5cd95be { width: var(--message-list-max-width); flex-direction:=
 column; flex-grow: 1; flex-shrink: 0; max-width: 100%; display: flex; }

.b8216bc1 { color: rgb(var(--ds-rgb-neutral-600)); margin: 30px; font-size:=
 12px; line-height: 18px; }

.f0b28104 { justify-content: center; align-items: center; height: 30vh; dis=
play: flex; }

:root, page { --ds-rgb-black: 0 0 0; --ds-rgb-white: 255 255 255; --ds-rgb-=
slate-50: 248 250 252; --ds-rgb-slate-100: 241 245 249; --ds-rgb-slate-150:=
 233 238 244; --ds-rgb-slate-200: 226 232 240; --ds-rgb-slate-250: 214 222 =
232; --ds-rgb-slate-300: 203 213 225; --ds-rgb-slate-350: 175 188 204; --ds=
-rgb-slate-400: 148 163 184; --ds-rgb-slate-450: 124 139 161; --ds-rgb-slat=
e-500: 100 116 139; --ds-rgb-slate-550: 85 100 122; --ds-rgb-slate-600: 71 =
85 105; --ds-rgb-slate-650: 61 75 95; --ds-rgb-slate-700: 51 65 85; --ds-rg=
b-slate-750: 40 53 72; --ds-rgb-slate-800: 30 41 59; --ds-rgb-slate-850: 22=
 32 50; --ds-rgb-slate-900: 15 23 42; --ds-rgb-slate-950: 2 6 23; --ds-rgb-=
gray-50: 249 250 251; --ds-rgb-gray-100: 243 244 246; --ds-rgb-gray-150: 23=
6 237 240; --ds-rgb-gray-200: 229 231 235; --ds-rgb-gray-250: 219 222 227; =
--ds-rgb-gray-300: 209 213 219; --ds-rgb-gray-350: 182 188 197; --ds-rgb-gr=
ay-400: 156 163 175; --ds-rgb-gray-450: 131 138 151; --ds-rgb-gray-500: 107=
 114 128; --ds-rgb-gray-550: 91 99 113; --ds-rgb-gray-600: 75 85 99; --ds-r=
gb-gray-650: 65 75 90; --ds-rgb-gray-700: 55 65 81; --ds-rgb-gray-750: 43 5=
3 68; --ds-rgb-gray-800: 31 41 55; --ds-rgb-gray-850: 24 32 47; --ds-rgb-gr=
ay-900: 17 24 39; --ds-rgb-gray-950: 3 7 18; --ds-rgb-zinc-50: 250 250 250;=
 --ds-rgb-zinc-100: 244 244 245; --ds-rgb-zinc-150: 236 236 238; --ds-rgb-z=
inc-200: 228 228 231; --ds-rgb-zinc-250: 220 220 223; --ds-rgb-zinc-300: 21=
2 212 216; --ds-rgb-zinc-350: 186 186 193; --ds-rgb-zinc-400: 161 161 170; =
--ds-rgb-zinc-450: 137 137 146; --ds-rgb-zinc-500: 113 113 122; --ds-rgb-zi=
nc-550: 97 97 106; --ds-rgb-zinc-600: 82 82 91; --ds-rgb-zinc-650: 72 72 80=
; --ds-rgb-zinc-700: 63 63 70; --ds-rgb-zinc-750: 51 51 56; --ds-rgb-zinc-8=
00: 39 39 42; --ds-rgb-zinc-850: 31 31 34; --ds-rgb-zinc-900: 24 24 27; --d=
s-rgb-zinc-950: 9 9 11; --ds-rgb-neutral-50: 250 250 250; --ds-rgb-neutral-=
100: 245 245 245; --ds-rgb-neutral-150: 237 237 237; --ds-rgb-neutral-200: =
229 229 229; --ds-rgb-neutral-250: 220 220 220; --ds-rgb-neutral-300: 212 2=
12 212; --ds-rgb-neutral-350: 187 187 187; --ds-rgb-neutral-400: 163 163 16=
3; --ds-rgb-neutral-450: 139 139 139; --ds-rgb-neutral-500: 115 115 115; --=
ds-rgb-neutral-550: 98 98 98; --ds-rgb-neutral-600: 82 82 82; --ds-rgb-neut=
ral-650: 73 73 73; --ds-rgb-neutral-700: 64 64 64; --ds-rgb-neutral-750: 51=
 51 51; --ds-rgb-neutral-800: 38 38 38; --ds-rgb-neutral-850: 30 30 30; --d=
s-rgb-neutral-900: 23 23 23; --ds-rgb-neutral-950: 10 10 10; --ds-rgb-stone=
-50: 250 250 249; --ds-rgb-stone-100: 245 245 244; --ds-rgb-stone-150: 238 =
237 236; --ds-rgb-stone-200: 231 229 228; --ds-rgb-stone-250: 222 220 218; =
--ds-rgb-stone-300: 214 211 209; --ds-rgb-stone-350: 191 186 183; --ds-rgb-=
stone-400: 168 162 158; --ds-rgb-stone-450: 144 137 133; --ds-rgb-stone-500=
: 120 113 108; --ds-rgb-stone-550: 103 98 93; --ds-rgb-stone-600: 87 83 78;=
 --ds-rgb-stone-650: 77 73 69; --ds-rgb-stone-700: 68 64 60; --ds-rgb-stone=
-750: 54 50 48; --ds-rgb-stone-800: 41 37 36; --ds-rgb-stone-850: 34 31 29;=
 --ds-rgb-stone-900: 28 25 23; --ds-rgb-stone-950: 12 10 9; --ds-rgb-red-50=
: 254 242 242; --ds-rgb-red-100: 254 226 226; --ds-rgb-red-150: 254 214 214=
; --ds-rgb-red-200: 254 202 202; --ds-rgb-red-250: 253 183 183; --ds-rgb-re=
d-300: 252 165 165; --ds-rgb-red-350: 250 139 139; --ds-rgb-red-400: 248 11=
3 113; --ds-rgb-red-450: 243 90 90; --ds-rgb-red-500: 239 68 68; --ds-rgb-r=
ed-550: 229 53 53; --ds-rgb-red-600: 220 38 38; --ds-rgb-red-650: 202 33 33=
; --ds-rgb-red-700: 185 28 28; --ds-rgb-red-750: 169 27 27; --ds-rgb-red-80=
0: 153 27 27; --ds-rgb-red-850: 140 28 28; --ds-rgb-red-900: 127 29 29; --d=
s-rgb-red-950: 69 10 10; --ds-rgb-orange-50: 255 247 237; --ds-rgb-orange-1=
00: 255 237 213; --ds-rgb-orange-150: 254 226 191; --ds-rgb-orange-200: 254=
 215 170; --ds-rgb-orange-250: 253 200 143; --ds-rgb-orange-300: 253 186 11=
6; --ds-rgb-orange-350: 252 166 88; --ds-rgb-orange-400: 251 146 60; --ds-r=
gb-orange-450: 250 130 41; --ds-rgb-orange-500: 249 115 22; --ds-rgb-orange=
-550: 241 101 17; --ds-rgb-orange-600: 234 88 12; --ds-rgb-orange-650: 214 =
76 12; --ds-rgb-orange-700: 194 65 12; --ds-rgb-orange-750: 174 58 15; --ds=
-rgb-orange-800: 154 52 18; --ds-rgb-orange-850: 139 48 18; --ds-rgb-orange=
-900: 124 45 18; --ds-rgb-orange-950: 67 20 7; --ds-rgb-amber-50: 255 251 2=
35; --ds-rgb-amber-100: 254 243 199; --ds-rgb-amber-150: 253 236 168; --ds-=
rgb-amber-200: 253 230 138; --ds-rgb-amber-250: 252 220 107; --ds-rgb-amber=
-300: 252 211 77; --ds-rgb-amber-350: 251 201 56; --ds-rgb-amber-400: 251 1=
91 36; --ds-rgb-amber-450: 248 174 23; --ds-rgb-amber-500: 245 158 11; --ds=
-rgb-amber-550: 231 138 8; --ds-rgb-amber-600: 217 119 6; --ds-rgb-amber-65=
0: 198 101 7; --ds-rgb-amber-700: 180 83 9; --ds-rgb-amber-750: 163 73 11; =
--ds-rgb-amber-800: 146 64 14; --ds-rgb-amber-850: 133 58 14; --ds-rgb-ambe=
r-900: 120 53 15; --ds-rgb-amber-950: 69 26 3; --ds-rgb-yellow-50: 254 252 =
232; --ds-rgb-yellow-100: 254 249 195; --ds-rgb-yellow-150: 254 244 166; --=
ds-rgb-yellow-200: 254 240 138; --ds-rgb-yellow-250: 253 232 104; --ds-rgb-=
yellow-300: 253 224 71; --ds-rgb-yellow-350: 251 214 46; --ds-rgb-yellow-40=
0: 250 204 21; --ds-rgb-yellow-450: 242 191 14; --ds-rgb-yellow-500: 234 17=
9 8; --ds-rgb-yellow-550: 218 158 6; --ds-rgb-yellow-600: 202 138 4; --ds-r=
gb-yellow-650: 181 118 5; --ds-rgb-yellow-700: 161 98 7; --ds-rgb-yellow-75=
0: 147 87 10; --ds-rgb-yellow-800: 133 77 14; --ds-rgb-yellow-850: 123 70 1=
6; --ds-rgb-yellow-900: 113 63 18; --ds-rgb-yellow-950: 66 32 6; --ds-rgb-l=
ime-50: 247 254 231; --ds-rgb-lime-100: 236 252 203; --ds-rgb-lime-150: 226=
 250 180; --ds-rgb-lime-200: 217 249 157; --ds-rgb-lime-250: 203 245 128; -=
-ds-rgb-lime-300: 190 242 100; --ds-rgb-lime-350: 176 236 76; --ds-rgb-lime=
-400: 163 230 53; --ds-rgb-lime-450: 147 217 37; --ds-rgb-lime-500: 132 204=
 22; --ds-rgb-lime-550: 116 183 17; --ds-rgb-lime-600: 101 163 13; --ds-rgb=
-lime-650: 89 143 14; --ds-rgb-lime-700: 77 124 15; --ds-rgb-lime-750: 70 1=
11 16; --ds-rgb-lime-800: 63 98 18; --ds-rgb-lime-850: 58 90 19; --ds-rgb-l=
ime-900: 54 83 20; --ds-rgb-lime-950: 26 46 5; --ds-rgb-green-50: 240 253 2=
44; --ds-rgb-green-100: 220 252 231; --ds-rgb-green-150: 203 249 219; --ds-=
rgb-green-200: 187 247 208; --ds-rgb-green-250: 160 243 190; --ds-rgb-green=
-300: 134 239 172; --ds-rgb-green-350: 104 230 150; --ds-rgb-green-400: 74 =
222 128; --ds-rgb-green-450: 54 209 111; --ds-rgb-green-500: 34 197 94; --d=
s-rgb-green-550: 28 180 84; --ds-rgb-green-600: 22 163 74; --ds-rgb-green-6=
50: 21 145 67; --ds-rgb-green-700: 21 128 61; --ds-rgb-green-750: 21 114 56=
; --ds-rgb-green-800: 22 101 52; --ds-rgb-green-850: 21 92 48; --ds-rgb-gre=
en-900: 20 83 45; --ds-rgb-green-950: 5 46 22; --ds-rgb-emerald-50: 236 253=
 245; --ds-rgb-emerald-100: 209 250 229; --ds-rgb-emerald-150: 188 246 218;=
 --ds-rgb-emerald-200: 167 243 208; --ds-rgb-emerald-250: 138 237 195; --ds=
-rgb-emerald-300: 110 231 183; --ds-rgb-emerald-350: 81 221 168; --ds-rgb-e=
merald-400: 52 211 153; --ds-rgb-emerald-450: 34 198 141; --ds-rgb-emerald-=
500: 16 185 129; --ds-rgb-emerald-550: 10 167 117; --ds-rgb-emerald-600: 5 =
150 105; --ds-rgb-emerald-650: 4 135 96; --ds-rgb-emerald-700: 4 120 87; --=
ds-rgb-emerald-750: 5 107 78; --ds-rgb-emerald-800: 6 95 70; --ds-rgb-emera=
ld-850: 6 86 64; --ds-rgb-emerald-900: 6 78 59; --ds-rgb-emerald-950: 2 44 =
34; --ds-rgb-teal-50: 240 253 250; --ds-rgb-teal-100: 204 251 241; --ds-rgb=
-teal-150: 178 248 234; --ds-rgb-teal-200: 153 246 228; --ds-rgb-teal-250: =
123 240 220; --ds-rgb-teal-300: 94 234 212; --ds-rgb-teal-350: 69 223 201; =
--ds-rgb-teal-400: 45 212 191; --ds-rgb-teal-450: 32 198 178; --ds-rgb-teal=
-500: 20 184 166; --ds-rgb-teal-550: 16 166 151; --ds-rgb-teal-600: 13 148 =
136; --ds-rgb-teal-650: 14 133 123; --ds-rgb-teal-700: 15 118 110; --ds-rgb=
-teal-750: 16 106 99; --ds-rgb-teal-800: 17 94 89; --ds-rgb-teal-850: 18 86=
 81; --ds-rgb-teal-900: 19 78 74; --ds-rgb-teal-950: 4 47 46; --ds-rgb-cyan=
-50: 236 254 255; --ds-rgb-cyan-100: 207 250 254; --ds-rgb-cyan-150: 186 24=
6 253; --ds-rgb-cyan-200: 165 243 252; --ds-rgb-cyan-250: 134 237 250; --ds=
-rgb-cyan-300: 103 232 249; --ds-rgb-cyan-350: 68 221 243; --ds-rgb-cyan-40=
0: 34 211 238; --ds-rgb-cyan-450: 20 196 225; --ds-rgb-cyan-500: 6 182 212;=
 --ds-rgb-cyan-550: 7 163 195; --ds-rgb-cyan-600: 8 145 178; --ds-rgb-cyan-=
650: 11 130 161; --ds-rgb-cyan-700: 14 116 144; --ds-rgb-cyan-750: 17 105 1=
30; --ds-rgb-cyan-800: 21 94 117; --ds-rgb-cyan-850: 21 86 108; --ds-rgb-cy=
an-900: 22 78 99; --ds-rgb-cyan-950: 8 51 68; --ds-rgb-sky-50: 240 249 255;=
 --ds-rgb-sky-100: 224 242 254; --ds-rgb-sky-150: 205 236 253; --ds-rgb-sky=
-200: 186 230 253; --ds-rgb-sky-250: 155 220 252; --ds-rgb-sky-300: 125 211=
 252; --ds-rgb-sky-350: 90 200 250; --ds-rgb-sky-400: 56 189 248; --ds-rgb-=
sky-450: 35 177 240; --ds-rgb-sky-500: 14 165 233; --ds-rgb-sky-550: 8 148 =
216; --ds-rgb-sky-600: 2 132 199; --ds-rgb-sky-650: 2 118 180; --ds-rgb-sky=
-700: 3 105 161; --ds-rgb-sky-750: 5 97 147; --ds-rgb-sky-800: 7 89 133; --=
ds-rgb-sky-850: 9 81 121; --ds-rgb-sky-900: 12 74 110; --ds-rgb-sky-950: 8 =
47 73; --ds-rgb-blue-50: 239 246 255; --ds-rgb-blue-100: 219 234 254; --ds-=
rgb-blue-150: 205 226 254; --ds-rgb-blue-200: 191 219 254; --ds-rgb-blue-25=
0: 169 208 253; --ds-rgb-blue-300: 147 197 253; --ds-rgb-blue-350: 121 181 =
251; --ds-rgb-blue-400: 96 165 250; --ds-rgb-blue-450: 77 147 248; --ds-rgb=
-blue-500: 59 130 246; --ds-rgb-blue-550: 48 114 240; --ds-rgb-blue-600: 37=
 99 235; --ds-rgb-blue-650: 33 88 225; --ds-rgb-blue-700: 29 78 216; --ds-r=
gb-blue-750: 29 71 195; --ds-rgb-blue-800: 30 64 175; --ds-rgb-blue-850: 30=
 61 156; --ds-rgb-blue-900: 30 58 138; --ds-rgb-blue-950: 23 37 84; --ds-rg=
b-indigo-50: 238 242 255; --ds-rgb-indigo-100: 224 231 255; --ds-rgb-indigo=
-150: 211 220 254; --ds-rgb-indigo-200: 199 210 254; --ds-rgb-indigo-250: 1=
82 195 253; --ds-rgb-indigo-300: 165 180 252; --ds-rgb-indigo-350: 147 160 =
250; --ds-rgb-indigo-400: 129 140 248; --ds-rgb-indigo-450: 114 121 244; --=
ds-rgb-indigo-500: 99 102 241; --ds-rgb-indigo-550: 89 86 235; --ds-rgb-ind=
igo-600: 79 70 229; --ds-rgb-indigo-650: 73 63 215; --ds-rgb-indigo-700: 67=
 56 202; --ds-rgb-indigo-750: 61 52 182; --ds-rgb-indigo-800: 55 48 163; --=
ds-rgb-indigo-850: 52 47 146; --ds-rgb-indigo-900: 49 46 129; --ds-rgb-indi=
go-950: 30 27 75; --ds-rgb-violet-50: 245 243 255; --ds-rgb-violet-100: 237=
 233 254; --ds-rgb-violet-150: 229 223 254; --ds-rgb-violet-200: 221 214 25=
4; --ds-rgb-violet-250: 208 197 253; --ds-rgb-violet-300: 196 181 253; --ds=
-rgb-violet-350: 181 160 251; --ds-rgb-violet-400: 167 139 250; --ds-rgb-vi=
olet-450: 153 115 248; --ds-rgb-violet-500: 139 92 246; --ds-rgb-violet-550=
: 131 75 241; --ds-rgb-violet-600: 124 58 237; --ds-rgb-violet-650: 116 49 =
227; --ds-rgb-violet-700: 109 40 217; --ds-rgb-violet-750: 100 36 199; --ds=
-rgb-violet-800: 91 33 182; --ds-rgb-violet-850: 83 31 165; --ds-rgb-violet=
-900: 76 29 149; --ds-rgb-violet-950: 46 16 101; --ds-rgb-purple-50: 250 24=
5 255; --ds-rgb-purple-100: 243 232 255; --ds-rgb-purple-150: 238 222 255; =
--ds-rgb-purple-200: 233 213 255; --ds-rgb-purple-250: 224 196 254; --ds-rg=
b-purple-300: 216 180 254; --ds-rgb-purple-350: 204 156 253; --ds-rgb-purpl=
e-400: 192 132 252; --ds-rgb-purple-450: 180 108 249; --ds-rgb-purple-500: =
168 85 247; --ds-rgb-purple-550: 157 68 240; --ds-rgb-purple-600: 147 51 23=
4; --ds-rgb-purple-650: 136 42 220; --ds-rgb-purple-700: 126 34 206; --ds-r=
gb-purple-750: 116 33 187; --ds-rgb-purple-800: 107 33 168; --ds-rgb-purple=
-850: 97 30 151; --ds-rgb-purple-900: 88 28 135; --ds-rgb-purple-950: 59 7 =
100; --ds-rgb-fuchsia-50: 253 244 255; --ds-rgb-fuchsia-100: 250 232 255; -=
-ds-rgb-fuchsia-150: 247 220 254; --ds-rgb-fuchsia-200: 245 208 254; --ds-r=
gb-fuchsia-250: 242 189 253; --ds-rgb-fuchsia-300: 240 171 252; --ds-rgb-fu=
chsia-350: 236 146 250; --ds-rgb-fuchsia-400: 232 121 249; --ds-rgb-fuchsia=
-450: 224 95 244; --ds-rgb-fuchsia-500: 217 70 239; --ds-rgb-fuchsia-550: 2=
04 54 225; --ds-rgb-fuchsia-600: 192 38 211; --ds-rgb-fuchsia-650: 177 33 1=
93; --ds-rgb-fuchsia-700: 162 28 175; --ds-rgb-fuchsia-750: 148 26 159; --d=
s-rgb-fuchsia-800: 134 25 143; --ds-rgb-fuchsia-850: 123 25 130; --ds-rgb-f=
uchsia-900: 112 26 117; --ds-rgb-fuchsia-950: 74 4 78; --ds-rgb-pink-50: 25=
3 242 248; --ds-rgb-pink-100: 252 231 243; --ds-rgb-pink-150: 251 219 237; =
--ds-rgb-pink-200: 251 207 232; --ds-rgb-pink-250: 250 187 222; --ds-rgb-pi=
nk-300: 249 168 212; --ds-rgb-pink-350: 246 141 197; --ds-rgb-pink-400: 244=
 114 182; --ds-rgb-pink-450: 240 93 167; --ds-rgb-pink-500: 236 72 153; --d=
s-rgb-pink-550: 227 55 136; --ds-rgb-pink-600: 219 39 119; --ds-rgb-pink-65=
0: 204 31 106; --ds-rgb-pink-700: 190 24 93; --ds-rgb-pink-750: 173 23 85; =
--ds-rgb-pink-800: 157 23 77; --ds-rgb-pink-850: 144 23 72; --ds-rgb-pink-9=
00: 131 24 67; --ds-rgb-pink-950: 80 7 36; --ds-rgb-rose-50: 255 241 242; -=
-ds-rgb-rose-100: 255 228 230; --ds-rgb-rose-150: 254 216 220; --ds-rgb-ros=
e-200: 254 205 211; --ds-rgb-rose-250: 253 184 193; --ds-rgb-rose-300: 253 =
164 175; --ds-rgb-rose-350: 252 138 154; --ds-rgb-rose-400: 251 113 133; --=
ds-rgb-rose-450: 247 88 113; --ds-rgb-rose-500: 244 63 94; --ds-rgb-rose-55=
0: 234 46 83; --ds-rgb-rose-600: 225 29 72; --ds-rgb-rose-650: 207 23 66; -=
-ds-rgb-rose-700: 190 18 60; --ds-rgb-rose-750: 174 18 58; --ds-rgb-rose-80=
0: 159 18 57; --ds-rgb-rose-850: 147 18 56; --ds-rgb-rose-900: 136 19 55; -=
-ds-rgb-rose-950: 76 5 25; }

body, page, .ds-theme { --ds-input-height-l: 42px; --ds-input-height-m: 34p=
x; --ds-input-height-s: 30px; --ds-input-height-xs: 26px; --ds-font-weight-=
strong: 600; --ds-font-size-l: 16px; --ds-line-height-l: 28px; --ds-font-si=
ze-m: 14px; --ds-line-height-m: 25px; --ds-font-size-sp: 13px; --ds-line-he=
ight-sp: 23px; --ds-font-size-s: 12px; --ds-line-height-s: 21px; --ds-font-=
size-xsp: 11px; --ds-line-height-xsp: 19.5px; --ds-font-size-xs: 10px; --ds=
-line-height-xs: 18px; --ds-ease-in-out: cubic-bezier(.4,0,.2,1); --ds-ease=
-in: cubic-bezier(.4,0,1,1); --ds-ease-out: cubic-bezier(0,0,.2,1); --ds-fo=
nt-family-code: Menlo,"Roboto Mono","Courier New",Courier,monospace,"Inter"=
,sans-serif; --ds-transition-duration: .2s; --ds-transition-duration-fast: =
.1s; --ds-transition-duration-slow: .3s; }

body { font-size: var(--ds-font-size-m); line-height: var(--ds-line-height-=
m); color: rgb(var(--ds-rgb-label-1)); text-size-adjust: none; margin: 0px;=
 }

body, page { --ds-rgb-info: var(--ds-rgb-blue-500); --ds-rgb-primary: var(-=
-ds-rgb-blue-500); --ds-rgb-primary-foreground: var(--ds-rgb-white); --ds-r=
gb-label-1: var(--ds-rgb-neutral-700); --ds-rgb-label-2: var(--ds-rgb-neutr=
al-450); --ds-rgb-label-3: var(--ds-rgb-neutral-400); --ds-rgb-error: var(-=
-ds-rgb-red-500); --ds-rgb-warning: var(--ds-rgb-amber-500); --ds-rgb-succe=
ss: var(--ds-rgb-green-500); --ds-rgba-transparent: 255 255 255/0; --ds-rgb=
-bg-base: var(--ds-rgb-white); --ds-rgb-elevated: var(--ds-rgb-white); --ds=
-rgb-track: var(--ds-rgb-neutral-200); --ds-rgb-hover: var(--ds-rgb-neutral=
-100); --ds-rgb-header: var(--ds-rgb-neutral-50); --ds-rgb-separator: var(-=
-ds-rgb-neutral-100); --ds-rgb-separator-strong: var(--ds-rgb-neutral-200);=
 --ds-rgb-input: var(--ds-rgb-neutral-100); --ds-rgb-input-strong: var(--ds=
-rgb-neutral-150); --ds-rgb-input-focus: var(--ds-rgb-white); --ds-rgb-link=
: var(--ds-rgb-primary); --ds-rgb-tag: var(--ds-rgb-neutral-200); --ds-rgb-=
segmented: var(--ds-rgb-neutral-100); --ds-rgb-segmented-button: var(--ds-r=
gb-white); --ds-rgb-segmented-separator: var(--ds-rgb-neutral-300); --ds-rg=
b-thumb: var(--ds-rgb-white); font-family: Inter, system-ui, -apple-system,=
 BlinkMacSystemFont, "Segoe UI", Roboto, "Noto Sans", Ubuntu, Cantarell, "H=
elvetica Neue", Oxygen, "Open Sans", sans-serif; }

body { -webkit-tap-highlight-color: transparent; }

body.apple, body.en_US, body.apple .ds-theme, body.en_US .ds-theme { --ds-f=
ont-weight-strong: 500; }

body.dark { background-color: rgb(var(--ds-rgb-bg-base)); color: rgb(var(--=
ds-rgb-label-1)); --lightningcss-light: ; --lightningcss-dark: initial; col=
or-scheme: dark; }

body.dark, body.dark .ds-theme { --ds-rgb-info: var(--ds-rgb-blue-500); --d=
s-rgb-primary: var(--ds-rgb-blue-500); --ds-rgb-primary-foreground: 255 255=
 255; --ds-rgb-label-1: var(--ds-rgb-neutral-100); --ds-rgb-label-2: var(--=
ds-rgb-neutral-400); --ds-rgb-label-3: var(--ds-rgb-neutral-500); --ds-rgb-=
error: var(--ds-rgb-red-500); --ds-rgb-warning: var(--ds-rgb-amber-500); --=
ds-rgb-success: var(--ds-rgb-green-500); --ds-rgba-transparent: 255 255 255=
/0; --ds-rgb-bg-base: var(--ds-rgb-black); --ds-rgb-elevated: var(--ds-rgb-=
neutral-700); --ds-rgb-track: var(--ds-rgb-neutral-500); --ds-rgb-hover: va=
r(--ds-rgb-neutral-700); --ds-rgb-header: 40 40 40; --ds-rgb-separator: var=
(--ds-rgb-neutral-700); --ds-rgb-separator-strong: var(--ds-rgb-neutral-600=
); --ds-rgb-input: var(--ds-rgb-neutral-800); --ds-rgb-input-strong: var(--=
ds-rgb-neutral-700); --ds-rgb-input-focus: var(--ds-rgb-neutral-900); --ds-=
rgb-link: var(--ds-rgb-primary); --ds-rgb-tag: var(--ds-rgb-neutral-700); -=
-ds-rgb-segmented: var(--ds-rgb-neutral-700); --ds-rgb-segmented-button: va=
r(--ds-rgb-neutral-600); --ds-rgb-segmented-separator: var(--ds-rgb-neutral=
-600); --ds-rgb-thumb: var(--ds-rgb-neutral-200); }

body.dark .ds-elevated, body.dark [data-elevated] { --ds-rgb-label-1: var(-=
-ds-rgb-neutral-100); --ds-rgb-label-2: var(--ds-rgb-neutral-400); --ds-rgb=
-label-3: var(--ds-rgb-neutral-500); --ds-rgb-track: var(--ds-rgb-neutral-5=
00); --ds-rgb-hover: var(--ds-rgb-neutral-600); --ds-rgb-header: 40 40 40; =
--ds-rgb-separator: var(--ds-rgb-neutral-600); --ds-rgb-separator-strong: v=
ar(--ds-rgb-neutral-500); --ds-rgb-input: var(--ds-rgb-neutral-600); --ds-r=
gb-input-strong: var(--ds-rgb-neutral-600); --ds-rgb-input-focus: var(--ds-=
rgb-neutral-700); --ds-rgb-tag: var(--ds-rgb-neutral-600); --ds-rgb-segment=
ed: var(--ds-rgb-neutral-600); --ds-rgb-segmented-button: var(--ds-rgb-neut=
ral-500); --ds-rgb-segmented-separator: var(--ds-rgb-neutral-500); --ds-rgb=
-thumb: var(--ds-rgb-neutral-200); }

@media (prefers-color-scheme: dark) {
  page { background-color: rgb(var(--ds-rgb-bg-base)); color: rgb(var(--ds-=
rgb-label-1)); --lightningcss-light: ; --lightningcss-dark: initial; color-=
scheme: dark; }
  page, page .ds-theme { --ds-rgb-info: var(--ds-rgb-blue-500); --ds-rgb-pr=
imary: var(--ds-rgb-blue-500); --ds-rgb-primary-foreground: 255 255 255; --=
ds-rgb-label-1: var(--ds-rgb-neutral-100); --ds-rgb-label-2: var(--ds-rgb-n=
eutral-400); --ds-rgb-label-3: var(--ds-rgb-neutral-500); --ds-rgb-error: v=
ar(--ds-rgb-red-500); --ds-rgb-warning: var(--ds-rgb-amber-500); --ds-rgb-s=
uccess: var(--ds-rgb-green-500); --ds-rgba-transparent: 255 255 255/0; --ds=
-rgb-bg-base: var(--ds-rgb-black); --ds-rgb-elevated: var(--ds-rgb-neutral-=
700); --ds-rgb-track: var(--ds-rgb-neutral-500); --ds-rgb-hover: var(--ds-r=
gb-neutral-700); --ds-rgb-header: 40 40 40; --ds-rgb-separator: var(--ds-rg=
b-neutral-700); --ds-rgb-separator-strong: var(--ds-rgb-neutral-600); --ds-=
rgb-input: var(--ds-rgb-neutral-800); --ds-rgb-input-strong: var(--ds-rgb-n=
eutral-700); --ds-rgb-input-focus: var(--ds-rgb-neutral-900); --ds-rgb-link=
: var(--ds-rgb-primary); --ds-rgb-tag: var(--ds-rgb-neutral-700); --ds-rgb-=
segmented: var(--ds-rgb-neutral-700); --ds-rgb-segmented-button: var(--ds-r=
gb-neutral-600); --ds-rgb-segmented-separator: var(--ds-rgb-neutral-600); -=
-ds-rgb-thumb: var(--ds-rgb-neutral-200); }
  page .ds-elevated { --ds-rgb-label-1: var(--ds-rgb-neutral-100); --ds-rgb=
-label-2: var(--ds-rgb-neutral-400); --ds-rgb-label-3: var(--ds-rgb-neutral=
-500); --ds-rgb-track: var(--ds-rgb-neutral-500); --ds-rgb-hover: var(--ds-=
rgb-neutral-600); --ds-rgb-header: 40 40 40; --ds-rgb-separator: var(--ds-r=
gb-neutral-600); --ds-rgb-separator-strong: var(--ds-rgb-neutral-500); --ds=
-rgb-input: var(--ds-rgb-neutral-600); --ds-rgb-input-strong: var(--ds-rgb-=
neutral-600); --ds-rgb-input-focus: var(--ds-rgb-neutral-700); --ds-rgb-tag=
: var(--ds-rgb-neutral-600); --ds-rgb-segmented: var(--ds-rgb-neutral-600);=
 --ds-rgb-segmented-button: var(--ds-rgb-neutral-500); --ds-rgb-segmented-s=
eparator: var(--ds-rgb-neutral-500); --ds-rgb-thumb: var(--ds-rgb-neutral-2=
00); }
}

.ds-markdown { --ds-md-zoom: 1.143; --ds-md-font-size: calc(var(--ds-md-zoo=
m)*var(--ds-font-size-m)); --ds-md-line-height: calc(var(--ds-md-zoom)*var(=
--ds-line-height-m)); font-size: var(--ds-md-font-size); min-height: var(--=
ds-md-font-size); line-height: var(--ds-md-line-height); }

.ds-markdown img { max-width: 100%; }

.ds-markdown h1, .ds-markdown h2, .ds-markdown h3, .ds-markdown h4, .ds-mar=
kdown h5, .ds-markdown h6 { font-weight: var(--ds-font-weight-strong); font=
-size: var(--ds-md-font-size); line-height: var(--ds-md-line-height); margi=
n: calc(var(--ds-md-zoom)*16px)0 calc(var(--ds-md-zoom)*12px)0; }

.ds-markdown h1 { font-size: calc(var(--ds-md-zoom)*24px); line-height: 1.5=
; }

.ds-markdown h2 { font-size: calc(var(--ds-md-zoom)*20px); line-height: 1.5=
; }

.ds-markdown h3 { font-size: calc(var(--ds-md-zoom)*16px); line-height: 1.5=
; }

.ds-markdown h1 .header-anchor, .ds-markdown h2 .header-anchor, .ds-markdow=
n h3 .header-anchor, .ds-markdown h4 .header-anchor, .ds-markdown h5 .heade=
r-anchor, .ds-markdown h6 .header-anchor { opacity: 0; margin-left: 4px; }

.ds-markdown h1:hover .header-anchor, .ds-markdown h2:hover .header-anchor,=
 .ds-markdown h3:hover .header-anchor, .ds-markdown h4:hover .header-anchor=
, .ds-markdown h5:hover .header-anchor, .ds-markdown h6:hover .header-ancho=
r { opacity: 1; }

.ds-markdown p { margin: calc(var(--ds-md-zoom)*12px)0; font-size: var(--ds=
-md-font-size); line-height: var(--ds-md-line-height); }

.ds-markdown a:not(.ds-a) { color: rgb(var(--ds-rgb-link)); transition: box=
-shadow var(--ds-transition-duration)var(--ds-ease-in-out); border-radius: =
calc(var(--ds-md-zoom)*6px); border-left: 3px solid rgba(var(--ds-rgba-tran=
sparent)); border-right: 3px solid rgba(var(--ds-rgba-transparent)); border=
-top: 2px solid rgba(var(--ds-rgba-transparent)); border-bottom: 2px solid =
rgba(var(--ds-rgba-transparent)); margin-left: -3px; margin-right: -3px; te=
xt-decoration: none; position: relative; }

.ds-markdown a:not(.ds-a):focus { outline: none; }

.ds-markdown a:not(.ds-a):focus-visible { box-shadow: 0 0 0 2px rgb(var(--d=
s-rgb-primary)); }

.ds-markdown li > ul, .ds-markdown li > ol { margin-top: 4px; }

.ds-markdown ul, .ds-markdown ol { margin: calc(var(--ds-md-zoom)*12px)0; p=
adding-left: calc(var(--ds-md-zoom)*24px); }

.ds-markdown li:not(:first-child) { margin-top: 4px; }

.ds-markdown li::marker { line-height: var(--ds-md-line-height); color: rgb=
(var(--ds-rgb-label-2)); }

.ds-markdown hr { height: 1px; margin: calc(var(--ds-md-zoom)*12px)0; backg=
round: rgb(var(--ds-rgb-label-3)); border: none; display: block; }

.ds-markdown blockquote { border-left: 2px solid rgb(var(--ds-rgb-label-3))=
; padding-left: calc(var(--ds-md-zoom)*16px); margin: 0px; }

.ds-markdown table { border-collapse: collapse; }

.ds-markdown th { color: rgb(var(--ds-rgb-label-1)); padding: calc(var(--ds=
-md-zoom)*6px)calc(var(--ds-md-zoom)*12px); border-bottom: 1px solid rgb(va=
r(--ds-rgb-label-3)); border-top: 1px solid rgb(var(--ds-rgb-label-3)); fon=
t-weight: 600; }

.ds-markdown th:not(:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bc=
c), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :l=
ang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug=
), :lang(ur), :lang(yi))) { text-align: left; }

.ds-markdown th:not(:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang=
(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), =
:lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(=
ur), :lang(yi))) { text-align: left; }

.ds-markdown th:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :=
lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(k=
u), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :l=
ang(ur), :lang(yi)) { text-align: right; }

.ds-markdown th:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi)=
, :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang=
(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), =
:lang(yi)) { text-align: right; }

.ds-markdown th:first-child { padding-left: 0px; }

.ds-markdown td { padding: calc(var(--ds-md-zoom)*6px)calc(var(--ds-md-zoom=
)*12px); border-bottom: 1px solid rgb(var(--ds-rgb-label-3)); }

.ds-markdown td:first-child { padding-left: 0px; }

.ds-markdown pre { margin: calc(var(--ds-md-zoom)*12px)0; font-family: var(=
--ds-font-family-code); overflow: auto; }

.ds-markdown code { font-size: 0.875em; font-weight: var(--ds-font-weight-s=
trong); font-family: var(--ds-font-family-code); background-color: var(--ds=
-md-inline-code-color,#ececec); border-radius: 4px; padding: 0.15rem 0.3rem=
; }

.ds-markdown code::before { margin-left: 4px; }

.ds-markdown code::after { margin-right: 4px; }

.ds-markdown-math { text-align: center; display: block; overflow: auto hidd=
en; }

.ds-markdown > * .ds-markdown-math { margin: calc(var(--ds-md-zoom)*12px)0;=
 }

.ds-markdown > * .ds-markdown-math:first-child { margin-top: 0px; }

.ds-markdown > * .ds-markdown-math:last-child { margin-bottom: 0px; }

.ds-markdown-code-copy-button { background-color: rgba(var(--ds-rgba-transp=
arent)); color: inherit; cursor: pointer; border: none; margin: 0px; paddin=
g: 0px; }

.ds-markdown li > p { margin: 4px 0px; }

.ds-markdown li > :first-child { margin-top: 0px; }

.ds-markdown li > :last-child { margin-bottom: 0px; }

.ds-markdown p:last-child { margin-bottom: 0px !important; }

.ds-markdown > :first-child { margin-top: 0px !important; }

.ds-markdown > :last-child { margin-bottom: 0px !important; }

.ds-markdown.ds-markdown--page h1 { font-size: calc(var(--ds-md-zoom)*24px)=
; margin-top: calc(var(--ds-md-zoom)*32px); line-height: calc(var(--ds-md-z=
oom)*32px); margin-bottom: calc(var(--ds-md-zoom)*20px); }

.ds-markdown.ds-markdown--page h2 { font-size: calc(var(--ds-md-zoom)*20px)=
; margin-top: calc(var(--ds-md-zoom)*26px); line-height: calc(var(--ds-md-z=
oom)*26px); margin-bottom: calc(var(--ds-md-zoom)*16px); }

.ds-markdown.ds-markdown--page h3 { font-size: calc(var(--ds-md-zoom)*18px)=
; margin-top: calc(var(--ds-md-zoom)*22px); line-height: calc(var(--ds-md-z=
oom)*22px); margin-bottom: calc(var(--ds-md-zoom)*14px); }

.ds-markdown.ds-markdown--page h4 { font-size: calc(var(--ds-md-zoom)*16px)=
; margin-top: calc(var(--ds-md-zoom)*20px); line-height: calc(var(--ds-md-z=
oom)*20px); margin-bottom: calc(var(--ds-md-zoom)*12px); }

.ds-markdown.ds-markdown--page > p, .ds-markdown.ds-markdown--page > pre, .=
ds-markdown.ds-markdown--page > .md-code-block { margin: calc(var(--ds-md-z=
oom)*16px)0 calc(var(--ds-md-zoom)*23px)0; }

.ds-markdown.ds-markdown--page hr { margin: calc(var(--ds-md-zoom)*18px)0; =
}

.ds-markdown.ds-markdown--page th { color: rgb(var(--ds-rgb-label-1)); padd=
ing: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*10px); border-bottom=
: 1px solid rgb(var(--ds-rgb-separator)); border-top: 1px solid rgb(var(--d=
s-rgb-separator)); }

.ds-markdown.ds-markdown--page th:not(:-webkit-any(:lang(ae), :lang(ar), :l=
ang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(g=
lk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :=
lang(sd), :lang(ug), :lang(ur), :lang(yi))) { text-align: left; }

.ds-markdown.ds-markdown--page th:not(:is(:lang(ae), :lang(ar), :lang(arc),=
 :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lan=
g(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd),=
 :lang(ug), :lang(ur), :lang(yi))) { text-align: left; }

.ds-markdown.ds-markdown--page th:-webkit-any(:lang(ae), :lang(ar), :lang(a=
rc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), =
:lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(=
sd), :lang(ug), :lang(ur), :lang(yi)) { text-align: right; }

.ds-markdown.ds-markdown--page th:is(:lang(ae), :lang(ar), :lang(arc), :lan=
g(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he)=
, :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lan=
g(ug), :lang(ur), :lang(yi)) { text-align: right; }

.ds-markdown.ds-markdown--page td { padding: calc(var(--ds-md-zoom)*8px)cal=
c(var(--ds-md-zoom)*10px); border-bottom: 1px solid rgb(var(--ds-rgb-separa=
tor)); }

.ds-markdown.ds-markdown--page td:first-child, .ds-markdown.ds-markdown--pa=
ge th:first-child { padding-left: 0px; }

.ds-markdown.ds-markdown--page td:last-child, .ds-markdown.ds-markdown--pag=
e th:last-child { padding-right: 0px; }

.ds-markdown-html { font-size: 0.875em; font-family: var(--ds-font-family-c=
ode); }

.ds-markdown-cite { vertical-align: middle; font-variant: tabular-nums; box=
-sizing: border-box; color: rgb(64, 64, 64); cursor: pointer; background: r=
gb(229, 229, 229); border-radius: 9px; flex-shrink: 0; justify-content: cen=
ter; align-items: center; height: 18px; margin-left: 4px; padding: 0px 6px;=
 font-size: 12px; font-weight: 400; display: inline-flex; position: relativ=
e; top: -2px; }

[data-ds-dark-theme] .ds-markdown-cite { color: rgb(248, 250, 255); backgro=
und: rgb(82, 82, 91); }

.cjk_fallback { font-family: serif !important; }

code[class*=3D"language-"], pre[class*=3D"language-"] { color: rgb(248, 248=
, 242); text-align: left; white-space: pre; word-spacing: normal; word-brea=
k: normal; overflow-wrap: normal; tab-size: 4; hyphens: none; background: 0=
px 0px; font-family: "Roboto Mono", Consolas, Monaco, "Andale Mono", "Ubunt=
u Mono", monospace; line-height: 1.5; }

pre[class*=3D"language-"] { border-radius: 0.3em; margin: 0.5em 0px; paddin=
g: 1em; overflow: auto; }

:not(pre) > code[class*=3D"language-"], pre[class*=3D"language-"] { backgro=
und: rgb(46, 52, 64); }

:not(pre) > code[class*=3D"language-"] { white-space: normal; border-radius=
: 0.3em; padding: 0.1em; }

.token.comment, .token.prolog, .token.doctype, .token.cdata { color: rgb(99=
, 111, 136); }

.token.punctuation { color: rgb(129, 161, 193); }

.namespace { opacity: 0.7; }

.token.property, .token.tag, .token.constant, .token.symbol, .token.deleted=
 { color: rgb(129, 161, 193); }

.token.number { color: rgb(180, 142, 173); }

.token.boolean { color: rgb(129, 161, 193); }

.token.selector, .token.attr-name, .token.string, .token.char, .token.built=
in, .token.inserted { color: rgb(163, 190, 140); }

.token.operator, .token.entity, .token.url, .language-css .token.string, .s=
tyle .token.string, .token.variable { color: rgb(129, 161, 193); }

.token.atrule, .token.attr-value, .token.function, .token.class-name { colo=
r: rgb(136, 192, 208); }

.token.keyword { color: rgb(129, 161, 193); }

.token.regex, .token.important { color: rgb(235, 203, 139); }

.token.important, .token.bold { font-weight: var(--ds-font-weight-strong); =
}

.token.italic { font-style: italic; }

.token.entity { cursor: help; }

.md-code-block { --ds-md-code-block-font-size: calc(var(--ds-md-zoom)*var(-=
-ds-font-size-xsp)); border-radius: calc(var(--ds-md-zoom)*10px); font-size=
: var(--ds-md-code-block-font-size); line-height: calc(var(--ds-md-code-blo=
ck-font-size)*1.6); color: rgb(255, 255, 255); background: rgb(24, 29, 40);=
 }

.md-code-block:not(:last-child) { margin-bottom: calc(var(--ds-md-zoom)*10p=
x); }

.md-code-block-banner-wrap { background-color: rgb(255, 255, 255); position=
: sticky; top: 0px; }

.md-code-block-banner { padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-m=
d-zoom)*12px); color: rgb(255, 255, 255); font-size: var(--ds-md-code-block=
-font-size); line-height: var(--ds-md-code-block-font-size); border-top-lef=
t-radius: calc(var(--ds-md-zoom)*10px); border-top-right-radius: calc(var(-=
-ds-md-zoom)*10px); background: rgb(80, 80, 90); justify-content: space-bet=
ween; display: flex; }

.md-code-block-footer { padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-m=
d-zoom)*12px); color: rgb(255, 255, 255); font-size: var(--ds-md-code-block=
-font-size); line-height: var(--ds-md-code-block-font-size); background: rg=
b(80, 80, 90); justify-content: flex-end; display: flex; }

.md-code-block-action { align-items: center; display: flex; }

.md-code-block > pre { padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md=
-zoom)*12px); white-space: pre-wrap; word-break: break-all; margin: 0px !im=
portant; }

[data-ds-dark-theme] .md-code-block-banner-wrap { background-color: rgb(41,=
 42, 45); }

.ds-auth-form-wrapper { width: 300px; padding-top: 48px; }

.ds-auth-form-loading-wrapper { color: rgb(var(--ds-rgb-primary)); justify-=
content: center; align-items: center; padding: 28px 0px; font-size: 28px; d=
isplay: flex; }

@media not all and (min-width: 768px) {
  .ds-auth-form-wrapper { max-width: 100%; }
}

.ds-verify-code-form-item { display: flex; }

.ds-verify-code-form-item > :not(:last-child) { margin-right: 12px; }

.ds-verify-code-form-item .ds-verify-code-form-item__verify-code-input { fl=
ex: 1 1 0%; }

.ds-verify-code-form-item .ds-verify-code-form-item__verify-code-button { f=
lex: 0 0 0%; }

.ds-audit-reason-form-item__checkbox-group { display: flex; }

.ds-audit-reason-form-item__checkbox-group > :not(:last-child) { margin-rig=
ht: 16px; }

.ds-audit-reason-form-item__checkbox-group > * { margin-bottom: 8px; }

.ds-audit-reason-form-item__checkbox-group { flex-wrap: wrap; margin-bottom=
: -8px; }

.grecaptcha-badge { visibility: hidden; }

.shumei_captcha_wrapper .shumei_captcha_img_refresh_btn { display: none !im=
portant; }

body { word-break: break-word; color: purple; --ds-toast-custom-font-size: =
16px; margin: 0px; }

body[data-ds-dark-theme] { background-color: var(--dsr-bg); }

body[data-ds-dark-theme].dark .ds-tooltip { --tooltip-color: #000; }

[data-ds-dark-theme] { --ds-toast-custom-box-shadow: 0px 4px 10.2px 0px rgb=
a(0,0,0,.25); --ds-toast-custom-color: #3a3a46; --ds-toast-custom-text-colo=
r: #f8faff; --ds-toast-custom-close-text-color: #f8faff; --ds-toast-custom-=
close-hover-color: #474756; --ds-md-inline-code-color: #424242; }

body { --dsr-main: #4d6bfe; --dsr-main-2: rgba(77,107,254,.4); --dsr-main-3=
: rgba(77,107,254,.2); --dsr-bg: rgb(var(--ds-rgb-white)); --dsr-text-0: rg=
b(var(--ds-rgb-black)); --dsr-text-1: rgb(var(--ds-rgb-neutral-800)); --dsr=
-text-2: rgb(var(--ds-rgb-neutral-600)); --dsr-text-3: rgb(var(--ds-rgb-neu=
tral-400)); --dsr-text-4: rgb(var(--ds-rgb-zinc-350)); --dsr-border-1: rgb(=
var(--ds-rgb-neutral-350)); --dsr-border-2: rgb(var(--ds-rgb-neutral-200));=
 --dsr-input-border: #dce0e9; --dsr-input-bg: rgb(var(--ds-rgb-gray-100)); =
--dsr-button-main-bg: var(--dsr-main); --dsr-button-main-bg-hover: #4166d5;=
 --dsr-button-second-bg: var(--dsr-main-3); --dsr-button-grey-0: rgb(var(--=
ds-rgb-neutral-150)); --dsr-button-grey-1: rgb(var(--ds-rgb-neutral-100)); =
--dsr-button-grey-2: rgb(var(--ds-rgb-neutral-50)); --dsr-delete-button-bg:=
 rgb(var(--ds-rgb-red-500)/.85); --dsr-delete-button-bg-hover: rgb(var(--ds=
-rgb-red-550)); --dsr-tooltip-fg: #eff6ff; --dsr-tooltip-bg: rgb(var(--ds-r=
gb-neutral-850)); --dsr-side-bg: #f9fbff; --dsr-side-hover-bg-rgb: 239,246,=
255; --dsr-side-hover-bg: rgb(var(--ds-rgb-blue-50)); --dsr-icon-fg-1: rgb(=
var(--ds-rgb-neutral-650)); --dsr-icon-hover-0: rgb(var(--ds-rgb-neutral-15=
0)); --dsr-icon-hover-1: rgb(var(--ds-rgb-neutral-100)); --dsr-side-icon-ho=
ver: rgb(var(--ds-rgb-slate-100)); --dsr-error-fg: rgb(var(--ds-rgb-red-550=
)); }

body[data-ds-dark-theme] { --dsr-bg: #292a2d; --dsr-text-0: rgb(var(--ds-rg=
b-white)); --dsr-text-1: rgb(var(--ds-rgb-zinc-200)); --dsr-text-2: rgb(var=
(--ds-rgb-zinc-350)); --dsr-text-3: rgb(var(--ds-rgb-neutral-300)); --dsr-t=
ext-4: rgb(var(--ds-rgb-zinc-400)); --dsr-border-1: rgb(var(--ds-rgb-neutra=
l-450)); --dsr-border-2: rgb(var(--ds-rgb-neutral-600)); --dsr-input-border=
: #5a5a69; --dsr-input-bg: #404045; --dsr-button-main-bg: #509fff; --dsr-bu=
tton-main-bg-hover: #4166d5; --dsr-button-second-bg: var(--dsr-main-2); --d=
sr-button-grey-0: rgb(var(--ds-rgb-neutral-600)); --dsr-button-grey-1: rgb(=
var(--ds-rgb-neutral-650)); --dsr-button-grey-2: rgb(var(--ds-rgb-neutral-7=
00)); --dsr-delete-button-bg: rgb(var(--ds-rgb-red-500)/.85); --dsr-delete-=
button-bg-hover: rgb(var(--ds-rgb-red-550)/.45); --dsr-tooltip-fg: rgb(var(=
--ds-rgb-zinc-650)); --dsr-tooltip-bg: #000; --dsr-side-bg: #212327; --dsr-=
side-hover-bg-rgb: 51,51,51; --dsr-side-hover-bg: rgb(var(--ds-rgb-neutral-=
750)); --dsr-icon-fg-1: rgb(var(--ds-rgb-neutral-350)); --dsr-icon-hover-0:=
 rgb(var(--ds-rgb-neutral-500)); --dsr-icon-hover-1: rgb(var(--ds-rgb-neutr=
al-700)); --dsr-side-icon-hover: rgb(var(--ds-rgb-zinc-750)); --dsr-error-f=
g: rgb(var(--ds-rgb-red-450)); }
------MultipartBoundary--fdOnjK2T5C2RpZV2JgMgfa0Io4YenUpag4Gm1ntYXL----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@400;500&display=swap

@charset "utf-8";

@font-face { font-family: "Roboto Mono"; font-style: normal; font-weight: 4=
00; font-display: swap; src: url("https://fonts.gstatic.com/s/robotomono/v2=
3/L0xTDF4xlVMF-BfR8bXMIhJHg45mwgGEFl0_3vrtSM1J-gEPT5Ese6hmHSV0mf0h.woff2") =
format("woff2"); unicode-range: U+460-52F, U+1C80-1C8A, U+20B4, U+2DE0-2DFF=
, U+A640-A69F, U+FE2E-FE2F; }

@font-face { font-family: "Roboto Mono"; font-style: normal; font-weight: 4=
00; font-display: swap; src: url("https://fonts.gstatic.com/s/robotomono/v2=
3/L0xTDF4xlVMF-BfR8bXMIhJHg45mwgGEFl0_3vrtSM1J-gEPT5Ese6hmHSx0mf0h.woff2") =
format("woff2"); unicode-range: U+301, U+400-45F, U+490-491, U+4B0-4B1, U+2=
116; }

@font-face { font-family: "Roboto Mono"; font-style: normal; font-weight: 4=
00; font-display: swap; src: url("https://fonts.gstatic.com/s/robotomono/v2=
3/L0xTDF4xlVMF-BfR8bXMIhJHg45mwgGEFl0_3vrtSM1J-gEPT5Ese6hmHSt0mf0h.woff2") =
format("woff2"); unicode-range: U+370-377, U+37A-37F, U+384-38A, U+38C, U+3=
8E-3A1, U+3A3-3FF; }

@font-face { font-family: "Roboto Mono"; font-style: normal; font-weight: 4=
00; font-display: swap; src: url("https://fonts.gstatic.com/s/robotomono/v2=
3/L0xTDF4xlVMF-BfR8bXMIhJHg45mwgGEFl0_3vrtSM1J-gEPT5Ese6hmHSd0mf0h.woff2") =
format("woff2"); unicode-range: U+102-103, U+110-111, U+128-129, U+168-169,=
 U+1A0-1A1, U+1AF-1B0, U+300-301, U+303-304, U+308-309, U+323, U+329, U+1EA=
0-1EF9, U+20AB; }

@font-face { font-family: "Roboto Mono"; font-style: normal; font-weight: 4=
00; font-display: swap; src: url("https://fonts.gstatic.com/s/robotomono/v2=
3/L0xTDF4xlVMF-BfR8bXMIhJHg45mwgGEFl0_3vrtSM1J-gEPT5Ese6hmHSZ0mf0h.woff2") =
format("woff2"); unicode-range: U+100-2BA, U+2BD-2C5, U+2C7-2CC, U+2CE-2D7,=
 U+2DD-2FF, U+304, U+308, U+329, U+1D00-1DBF, U+1E00-1E9F, U+1EF2-1EFF, U+2=
020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: "Roboto Mono"; font-style: normal; font-weight: 4=
00; font-display: swap; src: url("https://fonts.gstatic.com/s/robotomono/v2=
3/L0xTDF4xlVMF-BfR8bXMIhJHg45mwgGEFl0_3vrtSM1J-gEPT5Ese6hmHSh0mQ.woff2") fo=
rmat("woff2"); unicode-range: U+0-FF, U+131, U+152-153, U+2BB-2BC, U+2C6, U=
+2DA, U+2DC, U+304, U+308, U+329, U+2000-206F, U+20AC, U+2122, U+2191, U+21=
93, U+2212, U+2215, U+FEFF, U+FFFD; }

@font-face { font-family: "Roboto Mono"; font-style: normal; font-weight: 5=
00; font-display: swap; src: url("https://fonts.gstatic.com/s/robotomono/v2=
3/L0xTDF4xlVMF-BfR8bXMIhJHg45mwgGEFl0_3vrtSM1J-gEPT5Ese6hmHSV0mf0h.woff2") =
format("woff2"); unicode-range: U+460-52F, U+1C80-1C8A, U+20B4, U+2DE0-2DFF=
, U+A640-A69F, U+FE2E-FE2F; }

@font-face { font-family: "Roboto Mono"; font-style: normal; font-weight: 5=
00; font-display: swap; src: url("https://fonts.gstatic.com/s/robotomono/v2=
3/L0xTDF4xlVMF-BfR8bXMIhJHg45mwgGEFl0_3vrtSM1J-gEPT5Ese6hmHSx0mf0h.woff2") =
format("woff2"); unicode-range: U+301, U+400-45F, U+490-491, U+4B0-4B1, U+2=
116; }

@font-face { font-family: "Roboto Mono"; font-style: normal; font-weight: 5=
00; font-display: swap; src: url("https://fonts.gstatic.com/s/robotomono/v2=
3/L0xTDF4xlVMF-BfR8bXMIhJHg45mwgGEFl0_3vrtSM1J-gEPT5Ese6hmHSt0mf0h.woff2") =
format("woff2"); unicode-range: U+370-377, U+37A-37F, U+384-38A, U+38C, U+3=
8E-3A1, U+3A3-3FF; }

@font-face { font-family: "Roboto Mono"; font-style: normal; font-weight: 5=
00; font-display: swap; src: url("https://fonts.gstatic.com/s/robotomono/v2=
3/L0xTDF4xlVMF-BfR8bXMIhJHg45mwgGEFl0_3vrtSM1J-gEPT5Ese6hmHSd0mf0h.woff2") =
format("woff2"); unicode-range: U+102-103, U+110-111, U+128-129, U+168-169,=
 U+1A0-1A1, U+1AF-1B0, U+300-301, U+303-304, U+308-309, U+323, U+329, U+1EA=
0-1EF9, U+20AB; }

@font-face { font-family: "Roboto Mono"; font-style: normal; font-weight: 5=
00; font-display: swap; src: url("https://fonts.gstatic.com/s/robotomono/v2=
3/L0xTDF4xlVMF-BfR8bXMIhJHg45mwgGEFl0_3vrtSM1J-gEPT5Ese6hmHSZ0mf0h.woff2") =
format("woff2"); unicode-range: U+100-2BA, U+2BD-2C5, U+2C7-2CC, U+2CE-2D7,=
 U+2DD-2FF, U+304, U+308, U+329, U+1D00-1DBF, U+1E00-1E9F, U+1EF2-1EFF, U+2=
020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: "Roboto Mono"; font-style: normal; font-weight: 5=
00; font-display: swap; src: url("https://fonts.gstatic.com/s/robotomono/v2=
3/L0xTDF4xlVMF-BfR8bXMIhJHg45mwgGEFl0_3vrtSM1J-gEPT5Ese6hmHSh0mQ.woff2") fo=
rmat("woff2"); unicode-range: U+0-FF, U+131, U+152-153, U+2BB-2BC, U+2C6, U=
+2DA, U+2DC, U+304, U+308, U+329, U+2000-206F, U+20AC, U+2122, U+2191, U+21=
93, U+2212, U+2215, U+FEFF, U+FFFD; }
------MultipartBoundary--fdOnjK2T5C2RpZV2JgMgfa0Io4YenUpag4Gm1ntYXL----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-9d89947b-7d00-46f1-8270-6120bc8aef44@mhtml.blink

@charset "utf-8";

@keyframes intercom-lightweight-app-launcher {=20
  0% { opacity: 0; transform: scale(0.5); }
  100% { opacity: 1; transform: scale(1); }
}

@keyframes intercom-lightweight-app-gradient {=20
  0% { opacity: 0; }
  100% { opacity: 1; }
}

@keyframes intercom-lightweight-app-messenger {=20
  0% { opacity: 0; transform: scale(0); }
  40% { opacity: 1; }
  100% { transform: scale(1); }
}

.intercom-lightweight-app { position: fixed; z-index: 2147483001; width: 0p=
x; height: 0px; font-family: intercom-font, "Helvetica Neue", "Apple Color =
Emoji", Helvetica, Arial, sans-serif; }

.intercom-lightweight-app-gradient { position: fixed; z-index: 2147483002; =
width: 500px; height: 500px; bottom: 0px; right: 0px; pointer-events: none;=
 background: radial-gradient(at right bottom, rgba(29, 39, 54, 0.16) 0%, rg=
ba(29, 39, 54, 0) 72%); animation: 200ms ease-out 0s 1 normal none running =
intercom-lightweight-app-gradient; }

.intercom-lightweight-app-launcher { position: fixed; z-index: 2147483003; =
border: none; bottom: 20px; right: 20px; max-width: 48px; width: 48px; max-=
height: 48px; height: 48px; border-radius: 50%; background: rgb(15, 15, 15)=
; cursor: pointer; box-shadow: rgba(0, 0, 0, 0.06) 0px 1px 6px 0px, rgba(0,=
 0, 0, 0.16) 0px 2px 32px 0px; transition: transform 167ms cubic-bezier(0.3=
3, 0, 0, 1); box-sizing: content-box; padding: 0px !important; margin: 0px =
!important; }

.intercom-lightweight-app-launcher:hover { transition: transform 250ms cubi=
c-bezier(0.33, 0, 0, 1); transform: scale(1.1); }

.intercom-lightweight-app-launcher:active { transform: scale(0.85); transit=
ion: transform 134ms cubic-bezier(0.45, 0, 0.2, 1); }

.intercom-lightweight-app-launcher:focus { outline: none; }

.intercom-lightweight-app-launcher-icon { display: flex; align-items: cente=
r; justify-content: center; position: absolute; top: 0px; left: 0px; width:=
 48px; height: 48px; transition: transform 100ms linear, opacity 80ms linea=
r; }

.intercom-lightweight-app-launcher-icon-open { opacity: 1; transform: rotat=
e(0deg) scale(1); }

.intercom-lightweight-app-launcher-icon-open svg { width: 24px; height: 24p=
x; }

.intercom-lightweight-app-launcher-icon-open svg path { fill: rgb(255, 255,=
 255); }

.intercom-lightweight-app-launcher-icon-self-serve { opacity: 1; transform:=
 rotate(0deg) scale(1); }

.intercom-lightweight-app-launcher-icon-self-serve svg { height: 44px; }

.intercom-lightweight-app-launcher-icon-self-serve svg path { fill: rgb(255=
, 255, 255); }

.intercom-lightweight-app-launcher-custom-icon-open { max-height: 24px; max=
-width: 24px; opacity: 1; transform: rotate(0deg) scale(1); }

.intercom-lightweight-app-launcher-icon-minimize { opacity: 0; transform: r=
otate(-60deg) scale(0); }

.intercom-lightweight-app-launcher-icon-minimize svg path { fill: rgb(255, =
255, 255); }

.intercom-lightweight-app-messenger { position: fixed; z-index: 2147483003;=
 overflow: hidden; background-color: white; animation: 250ms cubic-bezier(0=
, 1, 1, 1) 0s 1 normal none running intercom-lightweight-app-messenger; tra=
nsform-origin: right bottom; width: 400px; height: calc(100% - 40px); max-h=
eight: 704px; min-height: 250px; right: 20px; bottom: 20px; box-shadow: rgb=
a(0, 0, 0, 0.16) 0px 5px 40px; border-radius: 16px; }

.intercom-lightweight-app-messenger-header { height: 64px; border-bottom: n=
one; background: white; }

.intercom-lightweight-app-messenger-footer { position: absolute; bottom: 0p=
x; width: 100%; height: 80px; background: rgb(255, 255, 255); font-size: 14=
px; line-height: 21px; border-top: 1px solid rgba(0, 0, 0, 0.05); box-shado=
w: rgba(0, 0, 0, 0.05) 0px 0px 25px; }

@media print {
  .intercom-lightweight-app { display: none; }
}
------MultipartBoundary--fdOnjK2T5C2RpZV2JgMgfa0Io4YenUpag4Gm1ntYXL----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-5ec2dd9a-84c4-413a-bf47-8c13343db13a@mhtml.blink

@charset "utf-8";

@font-face { font-family: Inter; src: url("chrome-extension://ddlbpiadoechc=
olndfeaonajmngmhblj/assets/Inter-Regular.ttf"); font-weight: 400; }

@font-face { font-family: Inter; src: url("chrome-extension://ddlbpiadoechc=
olndfeaonajmngmhblj/assets/Inter-SemiBold.ttf"); font-weight: 600; }

@font-face { font-family: Inter; src: url("chrome-extension://ddlbpiadoechc=
olndfeaonajmngmhblj/assets/Inter-Black.ttf"); font-weight: 900; }
------MultipartBoundary--fdOnjK2T5C2RpZV2JgMgfa0Io4YenUpag4Gm1ntYXL----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-1f6e68be-a0d2-4d85-9872-d586443ff9ba@mhtml.blink

@charset "utf-8";

body.change-theme * { transition: none !important; }

body.change-theme ::before { transition: none !important; }

body.change-theme ::after { transition: none !important; }
------MultipartBoundary--fdOnjK2T5C2RpZV2JgMgfa0Io4YenUpag4Gm1ntYXL----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-8d23a3d4-f2ad-49fe-8506-d58d78cc8b16@mhtml.blink

@charset "utf-8";

.css-10axhgb { z-index: 10001199; }
------MultipartBoundary--fdOnjK2T5C2RpZV2JgMgfa0Io4YenUpag4Gm1ntYXL----
Content-Type: text/html
Content-ID: <frame-3C6197252C842BFFE405C636FEED51EC@mhtml.blink>
Content-Transfer-Encoding: quoted-printable

<html lang=3D"en"><head><meta http-equiv=3D"Content-Type" content=3D"text/h=
tml; charset=3DUTF-8">
       =20
      </head>
      <body>
     =20
    </body></html>
------MultipartBoundary--fdOnjK2T5C2RpZV2JgMgfa0Io4YenUpag4Gm1ntYXL------
